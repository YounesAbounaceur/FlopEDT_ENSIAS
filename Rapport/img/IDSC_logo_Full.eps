%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: IDSC_logo_Full.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: siegelh
%%CreationDate: 5/27/2009
%%BoundingBox: 0 0 743 171
%%HiResBoundingBox: 0 0 742.5606 170.5196
%%CropBox: 0 0 742.5606 170.5196
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-27T17:25:22+02:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-27T17:25:23+02:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-27T17:25:23+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>60</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAPAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq8/1HQfO769rt9YSzWkMpebT1ikgCzTCCzhh9XmWPBGt5m4/DUP1xVLJvLHnXVrmObUYrqWGO&#xA;7u+CXcttT6vcz2cY5wRu8fFLZ7r4eTV4VFOariqN0bRfOmmR2unol36N79Vubm4M8T/Vpfr093qC&#xA;uWkZi00bxxDhy3JNR1xVD+V/L/5iabqGh2ktzcW+lWtvbfWYQlvcQljDzvFllNyknNrhmVeMTgDi&#xA;VNOWKq+reXfM9v5g1fVrGG8K6pM9WsJrZbmlvawR2S8rghUg9b6wzqN+RWoK8sVZR5NsPMFvY3E/&#xA;mC5ebVLmeUyR8gYI445GSL0FUkKsiASb/F8VD0oFWMax5h8wW2r3UCXbqsUrCNQF2WtV7eGefdod&#xA;q6rFnnETIAka5cunR6bTaPDLHE8PMN2fnPzDEwMkiXC91kQD8U45Vh9ptTA7kTHmP1UuTszCeQpl&#xA;eieaLPUiIWH1e6/30xqG/wBVu/yzquzO3cWqPD9GTu7/AHF0+q0E8W/OKdZvHBdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdiryKy/xFpGh2+t2tjeaXe2mnRnV47pl46hfvcQMtrHCWk+OQiWFZiin94tK&#xA;1qqqd8PzTjE1z9aa4v0laKHTuFulkxewe5JMnpCX00unWBG51+D4q1bFUGR+ZE011Hb3urRaeIfX&#xA;jmuYNPW6aaK3mLxRhIXRVknaL7QJ+EgUU1KqrLb/AJiQXqLJJc36WwJe/wDRs/rCGUWPrG2X01jI&#xA;Cvc8FNTsa86KCqjfM1nrF3+X4tVt9S1K9ml5Rx3KWyzn0pGlgS7SBoUMMhRI240cK3JqEMQqltxf&#xA;fmDcQ6jHpU0zWel3n1K0a0W3eW5JcSyI0twjhFtR/ook4vV+RcGhYKuS0/Me2vkjtZruK1ubu6uE&#xA;cRWsoLy6hLRbkNxKRLaCNhxYE8moeQRcVRNvB+ZAlhvpb+9k2066m04RWSoWub1lurYExBgLe0Hx&#xA;fvK1IblXFUXZS+eB5OsTdNetqL3bLqdwqWv10WoMg9WGHiIkLsE+AhmRGNCxAOKoHSz+Z7Qrczz3&#xA;XrQzwxW9ncxWiLLG91O0j3TQRtutq0SVjZVDLXfeqqI8sWnnG41LUry8kvUul0qGGyk1KO1WNb6Z&#xA;5TcektsBWKNoovt1JHQkGpVUINOuLeyNzo+jarp+uRx28Wp6jK0cs8kbSx/WePqzSxXM6xqzK7I4&#xA;H7O54lVW08fmM8iyzXF3Hb201kILeaO09SeGbU5UuDclIz8SWHpn92y07/FXFUv0rTvzBtNOhee7&#xA;1FbUzIt3b28dmblUuYXu7iZOcXxP9alSE/yqH4j9rFWVeR7XzCg1G519WF9LJbxoz8KtFHaRHkfT&#xA;/d8vVkkD8AF5A02xVJfN1lx8wSOBT10ST8OH/Guebe1EODVE/wA6IP6P0PSdm5LwgdxKEhsqjYZz&#xA;sMc58nJlkpuS1aMh1qrqQVYbEEdCMJE8RvuQJiWzOtA1Jr/Tkkk/vkPpze7Dv9I3z1TsXtD81pxM&#xA;/UNj7/2vO6zB4eQgcuiY5tnFdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqA1zXdN0SwN7fyFY+SxQxIpeWWWQ0SKKNas8jnYKMVQNtZ69qgW41WVtNtnFU0q0ek&#xA;gB6fWLpfi59PhhKgGo5ON8VUNZ8sepJAdOhjjVQwl6KSdqMT1YnuTvnK+0fY+XVyhLFW1g3t7v0u&#xA;y0OqjjBEllvol7CP3kVQO6kHNZh7Ez4h6o37qLbk1cJcil+pIqkrShHUHY5qO0ICNg7FydOSUw8l&#xA;Mf8ATV/ZBjI+Z5V/Vm+9jCeHIOnp/wB843ao+n4/oZPnbOodirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirw3yz55tfOf/OQc8M0itpOgWl1D5fjJ+F7tXjjmnHZm&#xA;aP1eJ/kGKUg13zBf39tfrca3c6dZa358OnC8W6aD0NLsk4zNHIxpEO/SleuKqkPmLzbffl9rdppn&#xA;maW9sdP1822l6rdXqWd7qOnQRmWe2gvW48pduQk3qK9tsVRF15kfWl8geXx5k1TQ/KmuWd1eXWq3&#xA;dyseoTyROwS1a8Ip8BAAP7SkdSRir1K20bSrXyaG0/Vp9at4WeS31O5uReSMpkoY/XH21Q1UeFM5&#xA;32l0MMumlPlOHX9Dndn5SMgj0KceUbJ4NL9aQUkum9QDvwpRf64+zOiOHTcR5zN/Dp+v4p7Ry8WS&#xA;h/CnedE692KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVBa3cS22&#xA;i39zCaSwW00kZ8GSMsPxGKvhvydcXdnqdvf2c7295A4kinQ0ZW8a/ryJZPd7XzP5OfQLe38yeVrC&#xA;/topHuFEMaAerN/eyek4K83pViCMAkxtHy/m9+SV/bWfl280Bhp/qpFbWUtjbG3hZ3ADKiuyoKmp&#xA;4jJJepax5S8o6npUOnarpVncaZZgfVreaKP0oQo4j0xQCOi7fDTbBKQAs7BQCTQdBpNjJZwabZWq&#xA;WehWwUJbxIIkcKaqiIoHGOu5237bb5gZsX5qokfueZ/pdw/q/f023cmEvC3/AI/u/anIAAoNgOgz&#xA;YgOK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVlxBFcQSQT&#xA;KHilVkkQ9CrChH3Yq+Eda0u98peaNQ0K8qJtPnaIORTnHWscg9nQhh88BSi5fNMjW/p8tqYKViup&#xA;6gXfmrUYGoI6g4Uvvny3d2+saBpWst+9N/aQXaljUAzRrJVV+yp+LtlXgxuzufP8UPgnxDyGzFtK&#xA;/NG7uNJhvZdIln9ZeMTWpX97O2njUkijiJd/7o+mT15igBrtcwQV/wDmfrzR3U2nWdsUS3SWxVn9&#xA;USyvZrMVeRWjHESXMFOO7DbblVVU41n8wbqCyVdOsFk1OaSeC3imkpF6lvqMGmkMy7/HLc/D0qBi&#xA;qtqnmXXYvNR0u3WGKz9KzRZWQyt9avJZSa/HEOKQ2zbdakH2KqD078wNTvfJ+q6xDaRmTTrRDa3j&#xA;njDd3b2sc6FYAxZIi0yjeSvUVNK4qvufzAuNCvryx15Yr1oHiSG806No1ea5hllhtDBJJMyzubfi&#xA;v7w8i8fTlTFVSP8AMhuUaTaPMkly9xBYKksTiaa1vo7CQcqqET1JlZWPVamnQMqhl/NG5dp0j0KS&#xA;SSznjtrxUuYSFlnvDYQqjbK/O4RhvSgBrQ7YqsH5piO+JuLCRLFHFrevVSlrcQz3EU9ZFJ5hvSUx&#xA;jite3xMq4qi77zvr8cmniPRDGbmRpfRkuIGL2Ys5pixZGPpOkixhvhZd6AnqFVbQvzGt9a1qOwtd&#xA;KvhaSkouotBIIRIsImYM/D01UfYrzrz2puCVUHP+Yr6VqupjWfSbTLeaNLY2sZaRYpYp2hkZ/UdZ&#xA;vWltWgVVVWEvw0OxxVRvvzQvrRw1xo7W0NlNMNYieT1J0ggspbl3iVBRvijHA14sNtmrwVXS/mrc&#xA;R2c0r+XryK4tYbq8ubecNb0tbKKKWWSMzxxlz+/VOIX7Xfj8WKt3/wCasljO9lJ5fvZ9UtzI15Z2&#xA;gN16aRRwybPCjhnZbpQAaLyBBYbEqs+xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5h+c/5K2fn21j&#xA;vrGVLHzJaJwguXB9OaPciKam9AT8LCtN9jir5J82eUPOXlO6Nr5g0yayapEczDlDJ/xjlWsb/QcW&#xA;TG3dmO+BX3F/zj3qw1T8odCLnk9qktnKDvtBKyIP+RfHCxRLeYvKdzDp2m2vlxL5NRSN7WyWK19M&#xA;LPDc8C3NhGAYtPcfKg9sVUIPNGg3aaW2g+XI/qt/c2NqLyaC3ijjE8FvcPH6QYS8o7SGMbLxVkQb&#xA;hNlUHeecNO0/zhr6tolrNZWTxy38sFoFu5miWFrWT1mYJPJ9dcxonGsZAcsMVR2peePLl1o9/dXn&#xA;lia7SGCS81m1uYbZaW9luJG+sMqzdax0r0P2TiqnJ530G8gu9GsvLzC2luksybm0RrCaX69DYSiR&#xA;UNPtP8JYUISvYVVaXX/KarokOl+X5PT9GDXLOxs1treFTcW07h5ULRLzhji3r0Z0IqaUVVr7zh5X&#xA;mtoinliXU9Nu/rFrA0cFrJ6skUD381usDP6hqbc/s0aQf6pKqBg89aBYzejb+WEFjMtkNPjso7Z2&#xA;eUpJqJLek3AJCZA6EftsT+1sqj7vXNAOn3OuWHlTmNNtpbw381vaxm2nayF4VdGdZw3FlWTiPtGm&#xA;+9FVCDzH5Z0eG7h/wkLW6s4LqbWLe1gs14RW1vay3DEJIQ/OG9jogJY0K9BXFVTyj5k0jUPPWo2V&#xA;tpVob+BGrqUFtHbyrbLNLGvqO0jySBkjhVQg/wApggKqFWXSeU/LzTLLHYw27fW11CYQRpEJ7lOR&#xA;SSfgB6hV39Qcv2wG6jFVeHy9oEDyvDplpE87SSTMkEal3mFJWYhfiMg+0T174qtt/LXly2tja2+l&#xA;WcNsySRtBHbxLGUm4+qpUKBST015DvQV6Yquu/L2gXjpJeaZaXLxyGeN5oI5CspoDIpZTRjwX4uu&#xA;wxVH4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVG8+qfVpPrnp/VeP771uPp8f8AK5bU+eKsAu/+&#xA;hePrL/XP8I/Wa/vfW/RnOtP2uW+Kss8p/wCDv0Uf8I/o79E+o1f0T6H1f1aDn/vP8HKlK98VQmk/&#xA;8q++ty/or9H/AFv15PV+r+nz9b025/Z3rw5/j74qpWn/ACrX9NWP1T9GfpfhH+jvS9L1uP1Y+n6d&#xA;N6/VelN/Tp+zTFUTe/4F5SfXfqFeN363ren9jmn1zny/Z5+n6ldq8a70xVgvnP8A5VX6mjfWOX6L&#xA;/e0+pfUvqvD119f1PrH77l61PU+rfvOnLtirM4v+Vc/pi49L9G/pb11+scfS9X1/rCUrTfn9Z4cu&#xA;/qca/FTFWtL/AOVcenN+i/0b6dJ/X+r+nx4+mnrcuG3H0+HtxpTbFWHp/wAqq/x1e/pD/eiknD69&#xA;9R+q8vSXn6dP9L/uqcPV+Cn2P2cVZZcf8qw/Qy+v+i/0R6sXpV9H0vV+qr6Xp0/a+qcacf8Adf8A&#xA;k1xVq8/5Vb9eb61+ifrno/Hy9GvpfV+/b/eX/kn/AJOKpjd/4O+san9b+p+v6T/pb1OHL0vTi9T1&#xA;q/s+n6XKvbjiqzTP8E/XLf8ARv1P65zl+r+hw9Tl6EXq047/ANz6XL24+2Kp/irsVdirsVf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:BF077798D24ADE11A37CF49C46FDBC55</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C0077798D24ADE11A37CF49C46FDBC55</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>750.000000</stDim:w>
            <stDim:h>190.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -170.52 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 170.52 li
742.561 170.52 li
742.561 0 li
cp
clp
[1 0 0 1 0 0 ]ct
330.029 72.48 mo
334.88 72.48 li
331.394 96.0723 li
326.525 96.0723 li
330.029 72.48 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.129412 .121569 .117647 rgb
f
341.182 72.48 mo
347.255 72.48 li
348.812 72.48 350.474 72.8223 352.241 73.5039 cv
354.008 74.188 355.439 75.3818 356.536 77.0879 cv
357.631 78.7959 358.18 80.8052 358.18 83.1172 cv
358.18 85.1772 357.794 87.082 357.021 88.832 cv
356.249 90.582 355.191 92.0215 353.85 93.1523 cv
352.508 94.2852 351.184 95.0547 349.878 95.4629 cv
348.573 95.8691 347.033 96.0723 345.261 96.0723 cv
337.713 96.0723 li
341.182 72.48 li
345.376 77.2959 mo
343.366 91.2227 li
345.161 91.2227 li
348.033 91.2227 350.073 90.457 351.281 88.9277 cv
352.489 87.3984 353.094 85.4351 353.094 83.0352 cv
353.094 81.272 352.544 79.876 351.444 78.8442 cv
350.342 77.812 348.835 77.2959 346.921 77.2959 cv
345.376 77.2959 li
345.376 77.2959 li
cp
f
377.613 74.978 mo
374.99 78.4102 li
374.092 77.7749 373.344 77.2959 372.752 76.9731 cv
372.16 76.6489 371.57 76.4883 370.984 76.4883 cv
370.086 76.4883 369.353 76.748 368.783 77.269 cv
368.214 77.79 367.93 78.4521 367.93 79.2529 cv
367.93 79.96 368.239 80.5771 368.856 81.104 cv
369.473 81.6309 370.53 82.2183 372.025 82.8662 cv
373.223 83.6211 374.043 84.1992 374.486 84.6011 cv
374.93 85.0029 375.346 85.6011 375.736 86.3965 cv
376.125 87.1934 376.318 88.0664 376.318 89.0117 cv
376.318 91.0488 375.557 92.7832 374.027 94.2148 cv
372.502 95.6465 370.655 96.3613 368.487 96.3613 cv
365.888 96.3613 363.384 95.3438 360.976 93.3086 cv
363.743 89.8926 li
364.365 90.3242 365.079 90.8008 365.881 91.3223 cv
366.684 91.8438 367.48 92.1035 368.271 92.1035 cv
369.133 92.1035 369.87 91.8203 370.481 91.25 cv
371.092 90.6816 371.398 89.9961 371.398 89.1934 cv
371.398 88.4629 371.095 87.8223 370.491 87.2715 cv
369.885 86.7207 368.978 86.1914 367.769 85.6899 cv
366.559 85.186 365.699 84.7432 365.189 84.3599 cv
364.681 83.9771 364.172 83.3691 363.663 82.5371 cv
363.153 81.7041 362.899 80.6699 362.899 79.436 cv
362.899 77.3413 363.663 75.603 365.189 74.2261 cv
366.717 72.8481 368.648 72.1592 370.984 72.1592 cv
373.332 72.1572 375.541 73.0981 377.613 74.978 cv
f
401.27 74.0981 mo
400.641 78.4111 li
399.07 77.105 397.246 76.4521 395.162 76.4521 cv
392.811 76.4521 390.756 77.3149 388.998 79.04 cv
387.234 80.7651 386.355 82.7651 386.355 85.041 cv
386.355 87.0781 386.986 88.7344 388.25 90.0098 cv
389.514 91.2852 391.152 91.9238 393.166 91.9238 cv
395.01 91.9238 397 91.3418 399.131 90.1797 cv
398.43 94.9785 li
396.492 95.9844 394.514 96.4883 392.5 96.4883 cv
389.002 96.4883 386.264 95.3848 384.289 93.1816 cv
382.311 90.9766 381.326 88.3594 381.326 85.3291 cv
381.326 81.3052 382.646 78.0962 385.295 75.708 cv
387.943 73.3169 390.848 72.123 394.01 72.123 cv
396.896 72.1211 399.316 72.7803 401.27 74.0981 cv
f
gsave
0 -.0288086 mo
742.561 -.0288086 li
742.561 170.52 li
0 170.52 li
0 -.0288086 li
cp
clp
357.784 47.0039 mo
357.784 47.0039 312.202 59.021 315.786 85.3711 cv
319.276 111.023 368.732 108.494 368.732 108.494 cv
378.799 164.732 li
282.683 174.701 273.66 66.2759 357.784 47.0039 cv
clp
298.823 46.188 mo
380.053 46.188 li
380.053 166.322 li
298.823 166.322 li
298.823 46.188 li
cp
clp
298.776 166.465 mo
298.776 45.9368 li
380.184 45.9368 li
380.184 166.465 li
cp
gsave
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 255 
/Lookup <~
+<DR's8O5_*[)RF+s%gL+!)UJ+<hpM,Tn6U+sA6U+seEV-6aZ],9eHZ,UOc]-mU)d,pXoc-7UAi.OHMn
-mpPo-S6hu/h8G*/1WA*/hnq/0eY.80JG:;1,UgA2D[*H1c%$H1H.0J2`3HQ2E!QS2``lU3B&oZ3&`lX
3BT;]4#o>b3]T>b3^5_e5!1nh3]fSi3^>hk5s@Cs5!;4s4[M@s6U3h&5X.Y&5=@e&77'4.6U4(.5t4:0
84>j86pXI96VBp<7n,j:77'X;77g$=8kDED84Q<F7ncKE9hIrN91VcL85;fK:.n,Q9LqrQ8P`#O:/+>V
9hA/U8l8AV:ej_^:J+GZ9N"\[;,Btb:et"e9N+e^;Gg1g;GC(f:K14d<DuXm<)HXp:K17h77':@<Dljt
:fg[p=BAC&=&N1&;d!1#<`Mst<`3(&<*NL*>?Os2>#nj2='f-5?X6c@>ut65<a]69?XR&G?WgiG>$P?7
?=-iE?s@&J>[h/JA7AbQ@pEMR?=RJMARetV@pW_X?<^Z8A7AbUARK+^?Y<qVAnGI`Am]1`?tX+]BP:gf
BObaj@VKOeCMRHoAm]:fASZ'lD/3ZuCh7L"ASl9rD/Es(DJ*j)B5_^%E,]N1E+s$!?u^1$E,o`7Ebf]9
CN4E3;,0c(EGBQ9CiXW7FEDAAFDZ)ADJsH,F`hSDG&MMIE-?JGGBn1OG&MGCCj:8HH$aUZHujU]FF/FY
I=?<dIWg0iG'A.LF`q_HF`)\ZGCY6hJV&/lG]A7aG_1QoJ:r6$KR89(HW=$@H@'[aL4"W-I=m<'KSY)/
KRA6#G\q;0I!p*jM1:8;J;9&6LPp_>N.QnGK8P\BM2d.GO+iOSL5_4KNKK!GK6`K?Ll[aVO-PN]P_X!e
@>g2#OHbWbQ\prlN09QdOd1ifR#@/rN0KcjPaIJiNJ)7fB9S[AIt)ZfH?"b"Jru:RDK'<*Bk!<oNeW=<
~>
>>
/CSD add_res
/0 /CSD get_res idxcs
clp
[1 0 0 -1 0 170.52 ]ct
[81.408 0 0 -120.528 298.776 124.583 ]ct
snap_to_device
<<
/T 1
/W 169 
/H 250 
/M[169 0 0 -250 0 250 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcOI(rrK2$Y5nS'ec:C(!W`<%JcOL)rrK/#YQ4\(eGt=(rrN-"JcOO*rrK,"YlOe)e,Y7(rrN*!JcOR+
rrK)!Z2jn*df>1(rrN&uJcOU,rrK%uZN1"+dK&P4pB%>prrN#taoLH'f)XY-rrL7BqZ>j]!!<'"\H)X1
d/a1HqZ>LSqZ=J3rrMusfDtjOd0'=KirIs:rrL[Nr;uBhmf`Ihp&k6p_uTf<fDtmPqucZqi<8]RrW:+?
rrMrriW/rZoE3\JoE5'olN#iCrrLpUrW;cqf*(mPp&k9qbQ.YDhuN`XpB1?so`XF]nHARgrW:CGrrM*Z
rW;isoE=snlN[.goE=pkrW;lqf`;$Qj8f/\p]L3mquu0dq?Hg#p&t-mrW:OKrrM6^rW;ltqulm"r<:^U
r<;ltq#gWue,TON!<D<`rrVuup]UO!nHT!unH]+"n-8jqpB:9orrW-!g&V-RklC_bq#gBprWVoujp:nk
!!i-#rWW'"q#gWufDtpPlN$ncq?-NrrWN9+pBCU&p^$j*nI#7%p]pj)p'1L"q#pNrrW:dRrrN-"mK!7g
q?-NrrWW'$!!i?+rs@]mrsAN-pBLU#q#pNrrrUpTrrMNfrrW$!q#p^$p]^^'r!<</q?m-.nI5@(!"8W1
!"&N.!!i<(rWW*#q?-a!h#RHUmf<@hqZHWsrrr3&!!iE-!"&N0rX8K0oaU[)rX8T1!"&Q/p]ga%q#pQs
rrV$WrrN*!oDnmmq?-Qsrrr3&r!39/r!NH3q[E?2nIGF*q[EK4r!EE1r!<*&rrr6%qucs$rrV*YrrMZj
rrW'"q?6g%q$-d'!"&T2rX8Z5r=/W6mgo@,rsnu:r=&]6r!EE1r<W3'rrr6%qZHj"i;ilYo)SdlqZH]u
rWW0'!!iH.!"&W3!=B55%/gY6%f$Y,&GZk8%fHk9%0$_6$31D2#l4c)"oAH""9/G^!<3)u!;QWp!rE)r
"TJZ&"ono-#QP20$NCM5%/p_8%f?k9&F:#-&Gm";%fQq:%0$_6$N18,#6+l'"98Q%!rrD_!<3)n!<3,t
"8`6$"o8H&#QP20$31J5%/p_8%fHq;&GQk/')E4?&cN@?&,m(<%K6b9$iLD4$2t5,#6+l("T&<$!p'F^
!VZTo!rE)t"TAT%#6"l.$2t;3$iUP9%1NgI%fR"<&Gm(>''U)0')N:?&H34>%f[";%0$_7$N18-#6+l(
"T&<$!p0L_!W2rr!<3,u"8`6$"oAN&#lY22$i^Y7%K?q;&-!4=&cWL<'*&a?(&o!B'E8^C&cWFA&-!.=
%K?k:$iUM3#l=i+"oST("T/B%!p9R`!Vl`q!rN/t"TJZ'"ono-#RUkF$4@4M$k3XU%fR"=&H!+?')E7A
'^$23'GL?W!##2A!"f,?rXK&?%1EXQrX&W3rWrB*rrr9&qucs#kQ(V`q>^KsqZHa!rrr9(rWiK1rX&i;
$k*RS%M&IKrt,2B!YH"Wr"B&Eq%`94q%`c?!##5Brt,/?"qD+P%1EXQrX&W3rWrB*rrr<'qucs#klC_a
qZ$TtqZHa!rrr<)!!iK/rX&i;$k*RS%M&IK!"f)@!##2Cq\AoBne_*;qA&oA!##5B!"f,?!Y,\LrX8c7
rX/W1qZ[**"U+c,qZ?g"l2^hbqu?]uqucg!rrr<)rWiT4$471?$j$kJ%fQt=&H37A')WF@(&Jd@(\npB
(]P9M(AejF'*&[D&HECA%g`^T%1EXQ$OR4IrWrE+rrr<'qZ?g"lN$qcr;Zg!qucg!rrr<)rWrK1"Ub_I
%1NgH%fd1?&HEIB'*/d^rY>>Hq\SK6q\T/Gr=o;Hr=]/DrXfGJ%hB-[%1N^S$iUM4#lFo,"oJN#!rrDh
!<3*!!!!*""9/K#"98W'"qLqE#RLhF$OdFQ%1WjY%hS^P!##5Dr>#8Hr"o5IlP]R:r"o;Ir>#8E!##8C
"V;1T%LrsI$jI(H$4-tD#Q+c+"oAH#!rrDi!!E<'!!!)u"8i<%"oJT(#S.4K$4@7N%1WjY%hK9a&JG$U
r>#;Ir>5AKqAJ`?qAB8Mr>>JLrYGGIr=]\S&J5Qc%hB-Z%1EXQ$47+=#lFo,"oJN$!rrDj!!<6&!!<'#
qum$'r!*-+rX&o=$k*RT%M'']rXo)BrY>AIrtbYOr>>DLq&8oFq&9,Jr>>MMrYGGIr=f/B#S7LW%LrpV
$k*%ArWrE+rrr<'r<*'$mf<@grrW-$qum$'r!!T9#RLhF$OdFQ%1WmZ&H37A')iRD(&f!I(]G9L)>kE9
)uLWP)?(KO(]P9L(&ejH')iIK&.]9]%1N^S$i^S5#lFo,"oJN%"9/Gl!!30%!rW6!"TJZ'"qV%G#mq"I
$k*RT%M'']&J5ZT'E/aG(B,-K)#bEN)Z(K?)upuU)uLWR)>tEO(]P9L(&ejX&eP]e%hB-[%1EXQ$47(F
#lFo,"oST%"9/Gm!<3)t"8rB&"oJQ5#RC_D$4@7N%1WmZ&H3:@'*&aG(&o'L(B>9N)#Y?O)Z1QN*:FpE
*;gcT)Z:QQ)#b?O(B,'J'*&[E&I]3]%LrpV$k!CL#m^h7#6+l*"T/B%!qH<m!<E<%"8rB&"oSW:#7(SA
$47.L%1NdX%hK<b')iRD(&o'K(]G9N)>tKQ)uL]O*V1?J*W6uV)uU]S)?(KQ(]G3L(&ejP&eP]e%hB-Z
%0d4K$47(F#lFo,"oST%!rrDn!<3*!"8rB&"oSW?#7(SA$471M%1NdX%hK<b&ebom'c$]`rtkYOrYb\R
rYtbTr#PPRq&fGSruV(Yr>bbTrYkbRrYYYOrYGMKrY#eT&J5Qb%h9$X$k!CL#m^h7"oni)"T/?%!qQEl
!WN9""98W'"q(\B#mq"J$k3[V%hS^PrY,8GrtbSMrtt_QrYkbTr>bbVr#Y)Er#YeWr>beUrYkbRrtt_O
rtbSKrY#bR&J,H`%LrpV$OR4I#RL>4!!W9'r<*'$oDeso!<WK'"98W'"qCnE#mq%K$k3[V%hK<b')iRE
(&f!K(]P?O)?(QR)u^iU*W7&V+713J+8m8Z*W@&X)u^cU)?(KQ(]P9M(&emG&HWLS%L<OR$k*IM#m^h7
"oni)"T8H&!qcQn!W3'#"oJQ@#RC_D$OdFQ%Ls!\&J5Wh',2/r()@]&rYYYQrYkbTrZ(nXr>tnZr#bt_
mihfV+<^Y+r?(tZrZ1tXrYthTru(hRrYH:b()7Pu',(uj&J,H_%LigT$47(F#lFl,"oJN%!rrDq!<3)u
"TJZ("qV%G#mq"J$k3[W%hK<b&ebrX(&o'L(]P?O)?1WS)ZUiX*<$uW*rR2Z+T3Ja,Pi\b-2Aed,Q/hb
+T3D]*r[2Z*<$oW)ZCWS)#kEP(B,$[',(uj&J,H_%LigT$47(F#lOu-"oST%!rrDr!<3*!"TJZ("qV%G
#mq"J$k3[W%hK<b&ebrX(&o'L(]P?P)?1WS)u^iW*W@,Y+9!D^+oike,l]1g-M]%e-N>Ck,QK(g,5r_`
+9!>]*W@&Y)u^cU)?1QR(]P9M'a56a&eP]e$4dUV%1EUO$4-tDr<E9*r<3'$rrVoprrN-&rrr?*%1!4G
$47.L%1WmZ&.oNR'E8gI(B53N)#bEQ)ZLcU*<.&Y*r[8\+T<Sa,QK.i-N>Il./,1h./t[p-3PYA,U=W6
,5r_a+9!>]*W@&Y)ugiV)?(Hg(Ddi&'bqAq&eP]e%h9'Y$k!CL#m^h8"oni)"T8H&!r)`u!<E<+"oSZ)
#RUnG$OdIS%M'*_&cNID(&o'L(]P?P)?1WS)ugoW*WI2[+9!Ai+sJ6W,UFca-R^DB.K1gi/,h$t.1.IO
-RL/d,U=TY,5r_a+9*D]*WI,Z)u^`l)&X8.(Ddi&'bqAq&eP]e%h9'Y$k!CLrWrH,!!W9'r<!$$p](Hu
!<`Q1"qLnB#7(SB$4@7O%Ls!\&J>!UrtYPLrtk\Pru(hTru:qWruM+\rZ;Xn+<_pQ,U=Z_-RU;k.4QhH
/,q0l/H@@#.f_'u.0q=L-71#a,U+H3+T<J_*rd8[*"a,/)B'J2(`4&*()@W"',(uj$P<p\%LijU$OR4H
#lOu-"oST&"9/Gu!<3*""oSW6#RCbE$OdIR%M'*_&cNID(&o'L(]P?P)?1WT)ugoX*W@)j+!2UJ+X/-V
,UOic-n-Spr[[munLjbl!A#`0.k<(u.4?Pj-6si\,5r_b+9!<)*??+>)]K\6)&X8.(Ddi&'bqAq&eP]e
%h9$W$k!CL#RLA5rrr?(r<!$$q#CHs!<rE+,7"P]$4@7N%1Wm[&J5Wh',;5t()Ic((`=20)B0V8*$$%@
*r[5_+<Vj9,:"Q^-RU;k.P!##r[n($!&*jrr%@t#%P0+\.Ocbn-71#a+sJ-PrZ<@+*ZZ7@*#fh8)AsD0
(`*u(()7Pt'+tlh&.]6[$k*LN#m^h8"oni)"T8E&!r;os!W<3&#TX0W$471M%1WmZ&J5Wh',;5t()Ic(
(`=51)]Kb:rZ)[o*ZlIH+<i!T,pjuf.4H_s/1iG.r\".'!&F(#!&FL,r\"1%&M#@].4HYm-6si\+s8!M
+!)L&*=s21)]K\5)&O2,(D[c$'b_5i&eP]d%h9$W$jm=J#RLA5!!W<(r<*'$qZ-Wsr<=DN#RUnH$k3[W
%hK<c',))q()@]&(`=20)B0V8*$$%@*r[5h+<_pS,UOid.4Hbtr[e:+/h\n41B'*02#K6.2Z,H42#]93
1,&\^r[n[4/M&D&.4HVk-6si\+<^Y*+W_[F*?6%<)]BV4(`4&*()@W"',(uj&.]9]%1EUO$4$q9#6+l*
"T8E&!rDut!WE9S#RCbE$OdIS%hB3`&ebon'c%Q$(Dn#-)B'P6*#ot>*ZcCF+<VjP,UFcb-j1tL.kN@P
/d3p_1,C^Cr\a^6rAXO3rAXa7r\Xj91G^d?0`E[Z/M/J'.4?Pj,pXZY+<VaJ*Zc=B*#on:)B'J1(`*u(
()7Pt'+kff%h9'Y$k!CK#RLA5!!W<(r<*'$qu?s&!<r`6#RLhj$OdFQ%M'*_&JGfm'c%Q$(Dmu,)B'P6
*#ot>*ZcCF+<VjR,UOle.4Qi"/M8[T0F'Bi1c7-K2`L^qr]0^6r]0s;/iP[H2)R3H1GCL9/hS_-.k2tr
-RL)a+s8!M+!)ID*?6%<)]BV4(`4&*()7Pu%MKKf&J,H_%1EXP$4-tDr<<6*r<3'$!!<&u5lguj"pbJA
$4I=P%M'*_&JGfl'bqK#(Dmu,)B'P6*#ot>*ZcCF+<i!T,pjug.P!&%/hSh31,CaE2)[BP3&iqt3r_;7
4T@MB3WqH&3&`cF2Dm?J1GUX</hS_,.k2tq-7'o]+s7sL*Zc=B*#on:)B'J1(`*u('c$]]$P<s^%h9$W
$OR4H#lOu-"oST&!rrE$!&=QU"pbJA$4@7O%M''^&J>`j'bqK#(Dmu,)B'P6*#ot>*ZlIH+<i$U-7:2j
.k<2'/da6c1,CaE2E*QS3W;&>48h;54oIJC48q9%3B/rU2Dm<I1,(=5/M/J'.4?Pj,U+ET+<MXG*??+>
)]K\5)&O2,(D[`#',(uj&.]9]%1EUO#m^h8"oni*"T8E&!rW*)!<EH3#mq%K$oAD'%hK<c',))q()@]'
(`=20)]Kb:*??1C+!;[M,:"T`.4Qi"/M8Y01,CaE2E*TT3BB5#4T7JD55[YB5l<kF4oRPo3]]8\3&``Q
1c$g>/hS_,.k2qp-6sf[+<VaJ*ZZ7@*#fh8)&X8.(D[c$%i#`k&J5Qb%LigT$47(F#Q=r-"oST&!rrE%
!'1,]#RCbE$OdIS%hK<b',))q()@]'(`=20)]Kb:*??1C+!;[M,UFcc.4Qi"0eP.61GgsI2`NfY3rV5E
4Zu(q5Q3nJ6M3\G7/fFU5<h=p4Zkhe4$#D^3&``Q1G^^=/hJY*.Oc_l,U=QV+<M[H*??+>)]BV4)&O/+
()@W"',(ri&.]6[$k!CL#RLA5!!W<(r<!$$rW"_T!=/u=$OdIS%hB6a&ebro'c%T%(`=20)B0Y9*??1C
+!;[M,UFcc.4Zr$/hSh51Gq'$2`NfY3]oMf4[2/"5X[t,r^QoXs%*)[s%*/[s$luT5X[k+5=%Fq4?PYc
3&iiS1c$m@/hS_+.k)kn,pXZW+<MXG*??+>)]BV4)&O/+()7Pt'+tlg%hB-Z$k!CK#RLD6rrr?(r<!0(
!!!$#70j5-$k*RT%hK<c',))q()Ic((`=51)]Th<*?H:E+<VjR,pk#h.kE8)0JG:>2)[BQ3]]Ac4Zu"o
5XIh-7Rp$B8kVkP9eK+48kDQD7RKO25X.Ir4Zkhf3]K&V2)I*C0.nh-.k)kn,pXZW+<MXG*??+=)]'D2
)&O2,(D[`#',(ri&.]6[$k*IM#RLA5!!W<(r<#aq!!!$#$47.L%1Wm[&J5Zi'bqK"(Dmu,)B'P6*$$%@
*ZlLI+s\H^-n-Yu/M8_41Gq'L3&s#^4?Yhl5X[t,7S$*C9MJ8X9heG\;>jAt;,C(`9i"MY6;1!C84Gs6
5X7Os4Zkhf3B/rT1c$g>/hJY*.4?Mh,U+?R+!)ID*?6";)B'J1(`*r''bqAq&J5Na%LigS$4-tDrW`B+
r<3'$/cl"R!=B/B$k3[W&.oNg',;8u(Ddo+)&aG5*$$%@*ZlLI+s\H^-n-Yu0eP.8))F-.2`Ni[4?Yhl
5X[t/7nH<I:/+GZ;GpHe<!63";Gp?i9g20@7n,j65X.Cp4?GS`2`<NL1,(=4/Lr7u-7'o]+<M[H*ZZ4?
)]K\5)&O/+()7Pt'+tlg%h9$W$jm=I#lOr-"oST&!sAZ*!<ENf$OdIS%hK<b',))q()Ic()&X>2)]Th<
*ZcCF+<i'W-7C;n/M8Y01GgsI3&s#^4?Ynt6pjF78kf4Y#?"H"<*!(&=T)D&>5_S/=BJX*<)lgor_4Y2
8k2?<5X.Ir4?PYb3&WWM1GCF5/Lr7u-7'o]+<M[H*ZZ4?(`OA3)&O2,(D[`#',(ri&.]6[$k!CK#RLD6
rrr?(rW>gq!W`</$k3[W%hTBe',;5t()If))&aD4*#ot>*ZlIH+sSB\-n-Yu/hSh61c73O3]]Ad4[22!
7Rp'E:/+S`<)cq$=^#$7>[:WArEfh:?!U]?>$>'26<@,c;G^(_9M.fE6U3k!4Zkbd3&`]O1GCF9/Lr7u
-6sf[+<M[H*??+>)]BV4(`4&)()7Ms&ePZc%LigT$47%Er<<6*r<3'$/cl%S$OdIS%hK<c',))q()Ic(
)&X>3)]Tk=*ZlIH+sS?[-n-Yu/hSh61c73O(cj`@4[21u6UsaB:/+Vb<**1)>$P???XWe?s'kn7875e3
?!LQ9=BAI#;GBkY8Ol-976`pt4$#>[2)I*C/hJY*.4?Mg+sA'N+!)FC*#fh8)&X8-(D[`#',(ri&.]6[
$k!CK#RLD6rrrB)r<!0(!<ET<5Rn;8&J5Zi'bqK"(Dmu,)B'P7*$$(A+!;[M,UOlf.kN>*0JbOD2`Ni\
4?Yno6UjU>9heMa<*3:,>[CcI@:K4Hs(2(>11b$-A7o=Z@p`MH>$4s,;c6=a8k;E=5X.Co4?>G\2)I*C
/hJV).46Gf+s8!M*Zc=A(`XJ5)AsA/(D[c$'b_5m&.]6[$k*IM#RLA5!!W<(r<#Rk!=TDI%hK<c',))q
()If))&aD4*#ot?*ZlIH+s\K_.4Zr$/hf(<2E*TV4D6lB5XS%69i"S`<*3:-?!h)MB4PRcAnc!pq.g4M
C2%9lARoF@@:3GI>$4s,;G^+^8Oc'45<V+k3]K&U1c$g</M&A#-RC#^+<M[H*??+=)]BS3(`*u('bqAq
&J5Qb%LigS$4-tDrWW?+r<3'$/cbt]%1`s]&JGfm'c%T%(`=20)]Kb;*?H:E+<i'W-R^Gp/M8_51c73O
3]oPg(dCDU7nQKM;H-_#>$YKD@Us%^BkhF"D/K8irbqaQ8o8B\CMIQqARo4Z?X6i<=&`'l9hIoC6pEhJ
4?>G\2)I'B/hJS'-mg5b+s7sL*ZZ7@)]K\5)&O/*()7Pt'+kcd%LigT$47%Er<<6*r<3*%"9AN4%M(i:
&J>`j'bqK#(`4,/)B0Y9*?H7D+<VjR-7C>o/M8_41c73O3]oPh77'I7928;^<*3=/?X[SXAoML)Ci+'.
EqOK-Ec5i4Chmd)An5@\?X-c:<)QOf91VN?5<W[B3]K&U1GUX:/Lr7u-6scX+<MXG*>oh:)]BV4(`*u(
'bqAq&J5Qb%LigS$4-tCrWW?+r<3*%8-&`#%M'*_',))q()Ic()&X>3)]Tk=*ZlIH+s\K_.4Zu&0/,1>
2`Ni\4[);%7S-9L;H6e$>[CoKA7fOkCi+*/F)uGGFa!S)rcJBdF)u8;D*r,SBkCma?s[)@=&i'l91VN=
5<V+k3]K&U1GCF6/Lr7t-6scX+!2OE*?6";)AsD0(D[c$'b_2l&.]6[$k!CL#RLD6rrrB)rW=eS!=fVO
&J5Zi'bqK#(`4,/)B0Y9*?H7D+<i$V-RgPs/M8_52)[ET4D6lH6UjW\9heMb=BSm9@:WqgCM[m,F)uJH
r-/!^!."Kd7s/rqF)Pr4C2d`p@:*8B=B&0m9M%]?5<V+j3]K#T1GCF5/1N%q,pOTV+!)ID*#on9)AsA.
(D[`#',(ri&.]6[$k!CJ#lOr-"oSQ/!s8Q)%M'*_3YE)@'c%Q$(`=20)]Kb;*?H:F+<i'X-n6`!/hf(<
2E3`Z4?Ynq7S-<K;H-b%?!q)OAnl."Df^5Irc\NjG^FgcIJ\HsI=-EhG^9:4.s6/ZDf'K/An5=X?!:?0
;GBhV7RTI(4?GP_2Dd3D/hJS&-mg2`+<M[H*>ok;)]K\5)&O/*()7Ms&ePZc%LigS$4-tDrWW?+r<,aq
!s&E5%hTBe',;5t(Ddo+)B'P7*$$(B+!;aQ,pt,l/M8_41c73P3]oPi6q0aA9i=qm>$b]OASGpsDf^5I
GB\O]I"6ZpJV&OOKF3?`JUW&uI!C-bG=-LoF)Po2E+NZl?!:?0;GBhU6UX.%4?>J]2)@!@/hJS&-RC#^
+<MXG*?6%<)B'J1(Ddi%'b_5m&J#?\$k*IM#RLD6rrrB)1'7UZ!=o_R&ebon()@]')&X>3)]Tk=*ZlLI
+s\K`.P*/(0JbRF3''/b5<qS,9MJDaD-1%M@:WtbCi497Fa&%SH[pQrJqSi4LPUbCMMd7HLPLV<KS"c(
I"6HcGBItFDK0E'A78eJ=B&0o91VE85<V+i3&`]N0J4q-.OZVh+s8!M*ZZ7@)]K\5(`4&)()7Jr&ePZc
%LigS$4$q9"oni*":##0!=o_R',*_J'c%T%(`=51)]Th<*ZlIH+s\K_.4Zu&0JbOD3''/b5<qS+92AGb
=Bf-@A7fRmDf^&EMg9Z"IY*63LP^nJNfT8"O>`/[Nf&^NLQ$n;IXlruGBJ"KDJX'"A78eJ=B&0n91M?7
5A3/?3&WTL0J4q-.46De+s7sK*Z5t<*#fe6)&O/+()7Pt&ePZc%LigS$4-tDrWW?+r<-@-!<E]C&JGfm
'c%T&(`=52)]Tk=*ZlLI+s\K`.P*;,0JbRF3BK>d770O::/Otm>$k]KAnl1$F*2\NG^OslKnbGANffEd
PEV5qQ'ISuPEV/kO,f*RL4k/-6[X-&GBItFD/*Zn@:!,><)?:]7RKC'4?>J]2)?p=/M&A"-6scX+!2OE
*?6":)AsA/(D[`#',(ri%hB-Y$jm=I#lY&."o\W[!s&E6&J>`k'c%Q$(`=20)]Th<*ZcCG+s\K_.4Zu&
0JbRE3''/b5=@t49i+hl>$bVRA7fUoDf^&FH$k'lKSGADO-#QiQ'Rc'qj:0GQ^3o$PE:i_M2$\7IX?9_
F`VJ<C1_!d?!:<.9he2K6pEgs3]K#T1GCF5.k)hl,U+?Q*Zc=A*#fe6)&O/*()7Jr&ePZc%LigS$4$q9
"oni+":,)1!>#hV',;6I()Ic()&aD4*$$%@+!2UL,UOoh/1rS21c@<S4?Yno6V'mF;HI",@q91dD/XK<
GBeLaK8bVDO-u2sQ^F52SGA^5S=>t7QBdZ%O,AaPJpr)lGBItFD/*Zq?sQo9;GBhT6U3q"4#o5W1GCF5
/1N%p,U+?Q+!):?*?6":)AsA.(D[`#',(rh%h9$W$OR1G#Q=o-"oSQq!<EcE',))q()If))&aG5*$$(A
+!;aQ,pt,l/M8_52)dKU4?Ynr7S6ER<*<I6B4bmqDf^&FG^t6rLPh+RPEhK'S"6.CTV;7W%&';cSt2@>
Q^*brNf$2YKRS;nMfj)ZChdNo?X-]4;GKhR6U*^r3]K#T1GCF5.k)hl,9e6P*Zc=A)]K\5(`4&)'bqAq
&J5Na%1EXP$4$q:"oni*">TuY&J>`k'c%Q$(`=20)]Th<*ZlIH+s\K`.P*/(1,LmK3]oPi5Xn=>:fLP%
?X[M\C_gr1Fa&(\JVAl:OHYrrR[fq@Tq\<WV#-ubUna]ZTq@mFR[9;'O,A^GJUi!'F`VJ;Bk:^[>$+d!
9h@];5<V+i2`3BF/hJV(-mg2`+<M[H*?6%<)AsD0(D[c$',(uj&.]6[$jm=I#lY&."o\W1!<EcG',;5t
(Od/;)&aD4*$$%@+!;^O,pt,l/M8_52)dKU4?Z,#7nZQS='Ap=A8-%$F*3CcJ:WE1Nf^-(R%'Y=U8+N\
Vl6SpWiN2#Wi;noV50l\T:MI=QBRDjLkUD1G^":ODK0W+@9m#:;GBeS6U*^r3]K#T1GCF5.k)hl+s8!M
*Z,n<*#fe7)&O/+()7Pt&ePZc%LigS$4.":"oni+"A/[q&JGfm'c%T&(`=52)]Tk>*ZlLK,UOoh.kNA-
1Gq*P4?Yno7S6BO<30>4A7fUpF*2\OJ:WE1NgZ,uR[p(FUSY)kWiiP0Z2Ls<Z*:F7Wi3%rUS=BOR[97+
OH,-NIXHBaF`VD8AnPIU=B&*k8Obs04ZbY_2)?p=/Lr7t-6scX+!)ID*#fh8)&O2,()7Pt'+kcd%LigS
$4-tCrWW?+rWG"X!>,tY'c%Q$(`=20)]Th<*ZlIH+s\K`.kNA-1Gh!L3]oPo6UsdD;cd.0@:a1jDfg1<
Isc^!LlRmgQ^aP=Z_X_&X08e8[C,n?;73g=Z*14-Xe`:qSXYt1OH,*LIXH?`H>dV7ARSqL=&Mac7mfL(
4?>G[1bpa;/1N%p,U+?Q+!)FB*#fe6)&O/*()7Jr&J5Na%1EXP$4$q:"oni+"TJKm&ebro()Ic()&aD4
*$$%@+!;^O,pt,l/M8_52)dNWBKnaO8PN&]=^5HIE,ff;Fa&4^KSPSLQ'[u3U8+Q`X08h:[^NZSqm\>h
\$iiTZEL=,V5'`TS!TA$MMHh5J9Q-WDK09!?sHf5:eaMK5X.@m3B&fO0J4q-+=SZa+s8!M*ZZ7@)]BV4
(`*r''bh;o&J,H_%1ERN#RLD6!!W?)<WN46',;5t(Dmu,)B0V8*?H7D+<i'X-n6`!/hf+?3''/b5=7q6
9i>%r?X[M\D0'iDG^b7"MNF'hS"?@LXfAt<[C3QS\@]Dd]tV4o]Y(kd\$rfR9!Pt,XeVV^S!U"6MM?_2
G^":ND/*Wj?WpN/9hIlA5<V+i3&WQH/hJS&-RL)_+<MXF*?6":)AsA.(D[`#'+tlg%h9$W$OR.FrWY%[
"U"r/!>?+]'c%T&(`=52)]Tk>+!2UL,UOoh/M8_52)[ET4?Yqs8PN#\XB]7G*H5h5F*DhUJW,JKPF%c1
U8+WdYI(jL\@]Df^VI\a_G\4c^V7@m\AQ7jYH"_"U7Id>PE1TTIXH?`F)Q&;A7/YE<)?:[6U3ds3]K#S
1GCF4.OZVh+s7sK*ZZ4>)]BS2(`*r&'b_5m&.]6[$k!CK#lOr2"U"r/!>@s:'c%Q$(`=20)]Th<*ZlIH
+seTc.kNA-1Gq*O4$>er7S6ER='As>ASQ('Fa&@bKSYYPQC=A<UTLT$`O<7c]Y;1u`lH-ua>1fV`koO*
]XYGZ`NQ;DUS+0HQ'./_K78&hF`VD7ARSnJ<`2[b7R01O4#o5W1GCF5.j-8f,U+?Q+!)FB*#fe6)&O/*
'bqAq&J5N`%1EUO#m^e8##,7("9AN:',;8u(Dn#.)B0Y:*?H:F+sSB].4Zu&0JbUH3]oPi6UsgE<ENL6
A7fh"F*E+aJVK&DQ'e,7UTLQ"[C42h^;.V.aNMfPrQY\nbKIuL_S<dr9"27JYH"_"T:D:5OG]!JI!9dU
DK09$?X-]39hRuD5<V+i3&NKG/hJS&-RBu[+<MXF*?6":)&X8-()@Vu'+kfe%h/pU$47%ErWY%["9\`+
',2/s(Ddo+)B'P7*?H7D+<i'X-n6c&0/>@B3''/b5XS+;:fLS'@F&\**-67HG^b=&O->p"T<kAnYJmr[
d([?9aNMiUdaS0E;q'1Fc-+\X^qRFi[^<6;V4uS2QBR>bKRS/iF`2,2A78bH<)?:[6U3ds3]K#S1+k./
.OZVh+s7sK*??+=)B'J1(Ddi%'GD)k&.]6[$jm=I#lY#4"U"r/!>?2s'c%T&(`=52)]Tk>*ZlLK,UOoh
/M8_52)dNW4?l)#8kr8c>$k`NCMn3:GC4srMNF*lSYDpX]!AcR]@b!@aN`,]eCiR1gt^W;g!nKuc,e&D
^:Uk_ZEC+#Tq.R9OG]!JI!9^SDJNim?WpK.:.du@5<Ltd2`3BF/hAIo-mg2`+<MXG*?6";)AsA.(D[`#
'+tlg%h9$W$47%ErWZ(#"9\`+',;5t(Dmu,)B0V8*?H:E+<i'X.4Zu&0JbRF3BTGh6:OUB;cm:4A8l@'
FE_tYKSYYPQ^aVBXfJ_F\%BAka32cWeCr^6hYuC>hVd5Fg=4QrbK%Fj^:Uk^Z)Xq4T:;.1Ne`79G^"IP
EFr`g>Zap!91D<64ZbY_2)?p=/Lr7s,U+?Q*Zc=A)]K\5(`4&)'bqAp&J,H_%1EUO#RLD60a.^`!<EiK
'c%T&)&X>3*#ot?+!2UL,pt,l/M8_52E3`[4[2;)9i+fj?"%8YD0'i@GC4jnMNF*jSYDpYYI29X]tqb4
e^N4,h;@2Nj5f:]io/eNgY('$ji5*L\@0AfW2-,XR$<\iKmnPrF`M>5A7JkH<D?.W6U*^r3]AoP0J4q-
.46Ab+<M[H*?6%<)AsA/(D[`#',(rh%h9$W$OR.FrWWT2"U"i,',;:3()If*)&aG6*$$(B+<_sU-RgPt
/hf+?3''/b5XS+;;H-e*@:a4lF*;bTJqoALQCFMQXfJb9ah5C.aNi8fgtq#Mk3(pkki_3mio/bLg!e6f
`kTm0\Zr02Ze(]3R>Q`MI!9^SDJE`k?!1-'9h7W:4Zkbb2D[$>/Lr7k-RBu[+!2OE*#on9)&X8-()7Pt
'+kcd%LigS$4.":#$V66!<EiK()@]')&X>3*$$%@+!;aQ-7C>o/MAk92E3`[5!VS0:/Y.s?Y<tjDf^,I
IY3H;PF%f4USk<'_n3Y"f$2[sgtqAXkNqU(n*f]6m-!HqhV?f4bf<8k^::Vj\u2<qS<oG"LP(#"GB7Y;
Amo%M<`2X`6U3ds3]K#S1+k./.46Dd+WqjJ*?6%<)AsD0(D[c$',(ri%h9$W$OR1Gr<=t["9AN:'c%Q$
(`=51)]Tk=*ZlLK,UOoh/1rV42)dNW4?l)#8ki2c>[M#\Ci=H?G]S=fMNF*jSYDs\Z,F,a^rFRFeD&jG
k32='nac;Co'u2<kN(U[g=4[7`kTm0[BQX,U7I[9OG\^?G^"7JEFrij>$"Ts8k)'14?>G[1bp^9/1N%p
,U+?Q*ZZ7@)]BS3(`*r''b_5m&J#?\$k!CK#RC>5#6b52!>?1`(IAoT)&aD4*$$%@+!;aQ-7C>q/hf(=
2`Wr_5=@t69iG/!?t<tgEclSRIZ0/GQ($=2XfJb9\@oc"c-tD&iT04inbVi6o^V>3jRq?^e'5qL]stMV
X0))eR[&tlKmnQ1F`2)8A7/YE;GBbQ6pG?H3B&fO0J4n+-ls]\+s7sK*??+=)B'J1(D[c$',(ri%hB*X
$OR1G#Q=p!"U"i,'GVB"(Dn#.)B0Y:*ZcCG+s\K`.kNA-1Gq*O4?Ynr7nZQV=Bo?HC2J$7GC4srNfo]t
T;/<q`OEJ3`lQ][gu%,SnF?8E#l!iQiniD=cH&QO^A54EY,A%eS!KJ"N.HA#F`VD6A7JkH;b]nS6pEgr
3B&fO0J4q,-mg2`+<MXF*?6":)AsA.()@Vu'+kfe%h/pT$4-tCrWY+]"9AN;'c%T%(`=51)]Tk>*ZlLK
,UOoi/M8_52)dQY4[2;(9MJKf?")&oD0'iDI"E,hNg#g"TVJHh[C=Mt`llc_qVgN%n+-5E;=a/AjRq<]
dEBPE]=52OVk]lRQ]mGaJUDZaF)>Z&@pE,99hRuC5<V+h2`3BF/hJP$-6scX+!)ID*#fe7)&O/+()7Jr
&J5Na%L`aQ$4$q:"pbA8!<ElL()IcO(`=52)]Tk>*ZlLK,UOrj/M8_52)dQY4[2;(9i+el?"%;ZDKBuF
J:`Q:PF%f5UoCT+\%KMsbgY;%lfR^,p%'s/qrZkng!\'a^sKQuYGhAlS<oG"LOsntF`VD7cXC'\<)$%V
6U*^r3B&fO0J4q--mfr[+s7sK*ZZ4>)B'J1(Ddi%',(uj&.]6Z$jm=I#lY$!"U"i,'GVB"(Dn#.)]Kb;
*ZcCG+s\Ka.kNA-1Gq*P4?Ynr852o[=^>HIC2S*:H$t=#O/DlHU8=lp\]MM#a3E)ehW!_co(DS[rpAt0
i7cZ)a%*qX\$`H>UnO<FPE(EMJ9Q-WDJE`k?!1-$9LhH74Zk_`2)?p=/Lr4r,U+?Q*Zc=A)]BV4(`*u(
'bh;o&J,H_$k*IM#RLD61Bdm^!>Q=b(Ddo+)B0V8*?H7D+<i'X.4Zu&0JbRF3]oPi6V'pJ<*<L8ASZ1)
GBeOgL_PoIR%9tJWj0+E]YVY5s4Z>hkO.p6o2,#FkMk@Pe'5qK]XPh`WMH5YQ]mGbJq/&gF)G`(@9m#8
9h\&E5<V+i2`3BF/hJS%-6scX+!)ID*#fe7)&O/+()7Ms&ePZc%L`aQ$4$q:"pkG9!<EoM()Ic(4rG7X
)]Tk>*ZlLK,UOrj/M8_52)dQY4[2;)9i+el?"%;ZDKC#II=m?:VO3pKV5gf2\@fYuc2ZMSiof_"p%(!1
mH<Keg=+<e^q@.aYc4FlS<oG"LOt&#G&qP9ARSkI<)$%V6U*^r3]AoP0J4q--mg2Z+s7sK*ZZ4>)B'J1
(Ddi%'GD)k&.]6Z$jm=I#lY$!"U"i,'GVB"(Dn#.)]Kb;*ZcCG+s\Ka.kNA-1Gq*P4?Ynr7nlfZ=^>HI
C2S*:It3-+Ng#g#TqnZl`4*Cpa3E)ei8Wqerq5jhnaP],h:g?%a1t0W\$`E<UnF6EPE(EMI!9^SD/*Wj
?*%""9LhH74Zk_`2)?p=/Lr4r,U+?Q*Zc=A)]BV4(`*u('bh;o&J,H_$k*IM#RLD61^+!_!>H7a(Ddo+
)B0V8*?H7D+<i'X-n?l%0JbRF3]oPi6UsgE<*<L8ASQ+(G'AIgLQ3%3Q^j_EW3<V<]YMS2db3I8k54oG
o2,2Jk2G.Ld`]YF]=52OW2#uTQ]mGbJUDZaF)>Z&@9co79h\&E5<V+h2`3BF/hJP$-6scX+!)ID*#fe7
)&O/+()7Jr&J5Qb%L`aQ$4$q:"ptM:!<ElL()Ic()*SrW)]Tk>*ZlLK,UOoi/M8_52)dNX4[2;(9MJJg
>[_/XD0'iDI"@'5PF%c2USk<'\%BDpbL,"up#P<(o(V`5rpAn0hqZ`3ji5rb\&GqVUS"$AP)Y3II!9^S
D/*Tk>Zb!#91D644ZbY_2)?p=/Li.q,U+0M+!)ID*#fe7)&O/+()7Jr&J5Na%1EUO$4$q:#"f%%!<EiK
()Ic()&aD4*$$(A+!;aQ-7C>q/hf(=2`Wr_5=.h49iY;#@q9:jF*2\SJVK&MQCFMAVlmD8\A#i$cMuVV
lfS*5o(hkco'br-lepLGc,dc9\4*j3X0&_[S!BD!N.-.uF`M>5A7/YE;b]nS6pEgr3B&fO0J4n+-mg2`
+<MXF*?6":)AsA.()@Vu'+kfe%h/pT$4-tCrWY4`"9AN:'c%Q$(`=51)]Tk=*ZlLK,UOoh/1rV42)dNW
BKnmS8ki5d>[V)VCi=HSJ:<30O;4%LSt`'^ZF79U^rO[Ig"bKEl20rKqt!bVmec/+hqZo4bK%E2agn[V
V4sNLQ&plWIX$'ZDesB'?X$T0:J+)A5<Ltd2Dm9E0e=e&-6scX+!)FC*#fe7)&O/*()7Jr&J5N`%1EUO
#m^e8"p5#3!<G_)'c%Q$(`=51)]Tk=*ZlLK,UOoh/28h61c@<S4?l)#8kr8c>$koSEGorCG^b=&Od)6(
U84cl[C<d#`lQI*g>2G_l0Rg+rUDW2mHiupp"e?NcH,e5]=52OW2-,XrMGX3KRS/iF)Q&1B4"hD;GKhR
5X%:k3&WTK/g2es.46Gf+s7sK*??+=)AsD0(D[c$',(ri%h9$W$OR1Gr<?@-"9AN:'c%Q$(`=20)]Tk=
*ZlLK,UFfe.kNA/1c@<S4?Yqs8PN)`>$k]MCMn3;G^Y1!Ng#g!T;/<eZF79V_8jaHeCraOio]Fjqsa+P
m-!Njp"e?O9@_5.^q@1cZEC=)T:;.1Ne`4:GB\+GCLpp\=]A9n8OGa+4?>G[1b^O6.k)hl,9S*N*ZZ4?
)]BS3(`*r&'b_5m&J#?\$k!CK#lOr["U"i,',;5t(Dn#-)B0Y9*?H:F+<r0[.4Zu&0JbUH3]oPj6V'pJ
<*<L8ASQ'&F*2\SJVK&MQ(";=V5gc-\%C;0f$)Okg>1ZFioL(#;rlrshqd#9dEKYJ^:Uk^YGn@mSXPh*
MN!"3GBItDC<p<o=]A3l84,U)4?>GZ1GCF5.k)hl+s7sL*ZZ4?)]BS2(`*r&'b_5m&.]6[$k!CK#lOr1
"U"i,'7LZ2()If))&aG6*$$(B+!;aQ-RgPt/hf(=2`a&a5=7q79iY;#@q9:jDfp8KIYEZAPl7,FUSk]/
[^`ub`lQEPeCr^6ht>solf%Nnh;$]5dEK],^V%[sZEC+#T:D7FO,8O=G^":KCiEom>Zb!#91M?64Zkba
2)?p=/KcPm-6scX+!2OE*#fh8)&O2,()7Pt'+kcd%LigS$4$q:##,7)"9AN:'bqK#(`4,/)]Kb;*ZlIH
+s\Ka.kNA-1Gq*O4$>er7S6BQ=Bf-FAoVa1GBeOfLQ7O`S"?@NWirhJ\@fVsaNW2`g"P6XrS7b7gY10+
e]Z%R9#&$K[^E<<V4sQMlB70_Jq/>pF)Gc*B4"hD;GTnS6pG?H3B&fO0J4q--mg2`+<MXG*?6";)AsA.
(D[`#'+tlg%h9$W$OR.FrWY%["9\`+',;5t(Ddo+)B0V8*?H7D+<i'X-n6c#0JbRF3''/f5Xn@@;H-e*
@:a1k)fp.GI"$d,OHc-&T;/NhZ*h'N]thY.bK\G`eGIoseC2gibK'Cm]XYGYZ)b"%T:D7FOc"jAHZsUR
D/*Wj?!1-)9h@];4Zkbb2Dd0C0e=e&-6scX+!)ID*#fe7)&O/+()7Ms&ePZc%LigR$4$q:"pP56"9AN:
'LifQ(Ddo+)B'P7*??1C+<i'X-n-Yu/i#7A3''/b5XS(::fLP%@q9:iDfp8KIY3E9P3SL,U84]iZGa5^
]YD>+aNMiYdJ_KLdFHLbaMu*3]XYGYZE'o$U7Ia<R?!&SI<]sXDesB'?sHf69h\&E5<V+i3&WTI/hJS&
+"&?[+s7sK*??+=)B'J1(D[c$',(ri&.]6Z$jm=I#lY$%"U"r/!>?+]()@]')&X>3*$$%@+!;[N,pt,l
/M8_52)dQY4[28&92/>e>$koSCMn39GC4jnMNOd&S"HFOW4K:Q\%')b^r"77aSX-daN)<;^qS1*[n4!5
Y,A+jSsu(1O,AX?I!9^SDJNin?WpN/9hIlC5<V+h2`3BF/hJS&-RBrZ+!2OE*#on9)&X8-()@Vu'+kfe
%LigS$4-tDrWY(\"9\`+',))q()If*)&aG6*$$(B+!;aQ-7LGs/hf(=2`Wr^5<q\1:/Y%o?")&oD/sQ;
GBeRgLPh1YR%0eTV5Uu2[C42h]Y;1upr:=rb/VH<_8*dt]=55VZ*(%%p7IlRP`UcWJq/)iFDku0A78bH
<)?:\6U3q"3]K&U1GCF5.ju_i+s7sL*ZZ4?)]BS2(`*r&'b_5m&J#?\$k!CK#lOr4"U"r/!>?+]IMEV7
(`4,/)]Kb;*ZcCG+s\K`.P*2+1,LmK3]oPo6UsgE<ENL5B4bpsF*2\SIY<N;P*ME*T<kAmY-GCC\%'&_
]tW.6^qd_;^:h1k\@8ocYcF[uZ_*bTQ'./_KRSGqF`VG9AnPIU=Aqpf7mfL(4?>G[1bp[8/1N%p*@)gO
+!)ID*#fh8)&O2,()7Pt'+kcd%LigS$4$q9#$_<7"9AN9',;5t(Ddo+)B'P7*??1C+<i'W-RgPt/hf(=
2`a&a5=@t5:/Y+q?=D/pD/XN?H$k0sMN<seR[p(WV5LAtZF.-M\%)7G]?np:]=>A[_mZtYYH"KjV"UFO
R-KlqM1pD+GB\@OCh[Eg?!1-):.duD5<V+h2`3BF/hJS&-RBu\+<MXF*?6":)AsA.(D[`#'+tlg%h9$W
$47%ErWY.^"U"r/!>6%Z'c%Q$(`=20)]Th<*ZlIH+seTc.kNA-1Gq*O3]oPj6V'pG<*3C4B4bosDKBrE
G^b7!MNO*gR[p(Fr2ls!YHkRD[^Q(B;7<p@`Nl\JW3)hhT:D;6PE1T[JUMceF`VD7AnPIU=B/'i84,X*
4?>G[2)?p=/Lr7s,U+?Q+!)FB*#fe6)&O/*()7Jr&J5Qb%L`aQ$4$q:"oni+"9ef,&JGfm6P^FR(`=20
)]Th<*ZlIH+s\K`.P*;-1,LmK3]oPi6:ORB;H?q+@:X(gDf^&FJ:<-*MNF$fR%2d&USXlfX08b5[/@<h
`O)qT\uVg4V6ckeS!]J)O,A[DIX$'ZF)Gu:A7JnJ<)QI`7RTI(4?>G[1b^O6/1N%p,U+3N+!)ID*#fh8
)&O2,()7Pt'+kfe%LigS$4-tDrWW?+rWGgo!>,tY'bqK#(`4,/)]Kb;*ZcCG+s\H^.4Zu&0JbRF3BK>h
5XS(:9iY;"?X[M\D/X`EGC4jlLPh.VQ'e&3T;&*WXf&2"Y.FS8$bELAWMckpUS=BORmi[/PE1TUJpr&j
GB7\=C1Ug\>$+]t9LqN94Zkbc2`3BF/hJS&-RBu]+<MXF*?6":)AsA.(D[`#',(rh%h9$W$OR1Gr<<6*
rWFnU!>,qX'bqK#(Dn#.)B0Y:*?H:E+<i'X.4Zu&0JbOD3''/b5=.h3:/Y%o>[V)S(i*u0Fa&%WIY3B4
O-5cpR[fq@U9gVkXf_Ju:p$RjUU-\eSXZ(6PaRPhL4Xl%GB\.LD/*Zq?sKd4;GKhR6pEgs3]K#S1,(=4
.OZVh+s7sL*ZZ4?)]BV4(`*u('bh;o&J,H_%1EUO#RLA5!!W?)"p"`:&JGfm65C=Q(`=20)]Th<*ZcCG
+s\K`.P!)'0JbRF3BK>e5XS(99i>%r?"%8_EGfi?GB\F`JrGSIOHYrrR[fq@TVA0eqkH$TU8":3SXZ(7
Q'7;iM2[%8I!9dWF)Gc*A78bH=&Mac7mfO)4?>J]2)?p=/Lr7t-6scX*uZ1A*?6";)AsD0(D[c$',(ri
%hB-Y$jm=I#lY#."oSQp!<EcE',))q()If))&aG5*$$%@+!;^O,pt,l/M8_51c@<S4?Yns7S6BO<*3=2
@:X(lDKBrEGC4jkKnkPHRAQ79R%'V:T),&ef:JP'S!]P-PF7Jh7#-JIIXlWdF`VG?E+EBa>$+d$9h@f>
5<V+i3&WTK0J4q-.46Dc+<VaI*??+=)B'J1(`*r&'b_5m&J#?\$k!CK#RLD6!!W<(0`_:d&J>`l'c%T%
(`=51)]Th<*ZlIH+s\K`.P!)'0JbRF3BB8c770R;:/Y%n>[LnTASGsuF*2\NG^Y-rL5CnNR?No%Q^F6;
RnfE>Q^3o#R?*5^L4ar*G^"@SF)Gu3cXC0c=B&0n8k)044Zkbc2`3BF/hJS&-mg2`+<M[H*?6%<)AsD0
(Ddi%'b_2l&.]6[$k!CK#lOr-"oSQ/!<E`D&ebonIMN\8(`=20)]Kb;*ZcCG+sSB].4Zu&0JbOD3''/b
5<qS,9MJDc=^5<CASGsuF*2\NG^OslKnkPCNf]EfPa1O"QC!r(QBd`"PEM#fMM[(@JUVukGBS(LDK0B%
@:*8B<)QF`7mfO+BKS=82Dd0C/hJS&-RBu\+<MXG(`aS8)]BS2(`*r''b_5m&J,H_%1ERN#RLD6rrrB)
9*51q%hTBe',;5t(Dmu,)B'P7*??1C+!;aQ-7C>o/M8_52)dKU4?Yns7S-<K;cd+,?tX%bEGff<Fa&%[
J:<*(L5:_INffEkP5^XTP*1ogO,f3WLk^S7IXlZ0GB\1NDf0Q/ARSqN=]SEp9h@f>5<V+i3&`]N0J4q-
.4?Mg+s7sL*ZZ4?)]BV4(`*u('bqAq&J5N`%1EUO$4$q:"oni*">^,\!=o_R&ebup()Ic()&X>3*#ot?
*ZlLK,:+]d.kNA-1,LjI3BK>d5=7n49i+bi=^2YK@V'7hD/XK<GB\:YJ:<'&KnbA>regZ7reaF,LPCM8
JUW,rG^"@SF)Po2E6hs">Zk-,9he5L69dUq3]T,V1GCI7/Lr7t,pOTV+!)ID*#fh8)&X8-()@W!'+tlg
%h9$W$OR1G#Q=o-"oSQ1!s&E5&.oKf',<bI()If))&aG5*$$%@+!2UL,UOog.kNA-1Gq'M3]q(A5XS%6
9i+hk=^5<BA7fRnDKBlAGB\:^I"$NqK7nr;qh@%gKnP&/IXZZpG^"@SF)u58C1_!b?X-`8;c$1\7RKF(
4?GS`2Dd3D/hJS&-mg2`+<M[H*??+8)]BV4(`4&)'bqAq&J5Na%LigR$4$q9"oni+"@3+l!<EZ@&J5Zi
'bqK#(Dn#-)B0Y9*?H7D+<i$V-RgMr/M8_52)dKU4?Yno6UsaD:fUS">[LoMAnl=&Df^#Crc\HhH[L8@
If"]qIKP"GJ9_';"*Jp2Da8/ZBkCma?X-`8;c$1\7mfO+4Zkbb2Dm9E/hJV(-mg2`+WqjJ*ZZ4?)]BS3
(`*u('bqAq&J,H_%1EUO$4$q:"oni*">p8`!<EZ@&.oNg',;8u(Dmu,)B0V8*??1C+!;aQ-7:5m/M8_4
1Gq*O3]oPi5XS%6:/Fkj%U!%D@:s.jC2@d+F)uJIrce?d!.4Tj!.4]irc^hTF`VVBDJX'"AS5L[>Zk*+
9he5M6U3k!4?>G\2)?p>/hJS&-RL)_+<M[H*??+=)B'J1(`*r''b_5n&J,H_%1EUO#mgJ6!!W<(rr`9%
6OjV;&J5Zi'bqK#(Dn#-)B0Y9*?H7D+<VjR-7C>o/M8_51c@9Q3]oPi5XS%69heMb=B]!<@:WtaCM[m,
F)uGGFn9f.F`heIEc5f2CM@?j@:*;D=B&0m9hIoC5X.Co3]T,W1c$g</Lr7u-6scX+<2IE*ZZ4>)]BS3
(`*u('bqAq&J5Na%1EXP$4$q9"oni+"TAKn!<EW>%hK<c',2/s()If))&aD4*$$%@+!2UL,UFfe.P*/(
0JbRE3&s&_4[22!7nQKM;H-b$>[LuMA7fOjCi+'.EcZ;JpN6UbF)uA?7W*'_C2%9j@:NYL=]eX$9he5M
6U3k!4?>J^2Dd3D/hJV(-mp;c+s7sL*ZZ4?)]BV4(`4&)()7Jr&ePZc%LigS$4-tDrWW?+r<3*%/-,b\
%M'*_&JGfm'c%T%(`=20)]Kb;*?H:E+<i'X-RgPt/hSh62)[ET4$4BD5<qS*8ki#X<EE:+?!h#QA7]^p
CM[j*DZ4SPEr^7[Db4h`D/j?+An>L^@:*8C=B8F!9h\,J6U3k!4?>J^2Dm9E/hnq..46Gf+s7sL*ZZ7@
)]K\5)&O/+()7Pt'+kfe%h9$W$47%Er<<6*r<3*%!W`<17L]h<&.oNg'GVB!(Dmu,)B'P7*$$(A+!;[M
,UOog.kNA,0JbRE3'',`4[22!7S-6J:f:7p=^,0=@prooAoMI!CN40,qe\'(CiO6*BkCsfA78tT?!:B4
<)QFc91_T?5X.Co3]T/X2)?p=/hJS&-mg2`+<VaI*Z?%=*#fe7)&O2,()@Vu'+tlg%h9$W$OR4H#lY&.
"o\Z'"%WFn$k3[W&.oKf',;5t(Ddo+)&aG5*$$%@+!2UL,:+Zb.P!)'0JYFA2E3`Z4?Yno6UjR<9heJ`
<*3:,>[LlI@:Wn[AnH#]C&_rIBa/NgAn>L`@7+I1?X-c;=B&3q9he5M6UF4+4Zkbc3&WWM0JG+2.k2qo
,U4KU+!2OE*?6";)AsD0(Ddi%'b_5m&J#B^%1EUO#mgJ6!!W<(r<"VP!=TAG%M'*_&ebro()@]'(`=51
)]Th<*ZcCF+<i'W-RgMq/M8_41Gq'M3>jk?4Zu"t6UjX?:/+Vb<*3:,>[:]D@preYpLHj.@:<YQ?X6o?
XB/A";GBkY8Oc'45<V.l3]T/X2)?p?/hJS'-mp;d+s7sL*ZZ7@*#fe7)&O2,()@Vu'+tlg%h9$W$OR4H
#lOr-"oST'!sAZ+!=K<%%1Wm[&J5Zi'bqK#(Dn#-)B'P7*$$(A+!;[M,UOlf.P*/(0JYFA2E3]X4?Pbk
5XS"28k_uS;H$Or=BSg4>[@>9s'Ye8s'Yh5/mV^e>$4s/<)QUg:/"8M6UO+'4Zkhf3B/oS1GCL8/Lr;"
-RC#^+<VaI*ZZ4?(`OA3)&O2,()@W"',(ri%hB-Z$k!CK#RC>5!!W<(r<#Um!<EN9$k3[W&.oNg',;5t
(Ddo+)&aG5*$$%@*ZlLI+s\K_.4Zr$/het82)[BQ3]oMf5<hD#7S$-F:/+P_<E*%%=BSd1>PVM/>$>'3
=BJU'5uUZX9he;R7n,j25=%Fp4$#>[2Dm9E0J4q-.Oc_l,U+?R+!)ID*?6";)AsD0(Ddi%'b_5n&J,H_
%1EUO$4$q9"oni*"T8EU!W`</$OdIS%hB6a',))q()@]'(`=51)]Th<*?H:E+<_pS-7:5m/1iJ.0JbOD
))jN93]q(=5<qV(7Rp'D9hnDZ;H$Rp<**/s=@lRq<)cjq;G^(_9hS&J7RKR/5<V+k3]]5Z2)I*C0J4q-
.Oc_l,U+?R+!2OE*?6";)B'J1(`*r''bqAq&J5Na%LigS$4-tCrWW?+r<3'$"p+c*!=B/A5R\)3%hK<c
',))q()Ic()&X>2)]Th<*?H:E+<i!T-7:5m.kNA,0JbOC2`NfY4?Pbi5<qV(7Rp$B9MJ8V9i1dds&8qt
s&8ko02PA;:/+AR8Ol6;6pNt"4Zkee3B/oS1c$g</hJS'.46Gf+sJ-O+!)FC*#on9)AO,,(`*u('bqAq
&J5Qb%LigS$47%Er<<6*r<3'$8cetn!=9)@$k3[W%hTBd',2/s()Ic()&X>3)]Th<*ZcCF+<i$U-7:5l
.kNA+0JbLB2E*TV3]oMf4[21s6UO=58P2WL9heAXq+V,i:/+GV8kMWE5=S"-5Xdn#4Zkhf3B/rU2)@!A
/hS_+.Oc_l,U+ET+!2OF*?6%<)]BS3(`*u('bqAq&ePZc%LrpV$OR1G#Q=r-"o\Z'"#9oZ!!**+$47.L
%1Wm[&J5Zi'bqK"(Dmu,)&aG5*$$%@*ZlIH+sS?[-RgMq/MSk31);Z&2)[ER3]]Ac4Zu"o5X[t,7Rfm=
8cD?Z9E%OP8Ou?@7RKO25X.Ir4Zkhf3]K)W2)I*C0J4q/.k2tq-6scZ+<M[H*ZZ4?)]K\5)&O2,()@W"
',(ri&.]6[$k!CL#RLA5!!W<(r<!<,!!!$##RLhF2%0m&%M'*_&ebon'c%T%(`4,/)B0V8*??1B+!2UL
+s\K_-n6`!/M8_21G^mH2`NfY3]oP(4Tmu65X7a:6hX"J6S:bl5X.Ir4_Qr?3]]5[2`<NL1GCF6/M&D$
-mp>e+sJ-O+!)ID*?6";)B'J1(_RW#()7Pt'+tlg%h9$W$jm=I#lOr-"oST&"%!%j!!!$##RCbE$OdIS
%hB6a&ebon'c%T%(`=20)B0V8*??1B+!2UL+s\K_-n-Yt/M8Y00JbOC2E*TT3]]>b4T7MC56+.O5l!hI
5lEqH4Zkhh4$#D^3&``Q1c$g>/hS_+.k)ko,pXZX+<M[H*ZZ7@)]K\6)&O2,(D[`#',(uj&.]9]%1EUO
#m^h8"oni*"T8E&!r`0R!<EB1#RUnI$k3[W&.oKf',;5t()Ic()&X>2)]Th<*?H7D+!;^N,UFcc.4Qi"
/IjBc0JYF@2)[BQ3&s#\48qA?4nh2=4oRQ+4$#D_3&`cS2)I*E0J4t0/Lr;"-mg5c+s8!M+!)ID*?6";
)B'J2(`*u(()7Ms'+kff%h9$W$OR4H#lOr-"oST&"9/H%!!WH)"pbJ@$9/D%$k3[W&.oKf',;5t()If)
)&X>2)]Th<*?H7D+!;[M,UFcb-n-Yt/M8Y00JYF@2)[?O3&iqt3WM8=490'n4TK0m49.JB3\*3M3&``Q
2)I*E0J>%5/M&D$-mp>e,U+?R+!2OF*??+=)]BV4)&O/+()@Gr'b_5m&J,H_%1EXQ$4-tDrW`B+r<3'$
!!<*!561ch"pbJA$4@7O%M'']&J>`j'bqK"(Dmu,)&aD4*#ot>*ZcCF+<VjQ,UOle.4Qi"/M8Y00JYF?
2)R9M2uYc:3Vtl748V&=3W:u=2`<ZS2)I*F1,(C7/hJV).Ocbm,pX]Z+<VaJ*Zc=B*#fh8)AsD0(`*r'
'bqAq&ePZc%h9$W$OR4H#lOr-"oST&"9/H$!&4KT"pP;<#RUnH$k3[W%hTBd',))q()@]'(`=20)B0Y9
*??1B+!2UJ+sJ9Y-7:2j$S*_Z/M8Y/0JG:=2#]?42Z>Z53;Y`63!M<#2E!EM2#]<20`E[5/M/J&.4?Pj
,pXZY+T<H**Zc=B*#fh8)AsD0(`*r''bqAq&eP]d%h9$W$OR4H#lOu-"oST&!rrE#!<3*!"p,&9#r2hq
$k*RT%hK<b',)&p'c%T%(`4,.)B'P6*#ot>*ZcCF+<VjQ,UOic.4Hbt/M/\00)dR(1B9922>oH/2uPZ6
2#oK41]B'U/hSk1/Lr>#.46Gg,U4KU+<M[H*ZZ7@*#fh8)AsD0(`*r''bqAq%20<c&.]6[$k*IM#m^h8
"oni*"T8H&!rN&u!W<3Z#RCbE$OdIR%M'*_&JGfl'bqK#(Dmu,)&aD4)]Th<*?H7D+!;[M+s\E\-R^Dm
.k</&/cIC%0E<m,1]B6,2?#H21B9300E<^`/hS_-/1W5".4?Mi,U=QX+<VaJ*Zc=B*#on:)B'J2(`4&*
()7Pu',(ri&.]6[$k*LN#m^h8"oni)"T8E&!rDs!!<EB&"qCnE$47.L%1WmZ&.oKf'E/^X()Ic((`=20
)B0V8*$$%@*r[5b+<VjP,UE[B-R^Dm.P!%K/c@="0`Np(1]K6.0`<X'/Ia3\.Ocbn-RL,b+sJ-PrZ<=*
*ZZ7@*#fh8)AsD0(`*u('bqDr'+kff%h9'Y$k!CL#RLA5rrr?(r<!$$q>^Qt!<rE+rs0&?$47.L%1WmZ
&.oNg'E/^T()Ic((`=20)B0V8*<$uY*rd>]+:05:,UFca-R^Dnr[[q!q^qk%q(Me%q_%k"%4j"[.Ocep
-RL/d,U+H3+TEP`*r[/o*#on:)B'J2(`4&*()7Pu',(ri&./pY%LigS$47%E#Q4i,"oST&"9/H!!!<6&
"9n`.%gWFI$471M%1WmZ&.oNg'E/^P()Ic((`=20)ZC]U*<.&Y*Y9D8+<VgO,:"N]-7:2i.4HbG.f_-t
/H@O&/c[X'/H@@$.fq1L.0q=M-RL,b,U+H3+TEP_*rd8\*<-uW)?q&s(`4&)(B,$Z',(ri&.]9]%1EXP
$4-tDr<<6*quls#!!;rr"9AN+"U4i/%gWFI$4@7N%1WmZ&J5Wh'E/aH(B53N)#kKR)ZLcV*<$uY*r[8]
+:958+s\E[-71)g./kXq.f1al/Ggpt.fLk'-mpAh-7'o_+sR"/rZD.]rZ*+$*#fh8)AsD0(`*u(()7Pu
',(uj&.]9]%1EXQ$4-tDr<E9*r<3'$rrVurrrN-&rrr?*%gWFJ$4@7N%1WmZ&J5Wh'E/aH(B53N)#kKR
)ZLcU*<.&Y*r[8\+:059,:"N\-71)fr[@^opF?+js![mpr[%dp,U=TY,5r_a+9*D]*WI,Y)\!]()&X8.
(Ddi&'bqDr%MKHe&.]9]%1EXQ$47%Er<E9*r<3'$rrVrqrrN*%!!W<*)[?WS$47.L$k3[W%hTBd',)&p
'c%Q$(Dmu,)?(QS)u^iW*W@,Z+8m;`+sJ92,QK.i-N,=d./kUo-3>M@-2o1h,5r_`+9!>]*W@&Y)u^`o
)&X8.(Ddi&'bqDr'+kff%hB-Z$k*LN$4$q8"oni*"T/?%!qu]p!W<-$"oSZ)#RCbE$OdIR%M'*L&cNID
(&o'L(]G9O)?1WS)ugoW*W7&Y+8m>]+oikd,lT+a-N5=i,QK(g,5iY`+8m8\*W@&X)ugiV)?(KQ(]P9N
(&ejV&J5Qb%h9$W$k!CL#RC\6"oni)"T8H&!quZr!<E?&"TJZ(#6"l9$47.L%1NdX%hK<brY,;HrYGMM
rttbRrYkbTruCtXrZ;"[r#kn]s!.7`s!.Fcr#kq[rZ;%ZrZ(nVru1kSrttbPrtbSKrY#>F&J,3Y%h9$W
$k!CLrWrH,rrr?(r<*'$p&G-p!<`9'rrr?*%L<=H$47.L%1NdX%hK<brY,8GrtbVNrYYYQrYkbTrZ(nX
r>tkYqB,b]pEBS\r#l"^r#bkYrZ1tXrYthTru(eQrtk\NrY5nV'+tlh&.]9]%1EXQ$4?b<r<E9*r<3$#
!!;fnrrN-%r<3-(r<=#C#RLhF$OdFQ%M'']&J5Wh',2/r()Hlcrtt_Q!#kkUrYthVr>keWqB,;OqB,VV
r>kkWrYthTrYb_QrYH4`()7Pu',(uj&J,H`%LigT$OR7?#lOu-"oST%!rrDp!<3*""8i<%"oSW9#RC_D
$4@7N%1WmZ&.oKerY,8GrtbVNrYYVPrYkbTr>b_Uq]>2Jq]>YUr>beUrYkbRrtt_OrtbSKrY#ML&J5Qb
%h9$O$k*LN$N:>0#6+l)"T8H&!qZKm!WE3!"98W'#6"l7$47.L$k3[V%hS^PrY,8GrYGMMrYYVPrYk_S
r>b\TlQ-$Hr#P_Ur>Y_SrYb\PrtkYMrY>DGrXfGJ%h9'Y$k*LN$N:>0#6+l)"T8H&!qQEl!W<,u"98W'
#6"l;$47.L$k3[V%hB3`&JG'VrY>GKrYPSO!#Y\Qr>PVRq]+i@q],PRr>PYQrYYVNrtbSKrY#_R&J5Qb
%h9'Y$k*LN$N:>0#6+l)"T8H&!qH?k!WE3$"8i9%"oJT(#Rq+J$OdFQ%1WmZ&.oKerY,5FrtbSMrYYSO
r>PSQp`0#Kp`02Nr>PVPrYYVNrtbSK!#5DGrXfGJ%hB-Z%1EXP$31G4#lOu-"oJN$!rrDm!!30%!rN/u
"98W'#6"o-$4@4M%1NdX%hK9a&JG'VrY>DJrYPMMr>GMOqA\rEr#>YTr#5MOr>>MMrtbPJrY#bS&J5Qc
%h9'Y$k*LN$46\;r<E9*qulp"!!;WirrN-$qucj"rrr?*%L37F#mq"I$k*RT%M'']rXo)BrY>DJr>5DL
r>GGMm2Pm?r>GPNrYPPLr>#;F!##8C%M0-]%LrpV$k!CL#m^eAr<E9*qulp"!!;Th"T\W(!WiK&"8i<%
"oSW<#7(SA$47.L$k3XU%hB3_&J5ZS'E&[F(B#'J)#G38)Z(EN)#Y9M(B#!H'*AjZ&J4pP$P!UT$k*LN
$4-tD#5nc+"oJN$"9/Gk!<3*"!<3,u"8i<%"oJT(#lY/:$OdFQ%Ls![&H37A')`LB(&\pH(]5-D)>b?G
)>k?M(]>-J(&\dG')iIK&.]9]%LigT$iUM4#lFo,"oJN$"9/Gj!<3*!!<3,u"8i<%"oJT(#Rh"H$4@7N
%1NdW%hB6N&HEIB'*&dG(&\pG(\np>)>P-I(]>-I(&\dG')iIO&.]9]%LijU$k!CL$2t5.#6+l)"T/B%
!pp!f!W;uu!WW<""8i<%"oJQ5#7(SA$47.K$k*RS%fQt=&H37A')WF@(&SjD([i4;(]5'H(&S^F')iIC
&H31D%LijU$k*%A!so5=#Q+f+"oJN$"9/Gh!<3)t!<3,u"8i<%"oAN'#lY/2$iUP9%1WmI%fd1>&HEIB
'*&aE(&A^3(]>-K(AnmI'`A[F')`CB&H31A%LrsI$j-kE$46\;qZ[$(qZQg!rrVKdrrMusrrW*#qZQp&
r!*-+!"&W3"q(hJ%1NdWrXSu?r=K#Bq\/f@k8*n/q\&rBrXo/ArXT2C%LijU$k*%A!"&W1r!*0)qZQg!
rrVHcrrMus!WW9'qucg!rrr9(rWii;$47.K$k*RS%M&IKrt,,@!##/B!#5,ApD3H;q@`iAr=T&@rXT2C
%LijU$k*%A!"&W1qZd'(rWN3'qucs#klC_aq#LErqZHa!rrr9(r<WB0rsSi8rser;rX]#?r=T&Bq%E`B
m1fU8r"K&Crt>8Brt,/?rXK2C%1EXQ$OR4IrWiK/qZd'(qulm!rrVBarrMlprrW'"qZQp&qZd$*!"&W3
rsSi8rXJl;rt#,?rt,)?rt=?*rt>5Art,,>rso&<rXAf7rX/T0qZd'(qZQcu!!;9_rrMrrr;Zg!qZH]u
rrr6'rWiK1rX/Z5rXAf9rXSl;rt+u<rY"`7rY#&>rXf#=rXSr;rX8c7r<`N2rWr?)rrr9&rr`6&rrV9^
rrMcmrrW'"qZQp&qZ[$*rWiK1r<`N4r=&]8rXSi:rXe0'rXeu<rXSr;r<rZ6r<`N2rWr?)rrr9&qZHj"
j8f2\oDnmmqZH]urWW0'!!iH.r<iQ4rX8c8rXJi:q[`Q8ob%'4q[`Z9rXJf7rsSf5!"&T0q?Hp&qZQcu
rrV3\rrM]krrW'"q?6g%q??p)r<NB0r<iQ4r=&W6r=8$%r!rZ7r=&]6r<`N2r<W6(rWW0%!!N0$rrV0[
rrMWirrW'"q?6g%q$-d'rsAW2rsS`5r!hs%rsnr9r!`T5r<`N2r!<*&rrr6%qZHj"huNcXn,WIiq?-Qs
rrr3&!!iH.rsAT1rsSZ3lOE_"rX8W2rsAW0!!i<(rrr6%q?-a!hZ*]Y!<DThrW;s!q#p^$p]gU$!"&N0
r<qiur<rK0!"&N.p]ga%q#pTt!WrK*h#RHUm/[.fq?-NrrWW'$q[!3.p^6HtrsJT0!"&K-p]g^$q#pNr
rrUsUrrMHdrW;ouq#p[#rs&9'!!i?+rX%frrX&E,!!i6&rWW*#q?-a!g&V-RrrDBcrrVuuq#pX"p'(L%
p'C6rp':X'p'1I!q#pKqrrW3#gAq6SkQ(Vaq#gBpr<;cskQh.no*5-sp]UBprrUdPrrM9_rW;ltq#p^#
r<;Kkr<MWmr<;ouq#gWueH#UMrW)-^rW;ltp&t9sf`q?Xp&t0nrW;lqg]7?TirK&[p]L0lqZZ'crs&?(
o`Y$lrW:LJrrM'YrW;fr!!Mosp]^9opBC-kpB1BrciF(Hr;bjXrW;cqmf`(_mf`@erW;Tih#RHUg]7<T
o`NtPp]U6lrW:7CrrLgRr;up"p]K7RoE5$naT2>AquGLPr;uKkk61;Wr;u3`h>mQVe,]FKfE:gLr;sk:
rrLLIquYCNquXY6rrMusdfB7HhZN`Wh>lF5rrL1@p]Bmdq?$Zu[fHF/ciEV:lN49jrrMrrJcO^/rrJqr
[K-=.cN&n(rrI]Of`;$QX8oF(rrL[NK`D/T!<@]Og&V-RWrT@(rrLXML&h5Srr@WNgAq6SWW9:(rrLUL
LB.>TrW%NMg]7?TW;s4(rrLRKL]IGUr;_ELh#RHUVuX.(rrLOJM#dPVquD<Kh>mQVVZ=((rrLLIM?*YW
qZ)3JhZ3ZWV?""(rrLIHMZEbXq>c*IhuNcXV#[q(rrLFGMu`kYJcOI(rrK2$Y5nS'ec:C(!W`<%JcOL)
rrK/#YQ4\(eGt=(rrN-"JcOO*rrK,"YlOe)e,Y7(quMBMg&Z^~>

%%EndBinary
grestore
np
grestore
gsave
0 -.0288086 mo
742.561 -.0288086 li
742.561 170.52 li
0 170.52 li
0 -.0288086 li
cp
clp
371.313 123.326 mo
371.313 123.326 416.938 111.305 413.354 84.9521 cv
409.863 59.2979 360.364 61.835 360.364 61.835 cv
350.296 5.59717 li
446.457 -4.37891 455.479 104.047 371.313 123.326 cv
clp
349.188 3.59814 mo
429.936 3.59814 li
429.936 124.213 li
349.188 124.213 li
349.188 3.59814 li
cp
clp
348.936 124.465 mo
348.936 3.45683 li
430.104 3.45683 li
430.104 124.465 li
cp
gsave
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 189 
/Lookup <~
s8W,lWZ(W6)#(-LpT#,*Xr?u9)"k*Np9>D,Ynm)>)#(<QpTtV/[2/VI)#1QVppV(7[hnhL)#:]WqmdI;
\J=qP(APQ[pqIL>]bLC[)#M,cr5'?J_\;sd(&c)_rPfKK`Y/6i'*$&as2kuSaqF`s'*$)es3(lLbmOEo
'E?>es3;AZc5$<&'E-/hs3;S^clN/4*W45&r6HMccQ2u2,5ok4s3;AXcm&G8,5ok8rQlnicn#(A/-"!F
s3WCtd4G=F0`TTVs3i_&dkUgM2#l#ZrR3V%dkq$P3<.Jds3s(/e2dQY4TEqms4':4e3*c]4oa%ts4'C4
ej0/a5lB1urRF:6eO0;e62f>'rRFC9f15ek8,q44s4C!EfLu7s:&N[:r7OgBfhMCt;#T$CrRt-HfhhY$
;>o3IqqG0KgK+4+<rCZPqqG6NgfaR1=o@&[rS:cWh-^*;@/Snkr81u]hdHB>@f5+mqqku`i+)`DB)CFj
rSV;ci+W/LBE-q)s5@\liG&8ND#NC1r8MGjic"bTDuAX8r8V_nj)P%YErG'>rT&)!jE1:\FT(9DqrN"u
j`^RaGP^HIr8r;&k'R$gH2HfQqriP,k'm0kJG\P[qriP+k^iToKDXqdqs&h2l%Js!L&:.hqW`k6m"kT+
M#6OrqsB=<lA,9$K`(4qr9]L@mZ.86Nr8C/r:#pJn<<h@Pl1->qX^'Oo:#UKRf)Z=qt$?Uo9T~>
>>
/CSD add_res
/1 /CSD get_res idxcs
clp
[1 0 0 -1 0 170.52 ]ct
[81.168 0 0 -121.008 348.936 167.063 ]ct
snap_to_device
<<
/T 1
/W 168 
/H 251 
/M[168 0 0 -251 0 251 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcOC&X9#L*!!(OML&h8SrW.TOg]7BTVua4*!!(CIM?*\Wq>l0KhuNfXU]Iq*!!(7ENWB+[p&TaGj8f5\
TE2Y*!!(+AOoYO_nc==CkQ(Y`S,pA*!!'t=Q2pscmK%n?li@(dQiY)*!!'h9RK3Bgl2cJ;n,WLhPQAf*
!!'\5ScJfkjoL&7oDnplO9*N*!!'P1U&b5oK)sU*!!')$Y5nV'eH(C*!!*!!JcXX-!!&quZN1%+d/f+*
!!)irJcXd1!!&eq[fHI/blNh*!!)]nJcXp5!!&Ym])_m3aT7P*!!)QjJcY'9!!&Mi^B"<7`<#6)r;uQm
rW9q;!!)Efa8u;Bquc]sr<;s!r<*'$h>usD!!'S2rrW0%r<2<frWW9(r<!$$c2dnF_#aK8!WiH+rWMs!
m0<:grri<'!!:RL!!)9bfDu$T!sAN*q?>a\q?7!)"9S`-joOrP!!'q<"9JZ-"9eT*q$,sdrs&<(qZ[!&
rr^mS!!(%?"9JZ-"9eW+qZcd"mKiOlq?Hj$!sA].!o!_U!9O=C!<WB*"9eW+r!*!&oa(9up'CL"qZcs%
!sA].!p]mZ!<<,D!<WB*!sJN*r!*'(q?[*-k6_1qr!<<.qZm$'r<39+"9S_`!<<,F!<WB*!sJQ+r<E-(
rWiQ2#RU54n-epsq[!*)r!**'!X&T-iW0#ZciF4M!sAc+"oJT'#Q+i-$2P"f$i121$2k/.#65#-#5n],
"9Sbe!<<,J!<WB*"9e]-r<E3*r!<0,q$[-0ljWXsr!EE1r<W<+rW`<)!X&T-joGG^eH#dR!WrQ.rWW6)
r<N<-!"&Q1q[<*+nI>4$q[<9.r<W?,r<E6)!X&T-kQ(Y`rW1XP!WrN-rWW9*r<N9,r!N?0q@)?mq@*6/
r<`N2rWrH-r<E6)!X&T,l2^kbf)YpS!sJT,rW`<+rWiK1r<iH1r!`</q[W-+p^R*/r!WH1r<WB-rW`<)
!X&T,li@(df`;-U!sJT,rrrH-r<N<-r<iH1r!`E2p^Zg)p^[-0r!`N3r<`N2rWrK.rW`?*!X&T-m/[1e
q>oOU!WrN-rWW9*rWiE.r<iK2r=&Q4q@<H7lOa"*q[WK4r!`N3rX&W3rWrK.rW`?*!X&T,mf<Cgg]7HX
!sJT,rW`?,rWrH0rX8W4r!iQ6rX\o<p(?p/r"/i<r!rW6r=&W4rX&W3rWrK.rWWK/"U"o0n,WLhh#RW\
!sAc2rW`?,rWrN2rsJ`5r=&T5r=8i<r=J]8ne1[/r=Ju>r!rW6rXA`5rX&]5#RLD7rW`?*!X&T,nc8^j
p&XCY!<WK("o\`+#Q>#-$N:G3%/gY6%f[(=&Gd""')E4=&H<:>%fHk8%/pY7$31G4#lY)."p>)5"9S_s
!<<,X!<`H+"9eu.#6"i/#RCb9$N:G4%/^S6%f[(=&H!.9')N@;'`JgE'DW:<&cN=A&,d":%K-_7$iUM4
#lY)/#6"c,"9\8s!!(sYrr`6(rW`B-rWrK1rX8]6rseu;r=/f<rXeu>q\&lAq@rN9q@roBq\&f=rt,2@
rXSl9rXAc6rX&]5#RLD7rWWK/"U"o/p&P-nncA7]!<WK("oef+#6Y;<#mq%=$iUS5%K6k;&-!4=&c<:A
'DrR+(&SdG'DrLA&cN=A&,m(;%K6e8$NLP6$N:>2#Q=o1"U,#2!qu]q!94(^!sAc2rW`B-rWrK1rX8]6
rXJi:rt#,@r=Su@rtG>Fq%`?6r>,2DrY5AGr"Ar?!Y>nRrXSl9rXAc6rX/Z2rWiH-rWN<*"8Dls!9F4a
!WrQ/"o\]1#6tM?#mq%=$iUS6%K6h?%hB3_&cWIA')rXE'`/X?(@i::(AejG'`SjF')`CD&.fBO%fHk9
%0$_7$N:>2#QG#-"T\`.q#LHqmK*+a"p+l0"U,)7rWiH/rX/W4rs\i8rso&>rt,/Ar=T)DrY58Fq\J6/
q\K)ErY5AGr=])A!Y>nRrXSo:rXAc6"pt\D#RCY?rWWH."U"r(!<<,_!<E6(rWW<+rs/N/rsJ`5rXAc8
rXJu?&.ngQr=T/F'GUH[r"e</q%rrEr>#;G!#,;DrXf2C&.eaMrXJi8rsSf5rs8T/"U5/7"U"r)!<<,`
!<E6)rWNQ3"pYA=#RLhFrX8`7rXJi:!Y5hRrXo,B";;F_'G^T^r"euBrtt2BrttGGr>,;G!Yc=^r=])A
":u+T%M&IIrXAf7rX/Z2rW`T2"pG/5"8i0"!9sRf!<WH."o\`+#QG)/$NCM5%/p\=%Ls!\&H3:@')rXF
'`AdF(AJ[G)#G3?)Yt<O)#+pG(B"sL'GM5[')iIE&.fBO%fQq;%/pY7$N:;:#6tG;"U,#2!r`3#!9sRe
!sAc2rW`B-rs8T2rsSi8rXJi:!=ob@&cNFC'E8dG(&\pD(B><N)>G-D)u(<O)>tEQ)#5!I(B"sL'GM5[
')iIG&.f?^%fQq:$k`pU$47(F#R:S="pG/5!s/K(!:'Xf!sAc2rW`B-rs8W3rX8`7rXAu?%M'*^rXo,B
!YZ7^rY>DJr"o>Kr>GJNk8X::rYY\QqA9,Hr=oAJ'GLHYrXf/B&,m(=%K6e9$iUJA#RCY?"pP57"9SZ*
!:0^i!X&Z1"pY&3rs8W3rX8`7rXAr>%M'-M&cNCE',2/[(&f!F(]>6M)Z(K=*;^]Q)ZCTS)#G-K(B"sN
'GD,m')iIG&.f?^%fQn?$k*LO$4R=L#RCY?"pP57"9SZ)m/[@l"9er5#6"l-#lb83$iUS7%K6h<%hS^P
";2=\'GUN]rYGAI!#Y\Qr>PSQq],#EqAfJRru:nTrYbSLrYGJJ!Yc=^rXoDI&J,Ka%M&IIrs\o8rX&u<
#R:S="pG/5!s%`i!s/Q."o\`+#QG)0$NCM5$j[:O%Ls!\&.oNR&cr^\'`JjI(AemL(`=4i)ZLcV)uL]O
*V1?J*W-oU)u^cT)#tNO(]G3L'a,3b'+trW&H`RT%M&IIrs\l7$47+G#R:S="pG/5!!)Hg!s/Q."o\`+
#QG)0$NCM6%/p\<%Ls!\rXf8G&ebrnrY>DJr"o>MrYk_Sr>b_Ur>thXqB5YWr>thVr>beUr>P\R!#YVM
rY>VO'bh>qrXoPM&J,Ka%LrpW$k3+C$47+G#R:S="pG/1mf<q$"9er5"pYA=#RUnH$OdIC%0I(M%hS^P
"qhO^'GM8srYGDJ!Z2dmrYkbTr>bbVrZ;%\rZLPMrZD.]r#PbVr>Y_Sru(\MrtbSK!>H4H&df3_&.f?^
%LijU%/pV@$47%E#6tG;"T\#m%g)q<"U5/9#7(SB$4@4M%/p\@%Ls!\&J5Wg!YQ.\rY>GKr"fDO)&`Dl
rYthVr>knZru_([m32?Lru_4]rZ1qWrYthTru(_NrY>\Q'bh>q&eb0U#7qCU%LijU%/pV?$47%E#6tG;
!<*#k!=o88"U,)7#6tM?$47.K$k3+Erso&?rt55CrtPGIrtbMKru(eSrYthVrZ2"[ru_.]qB>AQqB>bZ
!ZrL*r>kkWrYknW)B&Pmr"oAKrY5ML'+trW&I/jX%LrpW$k3+C#7:eD#R:S=!:g.$!X&Z1"pP;;#RCbE
$O[@OrXB8G%M00`&J>]i'GM8srYGGKru(eSrYthVrZ)%]+!:G(r#thZpETJXr#u"]ru_7^rZ1tXrYktY
)AsD0r>5JLrY5GJ'E/UP&J5Qb%LrpW$k*LOrX&c6#R:S7o)T@'!sJi4"pYA=#RUnH$OdIC%1WjX&.fEc
&eYil'GV>u(Ao!K)?1WS)u^iW*WI2\+9!D]+o<JJ,Q&ba+oNMb+!2R'*W@&Y)u^cU)>tBN(B5-L'`J^X
&J5Qb%LrpW$k*LO$47(F#6t8*!Vug,!sAc3"pYA=#RUnH$OdIC%1*LS&.fEc&eYilrY>GKr>,JO)?(QS
)u^f[*??1B+8m>]+oNV^,60"V-2Sqc,5i\a+9EW,*r[2[*<$oW)ZL]Q(E+&)'bqDs'+toi&J,H_%LijU
$k!FM$4-tC!;$:%!sAc2"pP;;#RUnH$OdIC%1<XU&.fEc&eYil'c$]`r>5JOru1kUruD"Y!?N?^+T3J_
,5`\`,lf:f-ho(h-N,4j,lJtd,5rbb+9EW,*r[2[*<-uW)?C]mr>-=e()7Pu'GD)l&J5Qb%LrpW$k*LO
$47%E!;-@5!X&Z1"pP;;#RLhF$O[@O%1NdW&.fEc&eYil'c$]`r>,MQ)&`Vr)]Kb:rZ)"\+9!D^+oW\a
,60"g,lf:f-hSn`-iG@i,Q8nd+oWSe+!)ID*W@&Y)ugiV)>t?g()@W"'GM2n&eP]e%h9'Y%1EXQ$OR4H
!;6F8!<WK/"pP;;#RCbE$O[@O%1NdW%hK<b&eYil'bqK"r>,PQ)&aFm)[IE'*??1C+!;^*+oW\b,60"g
-2].b./PIg./YFm-N5=j,Q/hd+oWSb+!1D%ruD%Xru1nTr>-7c()7Pu'GD)l&J5Qb%LrpW$k*LO$46e,
!?M=G"U,)8#7(SB$4@4M$k3XU%M'*_&J>]i'GV>u(B#'L)?1WT)ugoW*<R?)+<^Y,rZ_=dr[%Iir$_.c
q'l4ir?h[o,pai9,QAte+oWSl+!)FC*#on:)B'J2r>,nY()7Pu'GD)l&J5Qb%fQn@$k*LO$39f$*WcHJ
"U5/9#7(YD$O[@O%1NdW%hK<b&eYil'bqK"r>,eY)&aD4)]Th<*?G2&rZM4arZ_=d![T->r?qOlr$hOn
!%[mss""$tq^MIlr?qRjrZhFerZM@d+<M[(*=!Q()]K\6)&W>h'c%Q"'bh>q&eYcg&.]6[%1EXQ$OQn.
!<`K."U5/J#6tM@$47.L$k3XU%M'*_&J>]i'GV>u(B#$Y)&X>2)]Kb:*??1C+<^Y,s!%Fe![T->r[7[n
r$_[s.P(EJoe$(mr[Rjqr@%Xmr[%RhrZ_@crZDLh*ZZ7@*#fh8)?C]mrYH7a()7Pu'G;#j&J,K`%LijU
$k!FCp]2B;"9er5#6tM?$47.K$k*RS%M'*_&J>]i'GV>u(B#$[)&X>2)]Kb:*??1C+<VgNrZVIi,:+W_
r[7[nr[@mu.P(KLs"47'nh1,!/hS_-r[e(!r@.^or[.mr,pX][+sR"0%3Qc8*ZZ7@*#fh8)AsCk(D@Q"
'bqDs&eYcg&.]6\%1N^S$NTu'*<H?I"U5/9#RCbE$O[@O%1NdW&.fEd&ebro'c%S`(CV0!)B'P7*$$%@
+!;^*+o`_h,9nH[-N5Cm./bS!.P!&$/M8[T0D[C"1&E['0**[Wr[e(!r[Igpr[7^lrZ`"!+sA*P+<MXF
*?6%<)]BV4)#b<a()@W"'GD)l&J5Qb%LrpW$k*.3!=Ao3"U5/9#7(VC$P<aT$k3XU%M'*_&J>]j'GV>u
r>-"_)&aD4*#ot>*ZlLI+X&$RrZhFhr[7^or[A"#.P*,&0)dO'0`3Zu1Ars+0F'6a/hJV*.k:NIr[8R1
-RL,c,9nBV+X%sN+!)FC*#on:)B'In)#b<`()@W"'GD)l&J5Qb%LijU$ip,)%0?Y9"U52:#RCbE$O[CB
%1E^W&.oKe&ebro'c%Sa(Ddr,)B'P7*$$%@+!;[L+X/*T,:+W_-R\mA$RmMS.P*,&/h\k30`Eg*1B'*)
2#]<01B'$-0Es0`/hJV*.fLmr./t[p-3#4h+q>b>+<VaH*?6%<)]BV4)#b<_()@W"'GD)l&J5Qa%LijU
!;Z^9!sJi4"pYA=$47.K$k*RS%M'*_&J>]i'GV>u(B,*e)&X>2)]Th<*?H:F+<_mP+sS<Y,pt&g-jqFP
.4Qeu/M8\00JNJ\"#;Vh1]90/2Z#H32Z5H41]B-:0ek@93%lm9/1`:M.2XH]-RU5e,U4NX+sA*P+<MXF
*#on:)B'Ll(Cq8s'bqDr&eP]e%h9'Y%068+&-E%="U52:#RCbE$OdFQ%1WaU&.fEd&ebro'c%Sa(Dmu,
)B'P7*$$%@+!;[L+X/*T,:+Za-R^DB.1@[W/1rS/0JG491,:Zb2#fK42ZPl53r_5=2\S)-1c.!G1,:R=
0JG.4/M&G&.4P6E(+1IU,pOWY+sA*P+<MXF*#on:)B'J0rYH%['bqDs&eYcg&.]6[%068+)Zp6I"pP;<
#RUnH$OdFQ%1Wm[&J5Wg'GV>u(B,*`(`=51)]Th<*?H:F+<_pQ,9nH[r[/4)-n-Sp/1`A+0/,(71,:Zb
1]TH52Zc$%47YK94$,J`r\jg8-o<b:1,:R=0JG.4/M&A$.4HYn-RU2d,9nBV+X%sN+!)FB*#fh8)B&Mj
%Mffp'bh;o&eP]e%LrpJquI`="9eu6#6tM@$4@4M$k3XU%hK<b&eYil'bqM_(EOG4)B0V8*??1C+<VgO
+sS<Y,pt&g-n-Sp.P*/(0+BTh0etL?1c.*L2`Wr]r]L3Ds$$HIq`k3I5!Js/r]D_n3]T,X2Dd6J1,1L;
0J>%0/1N(t-n$Gj-7'l]+sJ0R+<VaI*?6%<)]BS3rYH"Z()7Pu'+tlh&.]6\!;lj4!sJi4"pYD>$47.K
$k3XU%M'*_&eY?]'GV>u(B,+!)&aD4)]Tk=*ZlLI+X/*T,:+W`-R^Al.4Ql"/h\n40etL?1c@9O3BR4&
!^/_3rBU'Br'2u#4Ztni4$#;Z2Dd6H1,1L;0/"n..Olkr-n$Gj,pOWY+sA*P+<MUE*#on9)AsA.(C_/r
()7Pu&eYcg&.]6Nr;di>"9eu6#6tM@$4@4M$k3XU%hK<b&eYln'c%Sa(G$FA)B0V8*$$(B+<VgO+sS<Y
,pt&g-n-Sp/1iJ-0JP:;1Gh!K2`a#_4?Yn-5lX.M6N0@J7/fO]6:*t(5X7Ot4Zkhg-TO+D1c-sC0eb:7
/hAP'.4HYn-RU2b,9e<T+WqmK*??+>)]BV4)#b<Z()7Pu'+toi&J,EPr;df="U,)7#7(SB$4@7N%1NdW
&.oKe&ebro'c-cb,o@L<)B0Y9*?H:F+<_mP,9nK\-RU;j.4Hbu/MAe30etUC1cI>r3]fGe55meM5sdq+
7/fXJ7PmP&6psC/6:!k%5<V+k4#o5X1c$mB0eb75/M&A#.4?Sl-RBu^+sJ0R+<MXF*?6";)B'Lm(CCon
'bqDr&eP]e%fcV/!?2+D"U5/9#7(VC$O[@O%1NdX&.oKe',2/r()Hlc1Dq)L)]Th<*?QCH+X&$S,:+W`
-R^Al.P!&&0/,+81,CaF2`a#_4[)+r5sdq,77B[88,c'R8K(,j7n6$<779L16:!k%4Zkhg2`EWO1GU[=
3#aM&/1N(t-n$Gj,pOWY+sA*P+!)FC*#fh8)&`Di$5OBl'GM/m&J5QSrW*o>"U,)7#7(SB$4@7N%1NdW
&.oKe&el#p()Hlc1Dq&K)]Kb;*?H=G+X&$S,:+W`-R^Al.P*/(0/,+92)I3M3BK>d5!VA!6:=727Rp!@
8H_UV8kMbP9EIjZ9)_C;84Z3>779L05sR[u4?PY`2Dd3F0ek@8/M&A#.4?Sl-RBu^+sJ0Q+<MXF*#on9
)AsCk(FBn4'bh;o&ePZT!<E6)"U,)8#7(VC$O[@O%1NdX&.oNf',2/r(B,*X(`=52)]Th<*ZlLJ,9\6T
,:+W`-R^Al.P*/(0/,+91Gh!K3]oMg5X7V&6q'R88H)0\9)VH_:&Icb:&Ra@8kDTF84H':6UF((5<V+j
3B&iQ1,:R<0.ne*.4HYn-RU2b,9e<T+<VaH*?6%<)B'Lm(CV&p'bqDq&eP]U!<E9?"U,)7#7(SB$4@7N
%1NdW&.oKe&el&q()Hlc3#NVQ)]Th<*ZlLI+X/*T,UFfc-n$Mo/1iM70JP==1cI?T4?Yno5sn%/7Rp!@
8P;`N9heAX:J^^]"A_fg:/1^](.q.i84Q-<6UF((5!1qg2`<KK1,1I9)(mHi.4HYn-RL,a,9e9S+<V^G
*?6";)AsFl(F0b2'bh;o&eP*E!X&Z1"pYA=#mq%J$k*RS%M'*_&eYil'bqM`(HE?N)B0V8*??1D+<_pQ
,9nK^-R^Al.P*/)0JG4:1c@9R4$5\l5sdt.7Rp$A8k_oQ:/Oe`;GpFl!)r\m3E&jS;G^1c:/+DU91_]G
7n,m65sR[u4?GJ[1c$mA0J>%0.Ocep-mp>f,9nBU+WqjJ*?6%<)B'Lm(F0b3'bqDq&eP*E!sAc3"pYA=
$47.K$k3XU%M03a&eYln'c%Sa(D%H&)B0Y9*?H:F+X&$S,:+Za-R^Al.P*/)3&!'B1c@9R4?Yno5sn%0
7n?3D9MA/U:Jaqf<)lt"oiF+R<`E!r;G^.a9h\5P8Ou<>6pa1)5!1ne2`*<G0eb75/1N(t-mpAg,pOTX
+WqmL*??+>)]BV4rYH%[()7Ms&eY0F!sJi4"pYeI#RUqI$k*RS%M'*_&eYil'c%Sa(H!'K)B0Y9*?H:F
+X&$R,:+W`-n$Mn.kE;40JP=>2E*ZZ4[;8!6q'R98P2ZM:/=\a;cHdur`B,%pfRZ%=BPQ(*EH0=;G^.a
9h\5P8Ol6<6U<t$4?GP^1c$mA0J>&*/1N(t-mpAg,9nBV+WqmK*??+=)]BS2(Ddi&'bqDq&c_t9"U,)8
#7(YD$O[@P%1WjZ&J5Wg'GV>u()Ic()&aG5*$$%@+<VgO+sS?Z-RU;k.4Ql$0/,+91c@9S4?Yqq6:=:5
8P)TL9i"S`;cQk"='/U.>?b?;ra#J.r`hHf>?P'1='&F%;c6Cd9h\/N84H$869mau4?>DX1GU[=0.e_)
.4?Sl-RBu^+sA*P+!)FB*#fe7)?(Ep()@W!'+t9I"9eu6#7(SB$4@7N%1NdX&.oKe',2/r(B,*c)&aD4
*#ot?+!;^M+sS<Y-RU;k.4Qkn/h\n51,LmJ4$5Yk5sn%084cEI9hnM_;cZt$=BSj4>[:ZCp0^['?X6rB
>?P'0=&r:!:esh[9M%fG779I-5<V+i2`*<G0eb74/1N(s-mp;e,9e<T+<VaH*?6";)AsA.(D[c$'bh8\
!sJi4#6tM@$4@54$k*RT%M03a&eYln'c%Q$(Dn#.)]Kb;*?QCH+X/*T,pjuf-n-Vs/MAe41,LmJ4$5Yk
5sn(184cKK:/=bd<EE7(=^,-:?iFI5@K0g7A,g$<@JsRW?<pf?=]ea+<)QOi9h\/N84H!65X7Ip3B&cN
1,1I8/1VD`.4?Pk,pOWY+X%sM*ZZ4?)]BV4rYHUk()7Ms!!EH0"pYA=$47.K$k3XU%hK<b&ebro'c-cb
4W,.V)]Th<*ZlLJ+X/-U,pt&g.4Hf"0/,+91Gh$O4?Yqq6UaI98PDiR:f:7n='/U0?!^oH@:<VUA7]?K
B)Z@gA7K(W?sm>I>[(?4=&r6t:JOSU8Ou<=69me!4?5>W1,1I9/hAJ$-n$Gj,pOWY+WqmL*??+=)]BS2
(Ddi&'bqD_"9eu6#7(SB$4@7N%1NdX&.oNf'GM8t()Ic()&aG5*$$%A+<VgO,9nK^-R^Dm.P*230etOA
+?)>D4[;;#77Kj@9MJ;Z;cZt%=^,0=?smDQA7]@bB4q3Wrb;=E4D/;=AS#C]@:3JK>[(<3<`Dsn:/">Q
84H!65X.@m2`<KJ0eb74/1N(s-mp;d,9e<T+<MXF*#on9)B&Mj',D;t'EA:?"pYA=#mq%J$k3XU%L<UX
&J>`k'bqM`(Hr]T)B0Y9*?H:F+X/*T,UFfd-n-Vs/MAe41,LpM4?Yqq6UaI98k_rT;H$Ut=Bf$:?smDR
AS,RfBPD0qCADWqC2.HsBP1pgA7AtT?X6o>=BAL$:ej_Y8Ou<=69m^s4#]&S1,1I9/Lr8!0dnCs,pOWY
+X%sM*??+=)]BS2(Ddi&'bgWO"pP;;#RUnH$k*RS%M'*_&eYil'c%Sa(H`QR)]Kb;*?QCH+X/-U,pt&g
.4Hc!0/,+91c@9S4?u2"77Kj@9MJ;\<**.(>?tTD@:Wq]B4u!oCMRbcD>S5ND?"E6CMITuBP1pf@UWYO
>[(<3<`;gi9h\,L7RTR.5!1kb1c$m@0.ne*.4?Sl-7'l\+sA'N*ZZ4?)]BV4rYHIg'bp]P"pP;<#RUnH
$k*RS%M'*_&eYln'c-cb+W2.9)]Th<*ZlLJ+sJ6X,pt)h.4Ql$0/54<1cIKY5!VFS6q0^=9MJ;\<**1)
>[CfH@qB7bBPM=$Ci+'/E;4E:E,]]4D/=!&BkV-jA78kR?!CH5<`;gi9h\,L7RKI,4Zk_`1bpd>0.e_(
.4?Pk,pOWY+X%sM*??+=)]BUn(D[c%'`\CA#6tM@$4@4M%1NdW&.oKe'*Ap`'c-cb5oCRZ)]Tk=+!;[L
+sS<Y-RU;k.4d&(0JP=>2`a&a5XIk.84cKL:Jt1o=Bf$;?t!SWB4u!pCi+'/EH-#>F)uC#F"q]VF)l;@
E,]]3CMIQsAn>I\?sR#?=&r6r:/";P7n#d25Wh+e2Dd0D0J4n+.4?SlC*k5O+sJ0Q+!)FB*#fe6)&F))
()6fQ"pYA=$47.K$k3XU%hK<c&ebro()@]&(`=52)]Tk>+!;^M+sSB[-R^Al.P*2+0etRD2`j/f5sn(3
8PDiS;H-_">?tTD@Us(aBkhR'DK'T9rcA*]q/u^Zrc8*\EB%oTD/3m"B4YU^?s[)@=&r6r:/"8O7R]X/
5!1kb1c$j?0.e_).4?Pk,pOWY+WqmK*??+=)B'Lm(Dmo&!!WW4#7(YD$OdFQ%1Wm[&J>]j'bqM`(FC"<
)B0Y9*?H=G+X/*T,pt&g.4Hf"0/,+:1cIKY5!VJ(7nH?I;&E21='/[4?XR>SB4u$qD/O<4EcQ5CF`qs,
GQ2peG<^7oF`heIF)l8>DJX*&B4b[_?s[)@=&r6r:/"5M7RTR.4Zk__1bpd>0.\S%-n$Gh,pOTW+WqjJ
*?6";)B&Mj)&<tf"pP;<#RUqI$k*RT%M03a&ebro'c%TQ(Ddr-)]Kb;*?QCI+X/-U,pt)h.4Ql$0JP=>
2E<l_5XIk.8P2ZO:fCCr=^5<A@qB:eC2@a+EH6,BF`qqPG^4U]qg1/GH?a[YG'.nJF)l8<D/3m"An5=X
?<gW7<`2^f9M%cD6U<t"4#\uP1,(@5/1N(s-RU2b$mHl=+<V^G*#on9)&`Di>8@2C#6tM@$4@4M%1NdX
&.oKe',2/s()Ic()&aG5*$$(B+<_pQ,:+]b-n-Sr/MAe41Gh$P4?u2"77^!D9i+bh='8d8?t3b\BkqO&
E,p#@F`qtRH?spcIJJ=!I!g9eG^"=RFE;L\EH#c5C1q3i@:3AF=BAI":J=AP7RTR.5!1kb1bpd>0.\S%
-n$Gh,9nBU+WqjI*?6":)B&Mj()?lS#6tMA$4@7N%1NdX&.oNf'GV>urYI(&)B'P7*$$(C+<_pR,:+]c
-n-Vs/hf"81c@?V4[;>&7S-6I:Jt1o=^5;M?t*\[BkqR'EH6,BIs6-`H[L9mJ:W9'rI[FgJUi9"I=-Bf
GBS+NF)l5;De`rtA78kO>?Fs*:ej\U84Gs45Wh+e1c$m@0.e_(.4?Pj,pOTX+WqjJ*?6";)B&Mj()?lS
#6tMA$4@7N%1NdX&J5Wg'GV>urYGVR)B(gZ*$$%A+<_mP,:+Za-n-Sq/MAe42)I6R4?u2"7S$*E:/Fnk
=Bf'=@V'1dCMds/F)uJIGC"U`IXm!%K7npTKfFa=K7\Z)IXHHdGBS(LEc>o7C1q3i@:3>C=&r6q9h\,K
77'7'4?5;V1,1I8/1N(s-RU2b,9e9T+<V^G*#on9)&X5,('"OD#RCbF$OdFQ%Ls$^&J>`k'c%Sa(I8oW
)]Kb;*ZlLJ+sJ6X-RU;k.P*2*0etRD3BTGi6:FC99MJ;]<``F0?t!SXBPM@$EH?2DGBeF]IXm$&KS>/8
q1fH7LkUM7JUi2rH?XOSF)j$TDJs9'ARf+T>Zk--;GKnX84H!55Wh+e1c7!A0.e\'-n$Gh,U4KV+WqjI
*?6":)B&Mj8,ri!#RLhG$OdIR%M'*_&J>`k'c%Q$(Dn#.)]Th<*ZuRK+sS<Y-R^Al.P*5,0etRE4$5bo
6UjU=9MSJb='8d8?t<k_C2=N#EH?2DGBnO`J:W?+Lk^\AMMh=i6]-b[M2-h>KS+i)I!U$\FE;JAD/3iu
AR]%Q>?Fp):eaVT7n#a04Zk__1bpd=/hAJ$-mpAg,9e<T+<MXF*#fh8)?(Ed!!``7$47.K$k3XU%hK<c
&el&q(B,+;)&aD4*$$%A+<_mP,:+Za-n-Sr/MAe51H%0S4[;>%7nHBK:fCCs>?tWGAS5^qDK0`=Fa&.Y
IXm'(LkghEMi3RTqi;_WNJi[QLPCM8JUi,oG]n1MEc>l2BkCma?sHi94]PBT9M.iF6U<q!4#\uO0eb42
.Ocbn-RBu^+sA'O*ZZ4?)]BS2(Dd&V#7(YD$OdFQ%1Wm[&J>]j'bqM`(HiWS)]Kb;*ZlLJ+sJ6X-RU;k
.P*230etRE3]oSl6UaO;9MSJc='8d9@:X"bCMe$2F*2\QH[^NuKnbA?!K2s:NrY:=O]mj-O,f-UM2-n?
Jq/5qG]n1MEGfT-BP(a^?<^N4;c$1^8Ol085Wq1f1c$j?0.e\'-n$Gh,9nBU+<V^G*#on9)&X5,!!``7
$47.L$k3[V&.oKe',2/r(B,*a)&aG5*$$(B+<_pQ,:+]b-n-Vs07GT01,LpO4?u2#7S-6I:K(:r>?tWH
AnYpqE,p#BG'J@_JV/Z3M2I:RO-#KeP*;)oP`q8nOcb`dNf/dML4k20I!U![FE;G>CM@Em@:3>C=&i-n
9M%cD6U3gt3Ar]L0eY.1.4HYm-7'l\+X%sM*??+=)B'J0(B=[G#Zh??$OdFQ%Ls$^&J>`k'c%Q$(Dn#.
)]Th<*ZuRK+sS<Y-R^Al.kND.1,CgI4?Yqr77TpC:/Fnk=^5?CA7oUlDK0`>G'J@_J:iQ2N/N^WOHG]j
Q'M64+I/4UP*(fdNJ`RIKS+f&H?XLQEc>l1BP(a^?<^N4;bqj:8kDK?5sROo2`*9E0J4n+.4?Pk,pOTX
+WqjJ*?6";)As>-!!`c8$4@4M%1NdW&.oKe',2/s()Ic))&aG6*??4E+X&$S,pjuf.4Hf#0/54=2EEra
5sn+48k`#Y<``L2?t*_]C2Ip1F*2\QI"6j'LQ%.PO-,TiQ'MK<R$di?>*t\GQBdYrOcPKZM2$\7IX??`
FE;G>DeWip@:3>C=&`!k9M%`C69m[q2`*<F0J=t,.4?Sl,pOWY+WqjJ*?6";)As>-!!`c8$4@4M%1NdX
&.oNf',;5trYHFi)B'P7*??4E+X&$S,pt&g.4Ql$0JP=>2_$mO5X@e-8PDiT;cd(+?X[JXBkqU+F*)SN
H[pa%L5_%OO-,WkQC+).S,AdOS"5t7Q^3l!OcPKZLPCJ5IX?<_F)l5:C1q3g?sQu<<`2dg8Ou9;5X%:j
2D[*B0.e\'-n$Gh,9nBU+<V^G*#on9)&O.i#7(VC$O[@N%1NdX&.oNf'GV>urYIj<)B0V8*?H:F+X/*T
,pt&g.4Ql%0JPFA2`j/f6:FC99MSD`='8g:@V'4fD/aN:Is?<hJV8c7MiWp]PEhT(Sc5-/St;RHStMUD
S!fY0Q'.8jNJ`LFK7J>qGB@nGDJNs!A7/bK=B8?r9hIu67RTO,4?>DX1,1F7/1E"r-RL,a+sA*P*ZZ4?
)]BS2(B=[G$47.K$k3XU%hK<c&el&q(B,+>)&aG5*$$(B+<_pR,:+]c-n-Vt0/,.;2E*`^5XRt28PDuZ
<``L2?t3e^CMn-5FEVtXJ:iQ2MN3a[PEqQ'S"-(BTqS2dUSFQWT:VRCSX>k2P*(f`N/!":IX?<hF)l59
C1h*d?sHi9<)?=`8Oc*75Wh+e1bpd>/hAJ$-mp>f,9e9S+<MUE*#fe7)&E8X#RUnH$k*RS%M'*_&eYln
'c-cb*>ob7)]Tk>+<VgO,9nK^-n$Mq/MAe51c@?V5!_O_7S$-G:K(:r>[LoMB5)1"EcZAIH[^O!L5_%O
OckurR@Ke>TqeF]V,F+bU7\$IS!]M+P)t`^LPUS5I!TsXF)c&4BP(a^?!16/;GKnW7n#a04ZbSZ1,1I9
/1N(s-RU2b+sJ0Q*uu@A)]BV4(B=[G$47.L$k3XU&5WrN&ebro()@]&(`=52*#ot?+<VgO,:"Q_-n-Sr
/h\q71cIHX5X@e-8PDiT;cd+,?t!V[C2Ip1FEVnUJ:iQ2MN<j^Q(",2S=cOOV5C-hVuEP@V5'`US=Q%5
PECocN/!":IX63\F)c)9BkCm`?<^K3;GTtX84>m2Gs+8K2D['A0.\S%-mpAg,9e<T+<MXF*#fe7)&E8X
#RUnH$k*RT%M03a&ebro()@]&(`=52*#ot?+<_mP,:+Za-n-Vs/hf"81cIKY5XIk/8PDlU<**4.?t*_]
CMe'4FE`%YJ:rZ9MiX!aQC+/3T;&-YVPgBkW;rlGVl$;dTq7dBQ^*_qO,A^HK7J;nG&q\CChdTn@:*8A
<`;dg8k;E=5s@Ck2D[*B0.eY&-n$Gh,9nBU+<MXF*#fh8)&E8X#RUnH$k*RT%M03a&ebro()@]&(`=52
*$$%A+<_mP,:+Za-n-Vs/hf"81cIKZ5XIn08PDm.;H6e&?!q2TBkqU+F*2\RIY!0-MN3d]Q'[o/StVsW
Vl6VrX/rA&Wi<+tV5'`SS!]M+OcPEWL4b#(H?OCOE,B?'ARStO=]\Nu9hS&I6pX%"3]8fM0J>"..4?Sl
,pOWY+WqmK*?6";)As=k#7(YD$OdFQ%Ls$^&J>b+'GVB!(Ddr,)B0Y:*?QCI+X/-W-RU;k.P*2+0etRE
4$>hq77^!D;,UFr>@(]JB5)1"EcZ_TH[^U$LPq4UPEqT*S=ua]Vl6VsYHY::YH4e(XeqqhT:D=9Q'.2f
MM?e8IX63[F)c&4BP(^]?!16.:eaVT7RTO-4?>EC1bpd=/M&>"-mp;c,9e9R+<DOC)]K\5(B=^H$47.L
$k3[V&.oKe',2/s()Ic))B'P7*??4E+X/*T,pt&g.4Ql%0JP@?2`s5g6UaO<9M\Pe=Bf-@A7oXnE,p&D
G^P$oL5ChLOd)<&S=ZIOVPpMrYPb[/Z*14-VgbM=Tq%U>QBI>jMMHn;IX?9]F)c)5BP(a^?!16.:ej\U
7RTO-4?>DX1,1F7/1E"r-RBu^+sA'O*ZZ4?)]BS1!!ii;$O[@O%1WjZ&J5Wh'GVB!(Ddr-)B0Y:*?QCI
+sJ6X-RU;k.P*5,0f(^H4?c"t77^$E:K(:r>^g$gAS5apE,p&DH@16rL5_+QOd29(S=cRZVl?`#ZEppG
[C!6EXK&4rV4jKNR?j&!O,JdIK78/lF`VP?CM@Bk?sQu<<DlRc8Ol085Wh+e1bpdF/hAG#-mp;d,9e9R
+<DOC*#fe6(B=^H$4@4M%1NdW&.oKe',2/s(4I&9)&aD4*$$%A+<_pQ,:+]b-n-Vs0/,+:2E*`^5XS"3
8ki)[='/^8@:a+eD/aQ<G'\OeKSGAEOHPlrS"-1JVPpMrZ*UjH\$rfQZEUC/Vkp/\S=,h1OcPEWLkC5)
G^jdTDJs6$A7/\I=&i-n9M%`B69m[q2`*9E0RbW*.Ocbn-6sf[+WqmK*?6%<)As=k#RCbF$OdIR%Ls$^
&J>`k'c%Q$(E",0)]Tk=+!;^N+sSB]-R^Dn/2&\31H%0S5!VJ)84lTP;cd(+?t!V[C2Ip2FE`%ZJV8f9
Nf]EhR%'bBUo()jYHkOD\@K2[]<ecDWMcVgT2;&GRZrqqMi!7BJ9uNaF)l/:BkLsa?<^K3;GKnW7n#a0
4ZbSZ1,1I8/1N(s-RL,a+sA'O*ZZ4?)]BS2!!ii;$O[@P%1WjZ&J5Wh'GVD_(Fg:@)B0Y:*?QCI+sJ6X
-RU;k.P3;-0f(^H4?c"t7S$-G:K(=s>[UuOBRX]5E-$,FH@:?tLPh+RP*VK)TV80YW2m,-['mQY\\5V]
Z)jt'VPBcRR@9D'O,JjLK7J;nG&q\ACh[Nm?s[&=<`2[d8Ol395Wq1f1bpd>/hAJ$-mp>f,9e9S+<DOC
*#fe6(]XgI$4@4M%1NdW&.oKe',2/s()Ic))L`SD*$$%A+<_pQ,:+]b-n-Vs0/,+:2E*`^5XS"38ki)[
='/^8@:a+eD/aQ<GC"[gKSPGFOHPlrS"QINVPpMuZEq!Q]"5AYZE^L1VlleeS=,h1OcPEWLkC5)G]n.K
DJs6$A7/_J=&r3o9M%`C69m[q2`*9E0J4n+.=NZm-7'l\+WqmK*?6%<)As@l#RCbF$OdFQ%Ls$^&J>`k
'c%Q$(E",0)]Tk=+!;^N+sSB]-R^Dn/2&\31H%0S5!VJ)84lTP;cd(+?t!V[C2Ip2FEVtXJV8c8NfT?g
R%'V>Uo(8oXKf(<[^W`XZa-d8WMcSfT:D=<P^\aUMi!7BJ9uNjF)l/:BkCm`?!CB1;GKnW7mo[/4?GJY
1,1I8/1N(s-RL)`+sA'O*ZZ4?)]BS1!!ii;$O[@O%1WjZ&J5Wh'GVB!(Ddr-)B0Y:*?QCI+sJ6X-RU;k
.P*5,0f(^H4?Yqs77^$E:K(:r>[LoNB52:&EYih@H@16rL5_+QOd29$S=cRZVl?`#ZEsP;A$`JGXK&4r
V4jKNR$NquO,JdIK78/lF`VP?CM@Bj?sQu<<DlRc8Ol085Wh+e1bpdF/hAG#-mp;d,9e9R+<DOC*#fe6
(B=^H$47.L$k3[V&.oKe',2/s()Ic))B'P7*BtPd+<_pQ,:+]b-n-Vs0/,+:1cIN[5XRt28k`#Y<`iR5
@:X"cCiFE9G'JCbK8,5@O-,ZmR@KkBV5C2kXKVQ-3O,cgWMcVhTq%U>Q'.5iMMHn;IX?9]EcGu4BP(a^
?!16.:ej\U7RTO-4?>DX1,1F7/1E"r-RC!d,9e9R+<DOC*#fe6(B=[G$47.L$k3[V&.oKe',2/s()Ic)
)&aG6*??4E+X&$S,pt&g.4Ql$0JP=>2`j/f6:FF:9MSJd='K!=A7oUpDK9fJG^FmlKnkSIOcl#tS"-+G
V5C2kX/rM/YHP%.WMcViU7[sDQ^*\oNJ`I>KRnPtGB@nGD/3fr@UNJE=&`!j9M%]A5sROn2`*9E0.e_(
.4?Pi,9nBU+<V^G*#fh8)&E8X#RUnH$k*RT%M03a&ebro()@]&(`=52*$$%A+<_mP,:+Za-n-Vs/hf"8
1cIKZ5XIn08PDlW<EEC1?t3e_CMn-5Fa&-FIY!0-MN3a\Q(",2StVsWVPpJorMrDfWMcViUS"'GR$Nqu
O,JjLK7J>pG'%eED/*`q@:3>D=&Vpi91_T?5sIIm2Dd0C0.e\'-n$Gh,9nBU+<V^G*#fh8)&I`%#7(YD
$OdFQ%Ls$^&J>`k'c%Q$(Dn#.)]Th<*ZuUL+sSB\-R^Dn/1rn:1,LpO4?u5$7S-9K:fLM!?!q,RBPVI)
F*)VPI"6m)M2RFWPEqT,S=cLNY,8+qW2ZbpXf&%mUS49LR?s2%OH,3RKnFi$G]n.KE,99%A77T->Zb$*
:JFGP7RKF)4?5;U1,(@5.Ocbo-RBu^+sA'N*ZZ4>)]BS1!!`c:$4@7N%1NdY&J5Wh'GV>urYIa9)B0Y9
*?H=G+X/-V,pt)i.4d&(0etRE3]oVm6q0aA9i+bi=^5?CAS5apE,p#CG^FsnKnkPGO-5csR%"5KT:r'W
qPIDlUnaWTS=,b1PECoaN/!":IX63\F)c)5BkCm`?<^K3;Gg+Z84>m24ZkY[1GLR:/1N(s-RU2b+sJ0Q
+!)FB)]BV4(B=[G$47.L$k3XU%hK<c&el&q(B,*b)&aG5*$$(C+<_pR,:+]c-n-Yu0/,%71c@?V5!_P*
84lTP;c[")?X[JXBl@m/F*2\QIY!0,M2RFWP*MK(S"-(DU84U`V+RPYTqA!JSX>_-OcPN[LP:A2I!KmW
F)c&4BP(^]?!16/;GKnW7n#a04ZbSZ1,1I9/1N(s-RU2b+sJ0Q*uu@A)]BV4(B=[G$4dIO$OdIR%M'*_
&eYln'c-cbCDe$0)]Tk>+!;^N,9nK^-n$Mo/MAe41H%0S4[;A'84cKM;H?k'?!q/SBPVI)F*)SNI"6j'
LPh(POcu'!R@B_:T:_gNU8"?TT:VRCR@';*P)t`_M2$\7IX?9]F)l59C1h*d?sHi9<&d]K9M%]A5sROo
2`*9E0J4n+.4?Pj,pOTW+WqjI*?6":)As=k#7(VC$O[@P%1Wm[&J>]j'bqM`(IAuX)B0Y:*ZlLJ+sJ6X
-RU;k.P*5,0etRE4$>hq77TpC:/Fnk=^5?CAS5aoE,p#BGC"^hKSG>@NfT<dQ(").Rf]+MT`(J]S6)2J
Q^3l!OcPKZLP:A2I!TsXF)c)5BkCm`?X$W5;bp+[8Oc'55<Ltc1bpd=/M&>"-mp>e,9e9S+<DOC*#fe6
(`*/W#RCbF$OdIR%M'*_&eYil'c-cb)&X>2)]Tk=+!;^M+sSB]-R^Dn/1rV21,Lp?4$5bo6q0a@9i"\h
=Bo3@A7fOkDK0`>G'J@_JqSl8MiNj\P*M?"R$jM7rL?WPR@0G2Q'@GoO,]$PLkC5+H?XLQEc>l1BOtX\
?!16/;GKnW84>m25!1b^1GUX;/Lr7u-mp;c,9e9R+<DOC*#fe6(`*/W#RCbF$OfrC%1WjZ&J5Wh'GVB!
(Ddr,)B0Y:*?QCI+X/-W-7:2j.4d&(0etRD3BTJk6UjU=9Mn\g='Js<@V'4fD/aN:Fa&.ZJ:iQ1M2RCT
OckonQC=0;QmA#aQBdVqOH5BYLPCJ5IX?<_FE;G>CM@El@:*8C=&`!k9M%a'6pa.%4#\uR0eb73.Ocbo
-RBu^+sA'N*ZZ4>)]BS1(B=[G#RUnH$k*RT%M03a&ebro()@]&(`=52*#ot?+<VgO,9nK^-n$Mp/MAe4
1H%0S4[;>&7nHBL:fLM!>[LoMB5).!EH?5FG^FjhK8#&:MiEdZOckomQ'Ra8Q<TW>P`h/kO,o3VLPCJ6
IXHHcF`VSBD/*`r@piSH=&r6q9hIuH6pX(#3]AlN0eb42.Ocbn-RBu]+sA'N*ZZ4>)]BS1(B=[F#RUnH
$k*RS%M03a&ebro'c-cb*#TY6)]Tk>+!;^N+sSB]-R^Dn/2&\31,LpO4?t8[6q0a?9i"\g='Js<@V'4f
Ci466FEVnUIXm')L5CeGO,oBbOckn,PQ$_AOcb]cNf/jOL4k//I!U!dF)l8;CM@El@:3>C=&`'m9M%cD
6U3gt3Ar]L0eY+0.4HYm-7'l\+X%sM*??+=)B'J0(B=[F#RUnH$k*RS%L<RV&J>]j'bqM`(I/iV)B0Y:
*ZlLJ+sJ6X-RU;k.P*2*0etRD3]oSk6UaO;9MSD`='8d8@:Wt`CMe$2F*2\OH[^KtKSG8@MMmMoNrY:?
OT:LBO!TdDMM[+BKRnZ$H?aUTF)c)6C1q0f?sQu=<`;dg9M%]A69m[q0fLpF0eb74.Ocbo-RBu^+sA'O
*ZZ4?)]BS2(Dd&V#7(VC$O[@P%1Wm[&J>]j'bqM`(IT,Z)B0Y:*?QCI+X/-V,pt)i.4Zu'0JYF@2`j/f
6:=:79MJ;]<``L2?t*\[BkqU*EcZAIG^FjhJqSi4LQ%+KNK0%tNrY2,NJi^PM2-h=K7SK!H?aUTF)l5:
C1q3i@:*8B=&i-n9M.iF6U<q!3]AlN0eb42.Ocbn-RBu]+sA'O*ZZ4>)]BUn(H;C!#7(SB$O[@P%1Wm[
&J5Wh'GVB!(Ddo+)B0Y9*?H=G+X/-U,pt)h.4Ql%0JP=>2`a&c5sn*b84cKM:fLM">[LlKAnYpqDK0`=
Fa&(WI"$X!KS>/9M2_7f6&CAPL4t;4J:;ikGBS(KEc>l2BkM!c?sQu<<`;dg9M%`C69m[r2`<HI0J>"/
.4HYm-7'l\+sA'N*ZZ4>)]BUn(CpKM#7(SB$O[@O%1WjZ&J50Z',2/s(B,+:)&aG5*$$(B+<_pQ,:+]b
-n-Vs/h\q71H%0S4[;>%7S-9J:Jt4p=^5?CA7fLiCi466F*2YNH@(*kJV/W0Lk^Z]LFe17KnP)2JUVun
H?XOSEcQ,9CM@Em@UNMI=BAHu:/"8N7RKI,4?GJY1,1Ht0.eY&-n$Gh,U4KV+WqjI*?6":)B&Mj'`\FC
#7(YD$OdFQ%1Wm\&J>]j'bqM`(I/iV)B0Y:*?QCI+X/-V,pt)h.4Zu'0JP=>2`j,e5sn+48PDlU;cd(*
?!q)OAnYpqDK0]<FEVkRH[L9mJV&ORK`-T-KS4u1JUW,uI=$9bGBJ"KEc>l2C1q3i?sd/A=&r3p9h\,K
77'7&4?5;V1,1I8/1N(s-RU2b,9e9R+<DOC*#fe6(`*u(!!WZ5#RUnH$k*RS%M'*_&eYln'c%Q$(E")/
)]Th<*ZuRK+sS<Y-RU;k.P*230etRD3BTGi6:=:78fp`(;H6e%>[CfIAS5^lCi465EccGIG^=^aI=?]s
JV!fPrdd=bJ:;lmH?aXWF`VVDE,BB*BP(d`?sQu<<`;gi9M%cE6U<t"4#\uP0eb74/1E"r-RL,a+sJ0Q
+!)FB)]K\5rYH7a!!WZ5#RLhG$OdIR%M'*_&J>`k7hldT(Ddo+)B0V8*?H:F+X/*T,pjuf.4Hf"0/,+<
1cIKY5=%Y*84cKL:K(:q=^5<A@V'1cC2@d,EcZ;DIs-$\H@(!dIJ\III!g9fH?aXWF`_\FEH#c1BkV*h
@:3AF=BAI":/"8O7RTR.4Zk__1bpd>/hAJ$-kIdS,pOWY+X%sM*??+=)B'Lm(Ddhe"pP;<#RUqI$k*RT
%M03a&ebro'c-cb58b@X)]Tk=+!;^M+sS<Y-R^Al.P*2+0etRD2`s5g6:=:68PDlU;cZt&>[LlJAS5[k
Df'H5EcZ;DF`qtRGl;pgHi86pH$FOWG'.n+F)uA@DJX*&BP(d`?sQu==&i-o9h\,K770@*4?GJY1GLR:
/M&>"-mpAg,9e<T+<V^G*#on9)&X5,()?lS"pYA=$47.L$k3XU%hK<c&el&q(B,*s)&X>3*#ot?+<VgO
+sSB]-R^Dm/1iM/0etRE3]oSk6:F@88k_tt:fCCr=^5<A@Us(aBkqO&E,fo>F*)PIG'<_+rcS<bFT->@
EcGu6Dea!!ARo4W?!CK6<`;dg9M%cE6pX($4?#/T1,1I8/1N(s-mp;d,9e9S+<MXF*#fh8)?(Ei()?lR
"pYA=$47.K$k3XU%hK<b&ebro()Hlc3Z/hT)]Tk>+!;^M+sS?Z-R^Al.P*2+0etOC2`j,e5sn(28PDiS
;H-_!=^5<A@:Wt_BkhF#DK'T9rH&!\r,r!\rc9`5EH,r7Chm`uB4YR]?sQu>=&r6r:/"8O7RTR.5!1kb
1bpd>0.e_(.4?Pk,pOWB+sA'O*ZZ7@)]BV4rYHFf'`\CA"pYD>$4@4M%1NdW&.oKe',2/r(B,+6)&aD4
*$$%@+<VgO,9nK^-R^Dm/1iM/0etRE3BTGi5t"158PDiS;H-_!=^59@@:Wq]BPD4"D/O<3EH6*pEscr.
EH,r8D/=!&Bms],A7AqS?!CK6<`;gi9M.lH770@*4?GJ[1GU[=/hAJ$-n$Gh,pOTW+WqjJ*?6%<)AsA.
(D[c$!!NQ2#7(SB$4@7N%1NdX&.oNf'GV>u()Ic()&aG6*$$(B+<_mP,:"Q_-n$Mo/1rS01,CaG3]oSk
6:=:68PDiS;AE/3='8d6?smGSAnPdkC27X&DJjE4qJlLR4Do"QDej*%BP(gd@:3GJ>?Fs-;c$4_8kDNA
6U<t#4?5;V1,1I9/M&>"-mpAg,9nBU+<VaH*?6":)B&Mj)\s2(!!NN1#6tMA$4@4M%1NdX&.oKe',2/s
(B,+5)&aD4*$$%A+<VgO,9nK^-R^Dm.kND.0etRD2`j,d5XIk.84cKL:Jt+l='Ag6?XR;PA7fIfBkhBu
Df#Ahs).dP2Jd/EC2%?oAn>L^?sm8F=]ea*;c$4_91_ZD6pX($4?>DX1GLR:/hAJ$-n$Gh,pOTX+WqjJ
"s"[')]BS3rYHLh'bp]P"U52:#RLhG$OdIR%Ls$^&J>]j'bqM`(H`QQ)B0Y9*?H:F+X&$S,UFfd-n-Vs
/MAe41,LmJ4?Yqq6UaI88PDiS:fCCr=BSm7?smDQA7]@cBP;,ZCAVcWC2.HsBP;$jARo7Y?sd2D/m27W
<DlXg9M7rJ7RTR.5!1nc1c$mA0J=t,.4HYm-RBu^+sA'O*uu@A)]K\5rYHRj()7M`"9eu6#7(SB$4@7N
%1NdX&.oNf',2/s(B,+#)&aG5*$$%A+<VgO+sSB\-R^Al.P*2*0JYLB2`Wu`5X@b+7S$*E9hnM`%TQS3
=^,-:?smDPA7T7`rb)%?4_JD>An>L_@:3JM?!LN7=&r9u:JOSU8Ou<=69m^s4#]&S1,1I9/M&A#-n$Gh
,U4KV+WqjJ*?6%<)B'Lm(BYEf'bhMc"9er5#6tMA$4@4M%1NdX&.oKe',2/r(B,+4)&aD4*#ot?+!;^M
+sS<Y-RU;k.4Zr&0JP==1cIHX4[;;#77Kg>9MA2W;H-[u=BSj5?!guI@:E_WAGp*>B)Q9ZA7T.X@:3JM
?!LT9='&C#:eseZ8kDNB6pa.+5<M"d2Dd0D0J>%0.Ocbo-RL,a+sJ0Q+<MUE*#fh8)&O/+()@W"'EA4=
"U52:#RCbF$OdFQ%Ls$^&J>]j'bqK"rYIL2)B0V8*??1D+<_pQ,:+W`-n$Mo/1iM/0etOA2`a&a5X@b*
7S$*C9MJ;Z;cHe!=BSj5?!^n;@/aU3@fBg8?oMFu>[(?5='&F$;G^+_9M%fG779I-5<M"f2`*9E0J>%0
.Ocep-RU2b,9e9S+<MXF*#on9)B&Mj*u5S+'GCHK"9eu6#7(SB$4@7N%1NdX&.oKe',2/r(B,*[)&aD4
*#ot?+!;^M+sS<`,pt&g-n-Vs/MAe41,LmJ3]oPj5sdt/7nH<H9hnJ^;cQk"='/U0>[:WA?he#"?XI)E
>[1K9=BAR)<)QOg9h\2O84H$869m^s4#o5V1GU[=0.e_(.4?Sl,pac[+sA'O*ZZ7@)]K\5(`*u(()7Pu
&c_t9"W%=H#6tMA$4@4M%1NdW&.oKe&el&q()Hlc2]3MQ)]Tk=*ZuRK+sJ6V,pt&g.4H_t/h\n51,LmJ
3]oPj5XIk-7n?3E9MJ8Y;H$Oq='&L+=oMY)>lJ%->TR*R=]nj.=&r@#;G^.a9h\/N84H$85sRUr4#o5V
1E/)(0J>"/.Ocbo-RL,a,9e9S+<MXF*#on9)B&Mj+Vkh.'GD)Z!<WK/"pP;<#RUnH$k*RS%M'*_&eYil
'bqM`(H!'J)B0V8*??4E+<_pQ,:+W`-R^Dm.P*2*0JP=>2E*ZZ4[21u6UaI88P)TL9hnJ\;H$RrrDru$
!E`P&=TVc/=T2AZ<`W0u;G^.a9h\/N84Q-;6U<t$4?GJ\1c$mA0J>"/.Ocbo-RU2b,9e9S+<V^G*?6";
)B&Mj,8M%0'bh8n!!*0)"U5/9#7(YD$O[@P%1WjZ&J5Wg'GV>u(B,*])&aD4*#ot?+!;^M+sS<Y-7C5i
-n-Sq/1rS00etRB2`a&`5!VD$6q'R98P2ZM9hnJ\;GpFm<E</q=8l5Z<Dugo:esq`9h\2O8Ou<>6UF%'
4Zkeb2Dd3F0eb74/1N(t-mpAg,U4KW+WqmL*??+=)]BS3rYH%['bqDr&eY0F!<WK/"pYhI#RCbF$OdFQ
%1Wm[&J>]i'GV>urYI1))&aG5*$$%@+<VgN+sS<Y-RU;j.4Ql"/h\n51,CaG3BK>d5X7Y'6q0[;8P/nT
##.ig:f(%frDW\prDOn<;G^1c;,0hZ9M.lJ84H$96U<t%4Zkba2Dd3F0eb74/1MA`.4?Pk,pac[+sA*P
+!)FB*#fe7)?(Eu()@W"'G;#j!!**&"9eu6#6tMA$4@4M%1NdW&.oKe&el&q()Hlc0GtcI)]Th<*?QCH
+X/*T,:+]b-n$Mo/1`D,0JP==1c@9S4?Ykn5sdq-7Rp!@8P8tU"\h`e;,:!e;#O5i:H)$D9he;T91hcI
84H$96UF%'4Zkee2`<KJ1,1I9/M&A#.4?Sl-7'l]+sA*P+!)FC*#fh8)&W>h,o.41'GD)l&HDh4!X&Z1
"pYA=#mq%J$k*RS%M'*_&J>`k'bqM`(D@W')B'P7*$$(B+<_mP+sS?Z-RU#b-n-Vs/1rS00etOA2E*ZY
4?Yqp5sdq-7Rfp>8P)NIrClr[rCd2`r^eb67n,p86UF((5!;"i2`EQM1,1L;0.e_).4HYn-RL,a,9e9S
+<VaH*?6";)B'Lm(C:im'bqDq&eP]UrW*6+"U,)7#7(SJ$47.K$k3XU%M03a&eYil'c%Sa(GZjG)B0V8
*??1C+<_mP+sSB[-RU;j.4Qi!/h\n51,:[C2`Ef\4?c"q5sdq,77Ka:8Gu-Z8cVN_9E7`b9)_C+84Z6?
7R]^46:!k$4Zkee2`<KK1,1I:0.e_).4HYn-RL,M,9nBV+WqmL*ZZ4?)]BV4r>,bU'bqDr&eP]e!<*!<
!X&Z1"pYA=#mq%J$k*RS%M'*_&J>`k'bqK"rYI7+)B'P6*$$%@+<VgN+sJ6X,pt&g-n-Sq/1rS00JP==
1c@9Q4$5Vh5X7V%6UO71r^HlXr^clWrCAb87Rfg86pj:,5X7Lr4?PY`2`*?H1,1I9/hJV(.4HYn-RU2b
,9e<T+<VaI*?6%<)]BS3rYGnW()7Ms&eYcg&-2Y0)?U-H"pP;<#RUnH$OdIR%Ls$]&J>]i'GV>urYH:d
)&aD4*#ot>+!;[L+X/-U,paod-lj]b.4Ql#0/#"61,:[C2E*WX4?Pbk5X7V%6:4./r^HQN2+9r%6pj=.
5s[b$5!;"j3]AuU1c$mA0eb75/1`8".4?Sl-7'l]+sJ0R+<MXF*?6";)B'Lm(CLuo'bqDr&eP]e%flP/
$3LD7"U52:#RLhG&.8mT%1NdX&.oKe&el&q()Hlc/K#EE)]Kb:*?H:F+<_mP,9nK\-RU;j.4H_t/M8\1
0ekF>1c.*L3BK>c4Zu%/5QF+L6N':M7/]LQ6N9@N5U&BT4?P\d2`EWO1GU^?0K:^;/1W2!.4?Sl-7'l]
+sJ0R+:0,2*??+=)]BV4r>,hW'bqDr&eYcf&.S^<!?2+E"U5/9#RCbE$O[@P%1WjY&.oKe',2/r()Hlc
.N'*B)]Kb:*?H:F+<_mP,9nK\-RU;j.4H_s/1iM.0JP:;1GgpH2`EcZr]C6F5!Ss1q*G!F"@,495!Am-
.Q]XL2`<KK1,:R<0J>%1/1N(t-n$Gj-7'l]+sJ0R+<V^G*?6%<)B'J1rYGtY()7Mt&eYcg&.]6NquI`=
"9er5#6tM?$4@4M$k3XU%M03a&eYil'bqM_(D[l,)B0V8*??1C+<VgN+sS<X,pt&g-kIdU.4Ql#/h\n4
0ekF>1c.,i2ZYs$rB1'Br]^9Fr]^<Er]Dbo4$#;Z2Dd6H1,:R=0J>(2/1`8".4?Sl-RC&`,9e<T+WqmK
*??+>)]K\5)?(E]()@W"'GD)k&J,H_%KQA,$j-Y:"pP;;#RUnH$OdLR%1NdX&.oKe&el#p()Hib.2a$B
)]Kb;*?H:F+<_mP+sS<Y-7:/h-n-Sp.kE8)0/,(70etL?1c.,i2ZYp"r]Bd8s#^6Ar\k?G2Dd6H1,:R=
0J>(3/M&CN.2+*X-RU2d,9nBV+X%sN*uu@A*#eu!)AsFl(Ch2r'bqDr&eYcg&.T0Z!;cd:!X&Z1"pYA=
#RUnH$k*RS%Ls!\&J5Wh'GV>u(B,*e(`=51)]Kb;*?H:F+<_mP+sS<Y,pt&g./kY).P*,&/h\n40ekF=
2)G4g!&j^5s#L$=s#L!9s#0j5&Ml0t0ek@90/"q0/1W2!.4?VD-PIdP,9nBV+X%sN*uu@A*#fh8)B&Ji
%Mfco'GD)l&J5Qb%LijIq>hQ<"U,)7#6tMA$4@4M$k3XU%M03a&eYil'bqK"rYH7c)&aD4*#ot>*ZlLI
+X&$R,9nK\r[.[o!%@gq$7[SX/M8\90JG49r\FL0rA=4+r%nL32)6rd0a]Tg0/"q0/1W2!.K1^t-RU5e
rZ_pt+sA*P+<DOD*#on:)B'Ll(Cq8s'bh>p&eP]e%h9'Y%065*%fuk;"U5/9#RCbE$O[@O%1NaV%hK<b
&eYil'bqK"rYH+`)&aD4*#ot>*ZlLI+X&$RrZ_Lk-7:2?-j_=O.Olu#/M8\0r\4=+rA"@1r\OI/rA4@,
r\4^50J>(3/M/M(.fLms./kS.,pac\+sJ0R+<VaI*??+>)]K\6)?(Ea(D[c$'bh;o&ePZd%LrpW$ip)(
*<QEJ"pP;;#RCbE$OdFQ%1WjY&.oKe&el#p'c%Sa(CV0!)B'P6*$$%@+!;^*+o`bd,QB(h-iPOn.0qCR
/1`A*0/#<a0`3[#1A`g*0`Nd10.nh-/1N.K.K1_4-RU5e,U4NX+sA*P+<MXF*?6%<)]BV4)#b<`()@W"
'GD)l&J5Qb%LijU$ip)(*<H<H"U5/9#7(YD$O[@O%1NdW%hK<b&eYlm'bqM_(D.N&)B'P6*#ot>*ZlLI
+X&$RrZhFhr[7[nr[Ijsr[\+&/h[,Vn1Xi%r\"L//M/M).k3%J.K1_"-RU5e,pOZ6+qGh?+<VaI*??+>
)]K\6)&W>h$l0Tn'bh;o&eP]e%hARJ!XoG:p]1s/"9er5#6tM?$47.K$k*RS%LWaX&J5Wg',2/r()Hib
%iH6')B0V8*$$%@+!;[L+oWYg,9nH[-2o:k./bUp.fCpu/cRHp0E3[)/cI:&.k3%J.K([o-iYLl,QAtf
+oWSl+!)FC*#on:)B'J1rYG_R()7Pu'+GQe&J5Qb%LrpW$k*LDpAk^*"U,)7#6tM?$47.K%/p\E%M'*_
&J>]i'GV>u(B#$W)&X>2)]Kb:*??1CrZM4as!%Fer[%Okr@%Unr[Imur%.Upq^_e!.Ot?F!%@jqr[.ao
,piO8rZVLh+WqmL*r[/b*#on:)B'J1rYH7a()7Pu'G;#j&J,H_%LijU$k!FCpAl<:"9er5"pYA=#mq%J
$k*RS%Ls!\&J5Wg',2/r()Hib%N--&)B0V8*$$%@*ZlLIrZV:crZhCg!%7anr@%Olq^VInr$qRmr$_Ol
![]3>rZhCdruq@a$QgE1*?6%<)]BV4)>t?c()@W"'GM/m&J5Qc%LrpW$k*LO$31)"!?M=G"U,)8#7(SB
$4@4M$k3XU%M'*_&J>]i'GV>u(B#$Q(`=51)]Sbr"!&C'+9!D_+oW\b,6K2;,prR<q^Ch\r$_Ijr[%Og
rZ_=b%Nll9*Zc=B*#on:)B'J2r>5JLrtYPJrXo>G&J,H_rXB#>$O[:K!;-@4!sJi4"pYA=#RUnH$OdFQ
%1WjY&.oKe&ebro(&f!J(C_3!)&aD4)]Th<*?H7DrZM4arZ_:crZqOkr$VIlm3qiZrZqOirZhCdrZV7`
"!8R)*W@&Y)ugiV)>tBO(B5-L'`J^J&J5Qb%fQnA$k*LO$46e+!?2(C"U,)7#6tM?$47.K$k*RS%Ls!\
&J5Wg',:E\!#>PMr>5JOru1nVrYu+_*?H:E+<^V+rZ_:cr?VFjq'Yqcpa6%grZqOir?M:crZV7`!?WB^
*WI,Y)Zpus)&W;grtbVLrtPGF%hTBb%h9'Y%1EXQ$OR4H!<*#n!?2+D"U,)7#6tM@$47.K$k*RS%Ls!\
&J5Wg',:E\rtbPLru(hTrYtkWrZ)%]+!:J)rZV4ar?D:fr$;=ingFGar$D7cr?D4arZDCe*Zc=B*#o2'
)]K\6)&X:i(]P9N(&o!I&eGWe&.]6\%1N^S$O[:K#RCG%!=T&5"U,)7#7(SB$4@7@$kNjW%Ls!\&J5Wg
',2,q'c%S`(Bt]o)&aD4)u^iV*<I9(+9!D]+oNV^,60"f-1`G[,Q&ba+oWSc+!)L&*WI,Y)ugiV)>tBN
('>9d'GLHY&J5Td%h9'Y%1EXQ$OR4H#R:A#!=f28"U5/9#7(SB$4@4M%/p\G%Ls!\&J5Wg',2,q'c%S_
(]PBP)ZLcU*<$r[*ZlL&+T3J],3gEM,5i\`+9EW+*r[2[*<$l[)B'J2)#Y9N(B,$N'GD)lrXf\Q%h9'Y
%1EXQ$OR4I#R:S7q>pBm%fuk;"U5/9#7(SB$4@4M%/p\>%Ls!\&J>!TrtPJJrYGGK";i!o)B/SorZ(nX
ruV1^r?2"]pEKM[p*0DXr?2+^ruV.[rZ(qWrYbhU)&N5frtbSK!u)C]')iIT&.]6\%1N^S$O[:K#m^b@
"p"/o%g)q<"U5/9#7(SB$4@4M%/p\>%Ls!\&J>!T!>?1H(&o'I(]PBP)ZC]T*;poX*rd>\+Sd2X,5NMZ
+oEJ_+9*D]*W6uX)u^`W)&X:i(]G0S'bqDs'+trW&IB!Z%LrpW$k*LOrX&f7#R:S=!:U""!sAc2"pP;;
#RCbE$O[@OrXAr>%M'-M&I9!^',2,q'c%Pb(Ao!K)?(QR)uUcU*W@,[+8R,K+o<D]+9*D\*W@&X)u^cT
)>k<N(B,$\'GM2n&eP]e&.]6\%1N^S$Ocq@"pbJ>#6kA4p&Y!j%g)q<"U5/9#7(SB$4@4M%/p\<%Ls!\
rXf8G&ebrnrY>GKr"fDO)&`Dlr>Y_Ur#PbXrZCGKrZD+\r>khVrYthTrYbVMrYGMK!YlC_rXoVO&J,Ka
%LrpW$k*LOrX&l9#R:S="pG"p!=],6"U,)7#6tM?$47.KrX9&A%1WjY&.fEcrXo5F'`JjH(AnsM(`=4i
)ZC]R*;giU*q^WQ+8m8X*W6uV)u^cT)>b6M(B,$O'GM2n')iIF&.]6\rXJl9rsSf5#RC\@#6kA9"T[rk
!<NB&"oef,#QG)0$NCM5$jI.M%Ls!\&H37E&eYil'`JgI(B50J(B><O)?(QQ)uCWM*VUWM*W-oU)uU]S
)>b6L(B,$L'GLHYrXf5D%h9*K%K?k:$iUJ>#RCY?"pP57"9@unquHg""9&K(#6+r.#lb82$i^Y7%0I(M
%hS^PrXo8G'GUN]rYGAIrYbYQr#>GOnK%HGr#>SQrYY\Qq\T5IrY5JK'GLHYrt,AF&.]6\rXJl9rsSf5
$4$nB#6kA9"U"o-li@+g"9&K(#6+r.#lb82$i^Y7%0d:P%hK9a&cNCE',2/[(&\pF(B><O)>kEM)t+dG
*;UWQ)Z:QM(]G3L'`o'`'E/XD&HNFRrXSr;rX9>G$OR4I#RCY?"pP57"9SZ)lN%"f"9&K(#6+r.#lY22
$i^Y7%K6h<%hS^PrXo8G'GUN]r>,5G!#YYPq\n]<q\oDN!#YPKrYGJJrtPJHrXoDI&J,Ka%M&IIrX9AH
$OR4I#RCY?"pP57"9SZ*!:Bmd!<E6(rWW<+rs/Q0rX/Z5rXAc8":bnP&.ngQrXo8G'GUK\rYG;G!#YVO
p)<fIp)<lI!#YMJr>,>H!Yc=^rY#2B":u+T%M&IIrs\l7rsJ`2#6tJ<"pG/5"9&<$!9jLb!X&E*#R1J<
#7(SA$4?b?rs\l9rXJr>&H3:?&cr^\'`AdF(AJ[G)#5'@)Z:QQ)#tNJ(]>-K(&emI'E/XD&HWLT&,m(=
%K6e8$i^S6#lY&4"pP57"9\T'!!)3`!<NB&"oef,#Q>#/$N:G4%/p\=%Ls!\&H3:?&d&d]'G^Q]r>,&B
rtt8D!#Y>Er>,>HrY,>GrY#2B!Y>nRrXSo:rXAf7rX/Z2rW`T2"pG/5"8i0"!9sUa!<rT-"9er5#6"l-
#lY22$iUS6%K6h=%hK<O&cE=B'E/^E(&Jd&(]5'H(&o!J'E/XC&HiXV%h9*J%K?k9$N^YB$3(;2#Q=o0
"U,#2qZ-ZsjoGYf!sAc2"pY&3rs8T2rX8]6rXJi:!Y5hRrXo)ArtGAGr"])Ejqn%5r"f2FrY,>Gr=]&@
!Y>nRrXSo:rXAf7rX/W1rs/N-!sJi2"8W#u!9=._!sAc2rW`B-rWrK1rsSf7r=/c:rt#,@r=Su@!##>G
rY55EpD3H=pD3T?rY5AGr=]&@!Y>nRrXSo:rXAc6rX/Z2rWiH-rWN<*"8Mrt!9O=]!<E9*rWW<+rWiH/
rX/W4rXA`7rXJu?&.ndPr"B#Cr=o&Bm2#L4r=o8Fr=]&@rX]&?rXSl9rXAf7rX&]5#RLD7!X8i4!sJf0
!r)cr!9+"[!sJT,rs&H-!XK&<rX/W4rXA`7rXJo=rXf#?r"AuBr=nB/r"K,E!#,8Cr"8r?rt#)=r=/`7
rX8]4rWrN/rWWK/"U"o/pAk6oi;j&_!sAc2rW`?,rs8T2rX8Z5r=/`9rt#,@r"/oAq\&lAq%WT=p_<]@
q\&f=rXf)?rXSl9rXAc6rX&]5#RLD7rs&H+!<`Mt!<<,X!<N<)"TAT)#6"l,#lY21$iLM4%K-b:&,m.;
&bm"9'D`F>'DW:<&cN@A&,m%=%fHk9%/pY5$NCD2#Q=r,"T\`.oDnplh>mWZ"TAT(#6"i/#RCb9$N:G3
%/gY5%KI%<&Gd":''^,+&cN@A&,d"9%K6e7$iUM4#lY)/#6"c-"9S_s!<<,U!<N<)"TAT)#6"l,#QP21
$N1A3%/^S4%f[(<&G6Y0'(uq9&H34=%f?e7%/gS5$N:>1#Q=r,"T\`.nGrUirW1jV!<WK("o\`*#Q>#-
$N1A2%/^S3%f[(:&F:#+&H34<%f6_6%0$_8$iUM4#lY).#6"c-"9S_p!<<,R!<N<)"TAT(#6"l,#QP21
$N1A1%/UM1%fHq9&FpD2&,Qk5%K-_6$iLG3#lP#-#6"c,"9\&m!!(XP!WrQ.rWN9+rs&H-rWiK1r<iK2
r!`B1pC?j,pC@$/r!`K2r<iN0r<N<+rWN?+!s7ij!!)irh>mZZ!sJT,r<E6+r<W?/r!WB1pC6O#pC7!.
r!WH1!"&W1rs/Q/rW`?*!X&T-lN$tceH#^Q!sJT,r<E3*rWiK1r<iE0q@)s)ndYC'r!WE0r<W?,rW`?*
!sA`/!pTdd!7LrM!s8]*"oSZ(#Q4r*$Mt5)%.k#&%/LA0$31D2#lP#-#5n],"9S_h!<<,n!Sd\W!s8])
"o\`(#Q4o.$2Y)*$gJ/q$i:82$2k/.#Q4l*"TSZ+!s7Tc!!(=G!WrN-r<<-(r!3-*q$QQuoaCU'!"&Q/
r!30)rWNB,"9S_d!<<,E!<WE+"9nc.r!*'(qZm0.p'UC!p'Ld+r!<0)r<E3(!sA`/!oa4\!:g0E!<WB*
"9eZ,r!*$'q?[*-km@Csq?Zs'r!*'&!sA].!r2l\!<<,A!<WB*!sJN*qZcm%l3R1kq$6g%r!!*'rr_'X
!!(">!!33(!sJK)qZca!nd+poq?Hj$"9\i0!s73X!!)EfecGaPrri3&q$-$fp]gU!"9\i0!s7ijli@(d
^]=Q>!s8Z/q$#mbr!*!$rWE9)!s7!R!!'h9r;cm"rWE-&p''sjp'(Eu!WrN+d/a4Il2f64rrW0%r<29e
r<3*%!!;!Xn,WLhZiU1.qZH9iquZp#!!:4B!!'\5n,`Fgq#gQs^]=E8joL&7oDnplO9*N*!!'P1U&b5o
K)sU*!!')$Y5nV'eH(C*!!*!!JcXX-!!&quZN1%+d/f+*!!)irJcXd1!!&eq[fHI/blNh*!!)]nJcXp5
!!&Ym])dE~>

%%EndBinary
grestore
np
grestore
216.346 .708008 mo
218.025 .708008 li
215.772 17.3721 li
214.091 17.3721 li
216.346 .708008 li
f
221.026 5.0459 mo
222.546 5.0459 li
222.292 6.96289 li
223.545 5.47314 225.003 4.72803 226.666 4.72803 cv
227.942 4.72803 228.971 5.11914 229.752 5.8999 cv
230.534 6.68213 230.925 7.73291 230.925 9.0542 cv
230.925 9.58301 230.841 10.4702 230.672 11.7173 cv
229.907 17.3701 li
228.353 17.3701 li
229.118 11.7183 li
229.281 10.5093 229.363 9.61719 229.363 9.04102 cv
229.363 8.17822 229.102 7.48096 228.578 6.95117 cv
228.055 6.41992 227.369 6.15527 226.519 6.15527 cv
225.686 6.15527 224.91 6.37109 224.193 6.80127 cv
223.476 7.23193 222.92 7.81494 222.526 8.55127 cv
222.132 9.28809 221.83 10.4521 221.618 12.0449 cv
220.913 17.3711 li
219.358 17.3711 li
221.026 5.0459 li
f
240.908 6.4292 mo
240.047 7.70898 li
239.352 6.72021 238.529 6.2251 237.576 6.2251 cv
237.032 6.2251 236.567 6.40283 236.182 6.7583 cv
235.796 7.11328 235.603 7.50586 235.603 7.93604 cv
235.603 8.26904 235.72 8.58594 235.954 8.88721 cv
236.181 9.18896 236.698 9.60107 237.506 10.1221 cv
238.685 10.8853 239.462 11.5493 239.84 12.1152 cv
240.209 12.689 240.395 13.3501 240.395 14.0972 cv
240.395 15.1323 240.034 15.9902 239.313 16.6689 cv
238.591 17.3481 237.652 17.688 236.496 17.688 cv
234.97 17.688 233.686 17.0122 232.643 15.6602 cv
233.606 14.5381 li
234.521 15.6489 235.514 16.2041 236.587 16.2041 cv
237.199 16.2041 237.732 15.9893 238.186 15.5581 cv
238.639 15.1279 238.865 14.6299 238.865 14.063 cv
238.865 13.6021 238.696 13.1611 238.356 12.7383 cv
238.137 12.4663 237.548 12.0049 236.589 11.354 cv
235.555 10.644 234.875 10.0542 234.55 9.58691 cv
234.226 9.12598 234.063 8.60596 234.063 8.02393 cv
234.063 7.11084 234.407 6.33301 235.094 5.69092 cv
235.781 5.05029 236.65 4.72803 237.701 4.72803 cv
238.32 4.72803 238.881 4.85303 239.384 5.10205 cv
239.886 5.3501 240.394 5.79492 240.908 6.4292 cv
f
246.13 .436035 mo
247.682 .436035 li
247.067 5.0459 li
249.549 5.0459 li
249.367 6.4292 li
246.882 6.4292 li
245.425 17.3721 li
243.839 17.3721 li
245.319 6.4292 li
243.205 6.4292 li
243.397 5.0459 li
245.506 5.0459 li
246.13 .436035 li
f
gsave
0 0 mo
742.561 0 li
742.561 170.52 li
0 170.52 li
0 0 li
cp
clp
251.737 5.0459 mo
253.234 5.0459 li
251.625 17.3711 li
250.07 17.3711 li
251.737 5.0459 li
252.981 -.0288086 mo
253.329 -.0288086 253.627 .0961914 253.876 .345215 cv
254.126 .593262 254.25 .89209 254.25 1.24023 cv
254.25 1.59521 254.125 1.89502 253.876 2.14014 cv
253.627 2.38623 253.329 2.50928 252.981 2.50928 cv
252.626 2.50928 252.326 2.38623 252.081 2.14014 cv
251.835 1.89502 251.712 1.59521 251.712 1.24023 cv
251.712 .89209 251.835 .594238 252.081 .345215 cv
252.326 .0961914 252.626 -.0288086 252.981 -.0288086 cv
252.981 -.0288086 li
cp
f
grestore
258.637 .436035 mo
260.188 .436035 li
259.573 5.0459 li
262.055 5.0459 li
261.874 6.4292 li
259.389 6.4292 li
257.931 17.3721 li
256.346 17.3721 li
257.826 6.4292 li
255.711 6.4292 li
255.904 5.0459 li
258.013 5.0459 li
258.637 .436035 li
f
265.286 5.0459 mo
266.869 5.0459 li
266.124 10.2021 li
265.905 11.7192 265.795 12.6812 265.795 13.0859 cv
265.795 14.0083 266.084 14.7593 266.662 15.3423 cv
267.239 15.9243 268.002 16.2153 268.95 16.2153 cv
269.739 16.2153 270.425 15.9893 271.005 15.5352 cv
271.586 15.082 272.002 14.4893 272.251 13.7573 cv
272.376 13.3872 272.524 12.5381 272.697 11.208 cv
273.531 5.0459 li
275.084 5.0459 li
274.486 9.71289 li
274.201 11.9463 273.897 13.5313 273.578 14.4702 cv
273.259 15.4092 272.689 16.1792 271.87 16.7832 cv
271.051 17.3872 270.053 17.688 268.874 17.688 cv
267.533 17.688 266.436 17.252 265.581 16.3789 cv
264.726 15.5073 264.298 14.418 264.298 13.1108 cv
264.298 12.5903 264.345 11.9819 264.439 11.2891 cv
264.552 10.2002 li
264.615 9.73584 li
265.286 5.0459 li
f
280.602 .436035 mo
282.153 .436035 li
281.538 5.0459 li
284.02 5.0459 li
283.838 6.4292 li
281.354 6.4292 li
279.896 17.3721 li
278.31 17.3721 li
279.79 6.4292 li
277.676 6.4292 li
277.869 5.0459 li
279.978 5.0459 li
280.602 .436035 li
f
297.591 11.5259 mo
286.603 11.5259 li
286.581 12.9922 286.961 14.1431 287.748 14.981 cv
288.533 15.8203 289.579 16.2393 290.885 16.2393 cv
291.754 16.2393 292.558 16.061 293.298 15.7061 cv
294.039 15.3511 294.65 14.8521 295.134 14.2109 cv
296.313 15.1743 li
295.716 15.937 294.936 16.5469 293.973 17.0039 cv
293.01 17.46 291.969 17.688 290.852 17.688 cv
288.919 17.688 287.467 17.0903 286.497 15.894 cv
285.526 14.6963 285.042 13.3501 285.042 11.855 cv
285.042 10.6323 285.368 9.4541 286.021 8.32129 cv
286.675 7.18799 287.549 6.30615 288.644 5.67627 cv
289.739 5.04395 290.925 4.729 292.201 4.729 cv
293.779 4.729 295.085 5.26416 296.12 6.33203 cv
297.154 7.3999 297.672 8.76221 297.672 10.416 cv
297.671 10.7183 297.645 11.0879 297.591 11.5259 cv
296.142 10.144 mo
296.096 8.98389 295.699 8.04395 294.953 7.32617 cv
294.204 6.60693 293.265 6.24707 292.132 6.24707 cv
290.901 6.24707 289.815 6.59326 288.875 7.28613 cv
287.935 7.979 287.269 8.93213 286.876 10.144 cv
296.142 10.144 li
296.142 10.144 li
cp
f
gsave
0 0 mo
742.561 0 li
742.561 170.52 li
0 170.52 li
0 0 li
cp
clp
313.428 .708008 mo
313.213 2.21387 li
312.633 1.66992 312.089 1.39795 311.579 1.39795 cv
311.255 1.39795 310.977 1.55225 310.745 1.85889 cv
310.514 2.16602 310.332 2.78711 310.201 3.72314 cv
310.022 5.0459 li
312.611 5.0459 li
312.441 6.4292 li
309.836 6.4292 li
308.365 17.3721 li
306.811 17.3721 li
308.292 6.4292 li
306.811 6.4292 li
306.98 5.0459 li
308.478 5.0459 li
308.625 3.95898 li
308.809 2.68311 309.005 1.83008 309.211 1.39893 cv
309.417 .969238 309.725 .623047 310.129 .362305 cv
310.536 .102051 310.983 -.027832 311.474 -.027832 cv
312.119 -.0288086 312.77 .217285 313.428 .708008 cv
f
grestore
320.871 4.72998 mo
321.921 4.72998 322.884 4.98096 323.76 5.48291 cv
324.636 5.98486 325.319 6.68311 325.81 7.57813 cv
326.301 8.47314 326.546 9.4873 326.546 10.6201 cv
326.546 11.9111 326.232 13.1108 325.606 14.2173 cv
324.98 15.3232 324.138 16.1782 323.081 16.7822 cv
322.023 17.3862 320.826 17.689 319.489 17.689 cv
317.836 17.689 316.474 17.147 315.406 16.063 cv
314.337 14.98 313.803 13.5991 313.803 11.9233 cv
313.803 10.6089 314.117 9.39697 314.744 8.28711 cv
315.37 7.17725 316.229 6.30615 317.321 5.67627 cv
318.411 5.04492 319.594 4.72998 320.871 4.72998 cv
320.832 6.23584 mo
319.849 6.23584 318.925 6.48193 318.059 6.97217 cv
317.193 7.46289 316.528 8.13721 316.063 8.99414 cv
315.598 9.85107 315.365 10.7969 315.365 11.8311 cv
315.365 13.1313 315.766 14.186 316.568 14.998 cv
317.37 15.8101 318.405 16.2153 319.676 16.2153 cv
320.666 16.2153 321.563 15.979 322.369 15.5073 cv
323.174 15.0352 323.815 14.354 324.291 13.4629 cv
324.767 12.5713 325.005 11.6162 325.005 10.5962 cv
325.005 9.74219 324.828 8.98486 324.473 8.3252 cv
324.118 7.66406 323.615 7.15088 322.964 6.78418 cv
322.314 6.41895 321.603 6.23584 320.832 6.23584 cv
320.832 6.23584 li
cp
f
329.855 5.0459 mo
331.444 5.0459 li
331.229 6.59717 li
331.652 6.0083 332.163 5.55029 332.76 5.22119 cv
333.357 4.89209 333.97 4.72803 334.598 4.72803 cv
335.044 4.72803 335.509 4.83398 335.993 5.04492 cv
335.245 6.49512 li
334.853 6.33691 334.524 6.2583 334.261 6.2583 cv
333.711 6.2583 333.166 6.45117 332.626 6.83594 cv
332.087 7.22119 331.65 7.78223 331.314 8.51904 cv
330.979 9.25488 330.695 10.4663 330.463 12.1499 cv
329.742 17.3711 li
328.188 17.3711 li
329.855 5.0459 li
f
2.25488 24.708 mo
5.82129 24.708 li
8.0791 24.708 9.81006 25.0039 11.0146 25.5972 cv
12.2188 26.1899 13.1895 27.1079 13.9277 28.3491 cv
14.6646 29.5913 15.0337 31.0103 15.0337 32.603 cv
15.0337 34.3022 14.6167 35.8721 13.7817 37.3159 cv
12.9478 38.7583 11.9204 39.7949 10.6997 40.4253 cv
9.48047 41.0562 7.66211 41.3711 5.24561 41.3711 cv
.000488281 41.3711 li
2.25488 24.708 li
3.69238 26.3159 mo
1.87598 39.752 li
3.33643 39.752 li
5.58643 39.752 7.07666 39.6909 7.80957 39.5703 cv
8.92627 39.3882 9.8667 39.0322 10.6284 38.5 cv
11.3916 37.9673 12.0444 37.1709 12.5884 36.1099 cv
13.1313 35.0479 13.4028 33.8911 13.4028 32.6382 cv
13.4028 31.3159 13.0967 30.1611 12.4844 29.1709 cv
11.8716 28.1821 11.0317 27.4419 9.96289 26.9512 cv
9.05322 26.5283 7.51563 26.3169 5.3501 26.3169 cv
3.69238 26.3169 li
3.69238 26.3159 li
3.69238 26.3159 li
cp
f
17.2773 29.0459 mo
18.9092 29.0459 li
22.0952 38.146 li
27.3931 29.0459 li
29.1592 29.0459 li
19.374 45.8789 li
17.5942 45.8789 li
21.0859 39.8823 li
17.2773 29.0459 li
f
31.3149 29.0459 mo
32.835 29.0459 li
32.5811 30.9619 li
33.834 29.4731 35.292 28.728 36.9551 28.728 cv
38.231 28.728 39.2593 29.1191 40.041 29.8999 cv
40.8242 30.6821 41.2153 31.7329 41.2153 33.0542 cv
41.2153 33.583 41.1313 34.4702 40.9609 35.7173 cv
40.1963 41.3701 li
38.6421 41.3701 li
39.4072 35.7183 li
39.5713 34.5093 39.6523 33.6172 39.6523 33.041 cv
39.6523 32.1782 39.3911 31.481 38.8682 30.9512 cv
38.3442 30.4199 37.6582 30.1553 36.8081 30.1553 cv
35.9751 30.1553 35.1992 30.3711 34.4819 30.8013 cv
33.7651 31.231 33.21 31.8149 32.8149 32.5513 cv
32.4214 33.2881 32.1191 34.4521 31.9082 36.0449 cv
31.2021 41.3711 li
29.647 41.3711 li
31.3149 29.0459 li
f
55.9854 41.3711 mo
54.3882 41.3711 li
54.6323 39.5181 li
53.208 40.9648 51.5781 41.688 49.7432 41.688 cv
48.0732 41.688 46.7012 41.1479 45.626 40.0688 cv
44.5503 38.9893 44.0122 37.5991 44.0122 35.8999 cv
44.0122 33.936 44.7134 32.25 46.1152 30.8413 cv
47.5181 29.4331 49.167 28.728 51.0649 28.728 cv
52.0933 28.728 52.9951 28.9443 53.77 29.373 cv
54.5439 29.8032 55.1963 30.4741 55.7251 31.3872 cv
56.0093 29.0459 li
57.6533 29.0459 li
55.9854 41.3711 li
49.9189 40.2383 mo
50.9351 40.2383 51.8613 39.998 52.6963 39.5181 cv
53.5313 39.0381 54.1934 38.3481 54.6821 37.4492 cv
55.1714 36.5503 55.415 35.5713 55.415 34.5132 cv
55.415 33.2393 55.0132 32.2012 54.208 31.4009 cv
53.4033 30.6011 52.3569 30.2012 51.0713 30.2012 cv
49.5581 30.2012 48.2651 30.749 47.189 31.8433 cv
46.1133 32.938 45.5752 34.2832 45.5752 35.876 cv
45.5752 37.1831 45.978 38.2373 46.7822 39.0371 cv
47.5874 39.8379 48.6333 40.2383 49.9189 40.2383 cv
49.9189 40.2383 li
cp
f
61.2544 29.0459 mo
62.8042 29.0459 li
62.5713 30.791 li
63.0493 30.1489 63.6592 29.644 64.4023 29.2783 cv
65.145 28.9111 65.8911 28.728 66.6421 28.728 cv
67.5752 28.728 68.4004 29.0039 69.1201 29.5552 cv
69.6743 29.9858 70.0874 30.627 70.3594 31.481 cv
70.9204 30.605 71.6123 29.9272 72.4351 29.4473 cv
73.2573 28.9673 74.0923 28.728 74.9424 28.728 cv
76.0874 28.728 77.0264 29.0952 77.7612 29.8271 cv
78.4961 30.5591 78.8633 31.5059 78.8633 32.668 cv
78.8633 33.1963 78.814 33.8423 78.7144 34.606 cv
77.8394 41.3711 li
76.2842 41.3711 li
77.084 35.457 li
77.252 34.2192 77.335 33.312 77.335 32.7383 cv
77.335 32.021 77.0991 31.4282 76.627 30.96 cv
76.1543 30.4922 75.5332 30.2583 74.7632 30.2583 cv
73.9473 30.2583 73.188 30.5122 72.4844 31.022 cv
71.7822 31.5303 71.2832 32.1323 70.9883 32.8271 cv
70.6934 33.521 70.4722 34.3979 70.3262 35.458 cv
69.5083 41.3711 li
67.9351 41.3711 li
68.8491 34.6099 li
68.9473 33.8911 68.9951 33.3022 68.9951 32.8423 cv
68.9951 32.0493 68.7593 31.415 68.2871 30.939 cv
67.814 30.4619 67.1982 30.2251 66.436 30.2251 cv
65.7964 30.2251 65.1831 30.375 64.5972 30.6729 cv
64.0112 30.9712 63.5313 31.3623 63.1582 31.8452 cv
62.7852 32.3281 62.5063 32.9272 62.3232 33.6401 cv
62.1392 34.354 62.0083 34.998 61.9321 35.5723 cv
61.1592 41.3721 li
59.5864 41.3721 li
61.2544 29.0459 li
f
82.7671 29.0459 mo
84.2642 29.0459 li
82.6553 41.3711 li
81.1001 41.3711 li
82.7671 29.0459 li
84.0112 23.9712 mo
84.3584 23.9712 84.6572 24.0952 84.9063 24.3452 cv
85.1563 24.5933 85.2803 24.8921 85.2803 25.2402 cv
85.2803 25.5952 85.1553 25.895 84.9063 26.1401 cv
84.6572 26.3862 84.3584 26.5093 84.0112 26.5093 cv
83.6563 26.5093 83.356 26.3862 83.1104 26.1401 cv
82.8652 25.895 82.7422 25.5952 82.7422 25.2402 cv
82.7422 24.8921 82.8652 24.5942 83.1104 24.3452 cv
83.356 24.0952 83.6563 23.9712 84.0112 23.9712 cv
84.0112 23.9712 li
cp
f
99.1572 31.708 mo
97.855 32.4673 li
96.9424 30.9873 95.5474 30.2471 93.668 30.2471 cv
92.582 30.2471 91.5903 30.4893 90.6924 30.9722 cv
89.7954 31.4551 89.0933 32.127 88.5884 32.9893 cv
88.082 33.8501 87.8301 34.771 87.8301 35.7529 cv
87.8301 36.6211 88.0181 37.3989 88.395 38.0859 cv
88.772 38.7739 89.3032 39.3032 89.9854 39.6719 cv
90.667 40.041 91.4731 40.228 92.4014 40.228 cv
93.3511 40.228 94.2593 40.0391 95.1221 39.6611 cv
95.9854 39.2832 96.6582 38.7959 97.1411 38.1992 cv
98.4434 39.1172 li
97.627 40.0083 96.7432 40.6592 95.7871 41.0713 cv
94.832 41.4819 93.7231 41.688 92.4634 41.688 cv
90.5142 41.688 88.9941 41.1582 87.9033 40.0972 cv
86.812 39.0352 86.2661 37.6221 86.2661 35.854 cv
86.2661 33.8911 86.9834 32.2129 88.4131 30.8193 cv
89.8442 29.4272 91.5981 28.729 93.6753 28.729 cv
94.9224 28.729 96.02 28.9922 96.9722 29.5171 cv
97.9224 30.041 98.6514 30.771 99.1572 31.708 cv
f
117.52 27.7881 mo
115.945 28.1851 li
115.734 27.4819 115.386 26.9272 114.903 26.519 cv
114.42 26.1113 113.899 25.9072 113.34 25.9072 cv
112.721 25.9072 112.217 26.1172 111.828 26.5361 cv
111.439 26.9551 111.245 27.5161 111.245 28.2192 cv
111.245 28.8379 111.453 29.4829 111.868 30.1553 cv
112.125 30.5781 112.744 31.2349 113.726 32.126 cv
114.745 33.0479 115.457 33.9072 115.861 34.7041 cv
116.265 35.501 116.466 36.2803 116.466 37.043 cv
116.466 37.8521 116.246 38.6289 115.803 39.377 cv
115.361 40.125 114.767 40.7139 114.019 41.144 cv
113.271 41.5752 112.478 41.7891 111.64 41.7891 cv
110.575 41.7891 109.652 41.4502 108.87 40.77 cv
108.089 40.0903 107.528 39.0942 107.188 37.7803 cv
108.729 37.2593 li
108.97 38.2559 109.363 38.9961 109.907 39.479 cv
110.451 39.9619 111.078 40.2041 111.788 40.2041 cv
112.596 40.2041 113.29 39.9063 113.872 39.3091 cv
114.454 38.7119 114.744 37.9761 114.744 37.1001 cv
114.744 36.458 114.579 35.8311 114.251 35.2192 cv
113.922 34.6069 113.278 33.8711 112.319 33.0112 cv
111.292 32.0752 110.624 31.3569 110.314 30.8579 cv
109.809 30.0269 109.555 29.1519 109.555 28.23 cv
109.555 27.0898 109.927 26.1479 110.671 25.4043 cv
111.415 24.6602 112.337 24.2881 113.44 24.2881 cv
114.37 24.2881 115.197 24.582 115.921 25.1709 cv
116.646 25.7603 117.18 26.6333 117.52 27.7881 cv
f
119.105 29.0459 mo
120.737 29.0459 li
123.924 38.146 li
129.222 29.0459 li
130.988 29.0459 li
121.202 45.8789 li
119.422 45.8789 li
122.914 39.8823 li
119.105 29.0459 li
f
138.876 30.4292 mo
138.015 31.709 li
137.32 30.7192 136.497 30.2251 135.544 30.2251 cv
135 30.2251 134.535 30.4033 134.149 30.7583 cv
133.764 31.1133 133.571 31.5059 133.571 31.936 cv
133.571 32.269 133.688 32.5859 133.922 32.8872 cv
134.148 33.189 134.666 33.6011 135.474 34.1221 cv
136.653 34.8853 137.43 35.5493 137.808 36.1152 cv
138.177 36.689 138.363 37.3501 138.363 38.0981 cv
138.363 39.1323 138.002 39.9902 137.281 40.6689 cv
136.559 41.3481 135.62 41.688 134.464 41.688 cv
132.938 41.688 131.653 41.0122 130.611 39.6602 cv
131.574 38.5381 li
132.489 39.6489 133.482 40.2041 134.555 40.2041 cv
135.167 40.2041 135.7 39.9893 136.153 39.5581 cv
136.607 39.1279 136.833 38.6299 136.833 38.063 cv
136.833 37.6021 136.664 37.1611 136.324 36.7383 cv
136.104 36.4663 135.516 36.0049 134.558 35.354 cv
133.523 34.644 132.843 34.0552 132.518 33.5869 cv
132.193 33.126 132.031 32.606 132.031 32.0239 cv
132.031 31.1108 132.375 30.333 133.062 29.6909 cv
133.75 29.0503 134.618 28.728 135.668 28.728 cv
136.288 28.728 136.85 28.853 137.352 29.1021 cv
137.854 29.3501 138.362 29.7949 138.876 30.4292 cv
f
144.098 24.436 mo
145.648 24.436 li
145.034 29.0459 li
147.516 29.0459 li
147.334 30.4292 li
144.85 30.4292 li
143.392 41.3721 li
141.806 41.3721 li
143.286 30.4292 li
141.172 30.4292 li
141.365 29.0459 li
143.474 29.0459 li
144.098 24.436 li
f
161.087 35.5259 mo
150.099 35.5259 li
150.077 36.9922 150.458 38.1431 151.243 38.981 cv
152.029 39.8203 153.074 40.2393 154.381 40.2393 cv
155.249 40.2393 156.053 40.061 156.793 39.7061 cv
157.534 39.3511 158.146 38.8521 158.628 38.2109 cv
159.807 39.1743 li
159.21 39.937 158.431 40.5469 157.468 41.0039 cv
156.505 41.46 155.465 41.688 154.347 41.688 cv
152.414 41.688 150.962 41.0898 149.991 39.894 cv
149.021 38.6963 148.536 37.3501 148.536 35.855 cv
148.536 34.6323 148.862 33.4541 149.516 32.3213 cv
150.169 31.188 151.044 30.3062 152.138 29.6763 cv
153.233 29.0439 154.419 28.729 155.695 28.729 cv
157.273 28.729 158.58 29.2642 159.614 30.332 cv
160.648 31.3999 161.166 32.7622 161.166 34.416 cv
161.167 34.7183 161.14 35.0879 161.087 35.5259 cv
159.638 34.144 mo
159.592 32.9839 159.196 32.0439 158.448 31.3262 cv
157.7 30.6079 156.76 30.2471 155.627 30.2471 cv
154.396 30.2471 153.31 30.5933 152.37 31.2861 cv
151.43 31.979 150.764 32.9321 150.371 34.144 cv
159.638 34.144 li
159.638 34.144 li
cp
f
165.032 29.0459 mo
166.582 29.0459 li
166.35 30.791 li
166.827 30.1489 167.437 29.644 168.18 29.2783 cv
168.923 28.9111 169.669 28.728 170.42 28.728 cv
171.353 28.728 172.178 29.0039 172.898 29.5552 cv
173.452 29.9858 173.865 30.627 174.138 31.481 cv
174.698 30.605 175.39 29.9272 176.213 29.4473 cv
177.035 28.9673 177.87 28.728 178.72 28.728 cv
179.865 28.728 180.804 29.0952 181.539 29.8271 cv
182.274 30.5591 182.642 31.5059 182.642 32.668 cv
182.642 33.1963 182.592 33.8423 182.493 34.606 cv
181.617 41.3711 li
180.062 41.3711 li
180.862 35.457 li
181.029 34.2192 181.113 33.312 181.113 32.7383 cv
181.113 32.021 180.877 31.4282 180.405 30.96 cv
179.932 30.4922 179.311 30.2583 178.541 30.2583 cv
177.725 30.2583 176.965 30.5122 176.262 31.022 cv
175.56 31.5303 175.062 32.1323 174.766 32.8271 cv
174.471 33.521 174.25 34.3979 174.104 35.458 cv
173.286 41.3711 li
171.713 41.3711 li
172.627 34.6099 li
172.725 33.8911 172.772 33.3022 172.772 32.8423 cv
172.772 32.0493 172.537 31.415 172.064 30.939 cv
171.593 30.4619 170.976 30.2251 170.214 30.2251 cv
169.574 30.2251 168.961 30.375 168.375 30.6729 cv
167.789 30.9712 167.309 31.3623 166.936 31.8452 cv
166.563 32.3281 166.284 32.9272 166.101 33.6401 cv
165.917 34.354 165.786 34.998 165.71 35.5723 cv
164.937 41.3721 li
163.364 41.3721 li
165.032 29.0459 li
f
192.582 30.4292 mo
191.722 31.709 li
191.026 30.7192 190.203 30.2251 189.25 30.2251 cv
188.706 30.2251 188.241 30.4033 187.856 30.7583 cv
187.47 31.1133 187.277 31.5059 187.277 31.936 cv
187.277 32.269 187.394 32.5859 187.628 32.8872 cv
187.855 33.189 188.373 33.6011 189.181 34.1221 cv
190.359 34.8853 191.137 35.5493 191.514 36.1152 cv
191.884 36.689 192.069 37.3501 192.069 38.0981 cv
192.069 39.1323 191.708 39.9902 190.987 40.6689 cv
190.266 41.3481 189.326 41.688 188.17 41.688 cv
186.645 41.688 185.36 41.0122 184.317 39.6602 cv
185.281 38.5381 li
186.195 39.6489 187.188 40.2041 188.261 40.2041 cv
188.874 40.2041 189.406 39.9893 189.86 39.5581 cv
190.313 39.1279 190.54 38.6299 190.54 38.063 cv
190.54 37.6021 190.37 37.1611 190.03 36.7383 cv
189.811 36.4663 189.222 36.0049 188.264 35.354 cv
187.229 34.644 186.549 34.0552 186.225 33.5869 cv
185.9 33.126 185.737 32.606 185.737 32.0239 cv
185.737 31.1108 186.082 30.333 186.769 29.6909 cv
187.456 29.0503 188.325 28.728 189.375 28.728 cv
189.994 28.728 190.556 28.853 191.058 29.1021 cv
191.561 29.3501 192.069 29.7949 192.582 30.4292 cv
f
212.801 41.3711 mo
211.203 41.3711 li
211.447 39.5181 li
210.023 40.9648 208.394 41.688 206.558 41.688 cv
204.889 41.688 203.516 41.1479 202.44 40.0688 cv
201.365 38.9893 200.827 37.5991 200.827 35.8999 cv
200.827 33.936 201.528 32.25 202.93 30.8413 cv
204.333 29.4331 205.982 28.728 207.881 28.728 cv
208.909 28.728 209.81 28.9443 210.584 29.373 cv
211.359 29.8032 212.011 30.4741 212.54 31.3872 cv
212.825 29.0459 li
214.469 29.0459 li
212.801 41.3711 li
206.734 40.2383 mo
207.75 40.2383 208.676 39.998 209.511 39.5181 cv
210.346 39.0381 211.008 38.3481 211.497 37.4492 cv
211.985 36.5503 212.23 35.5713 212.23 34.5132 cv
212.23 33.2393 211.828 32.2012 211.023 31.4009 cv
210.218 30.6011 209.173 30.2012 207.886 30.2012 cv
206.374 30.2012 205.08 30.749 204.004 31.8433 cv
202.928 32.938 202.39 34.2832 202.39 35.876 cv
202.39 37.1831 202.792 38.2373 203.598 39.0371 cv
204.402 39.8379 205.448 40.2383 206.734 40.2383 cv
206.734 40.2383 li
cp
f
218.126 29.0459 mo
219.646 29.0459 li
219.393 30.9619 li
220.646 29.4731 222.103 28.728 223.766 28.728 cv
225.042 28.728 226.071 29.1191 226.853 29.8999 cv
227.634 30.6821 228.025 31.7329 228.025 33.0542 cv
228.025 33.583 227.941 34.4702 227.772 35.7173 cv
227.007 41.3701 li
225.453 41.3701 li
226.217 35.7183 li
226.381 34.5093 226.463 33.6172 226.463 33.041 cv
226.463 32.1782 226.202 31.481 225.678 30.9512 cv
225.155 30.4199 224.469 30.1553 223.619 30.1553 cv
222.786 30.1553 222.009 30.3711 221.292 30.8013 cv
220.576 31.231 220.021 31.8149 219.626 32.5513 cv
219.232 33.2881 218.93 34.4521 218.718 36.0449 cv
218.013 41.3711 li
216.458 41.3711 li
218.126 29.0459 li
f
242.831 41.3711 mo
241.233 41.3711 li
241.486 39.46 li
240.024 40.9453 238.38 41.688 236.553 41.688 cv
234.89 41.688 233.523 41.1479 232.453 40.0679 cv
231.381 38.9873 230.846 37.5981 230.846 35.8989 cv
230.846 33.9351 231.544 32.249 232.941 30.8413 cv
234.338 29.4321 235.981 28.728 237.872 28.728 cv
238.896 28.728 239.793 28.9429 240.565 29.373 cv
241.337 29.8042 242 30.4761 242.557 31.3901 cv
243.499 24.2871 li
245.142 24.2871 li
242.831 41.3711 li
236.761 40.2383 mo
237.779 40.2383 238.706 39.998 239.542 39.519 cv
240.379 39.0391 241.042 38.3511 241.532 37.4521 cv
242.021 36.5542 242.266 35.5762 242.266 34.52 cv
242.266 33.2422 241.863 32.2031 241.057 31.4019 cv
240.25 30.6011 239.202 30.2002 237.914 30.2002 cv
236.398 30.2002 235.102 30.748 234.024 31.8423 cv
232.947 32.937 232.408 34.2822 232.408 35.876 cv
232.408 37.1821 232.811 38.2349 233.618 39.0361 cv
234.425 39.8379 235.473 40.2383 236.761 40.2383 cv
236.761 40.2383 li
cp
f
270.313 27.0073 mo
269.306 28.4009 li
267.538 26.7393 265.525 25.9092 263.268 25.9092 cv
261.795 25.9092 260.418 26.2681 259.139 26.9858 cv
257.858 27.7041 256.858 28.6709 256.137 29.8882 cv
255.416 31.105 255.055 32.4131 255.055 33.8101 cv
255.055 35.0581 255.333 36.165 255.888 37.1318 cv
256.443 38.0991 257.246 38.8569 258.295 39.4053 cv
259.345 39.9531 260.545 40.2261 261.897 40.2261 cv
263.959 40.2261 265.881 39.5732 267.664 38.2661 cv
268.593 39.5923 li
267.271 40.4561 266.134 41.0381 265.183 41.3389 cv
264.232 41.6392 263.133 41.79 261.886 41.79 cv
259.583 41.79 257.706 41.2119 256.256 40.0562 cv
254.33 38.5083 253.367 36.4429 253.367 33.8589 cv
253.367 31.1929 254.33 28.9312 256.256 27.0732 cv
258.182 25.2163 260.576 24.2871 263.438 24.2871 cv
264.745 24.2871 265.934 24.4932 267.006 24.9043 cv
268.078 25.3179 269.181 26.0181 270.313 27.0073 cv
f
279.024 28.73 mo
280.074 28.73 281.038 28.981 281.914 29.4829 cv
282.79 29.9849 283.473 30.6831 283.964 31.5781 cv
284.455 32.4731 284.7 33.4873 284.7 34.6201 cv
284.7 35.9111 284.386 37.1108 283.76 38.2173 cv
283.133 39.3232 282.291 40.1782 281.233 40.7822 cv
280.176 41.3862 278.979 41.689 277.642 41.689 cv
275.989 41.689 274.627 41.147 273.558 40.063 cv
272.49 38.98 271.956 37.5991 271.956 35.9229 cv
271.956 34.6089 272.27 33.397 272.896 32.2871 cv
273.522 31.1772 274.381 30.3062 275.474 29.6763 cv
276.564 29.0449 277.749 28.73 279.024 28.73 cv
278.985 30.2363 mo
278.002 30.2363 277.078 30.4819 276.213 30.9722 cv
275.346 31.4629 274.682 32.1372 274.216 32.9941 cv
273.751 33.8511 273.518 34.7969 273.518 35.8311 cv
273.518 37.1309 273.919 38.186 274.721 38.998 cv
275.521 39.8101 276.558 40.2148 277.828 40.2148 cv
278.818 40.2148 279.716 39.979 280.521 39.5073 cv
281.327 39.0352 281.968 38.354 282.444 37.4629 cv
282.92 36.5713 283.158 35.6162 283.158 34.5962 cv
283.158 33.7422 282.98 32.9858 282.625 32.3252 cv
282.27 31.6641 281.766 31.1509 281.117 30.7842 cv
280.468 30.4189 279.757 30.2363 278.985 30.2363 cv
278.985 30.2363 li
cp
f
288.644 29.0459 mo
290.164 29.0459 li
289.91 30.9619 li
291.163 29.4731 292.622 28.728 294.284 28.728 cv
295.56 28.728 296.589 29.1191 297.37 29.8999 cv
298.153 30.6821 298.544 31.7329 298.544 33.0542 cv
298.544 33.583 298.46 34.4702 298.291 35.7173 cv
297.526 41.3701 li
295.972 41.3701 li
296.737 35.7183 li
296.9 34.5093 296.982 33.6172 296.982 33.041 cv
296.982 32.1782 296.721 31.481 296.197 30.9512 cv
295.675 30.4199 294.988 30.1553 294.139 30.1553 cv
293.305 30.1553 292.529 30.3711 291.813 30.8013 cv
291.097 31.231 290.541 31.8149 290.147 32.5513 cv
289.752 33.2871 289.45 34.4521 289.238 36.0449 cv
288.533 41.3711 li
286.979 41.3711 li
288.644 29.0459 li
f
304.742 24.436 mo
306.293 24.436 li
305.678 29.0459 li
308.161 29.0459 li
307.979 30.4292 li
305.495 30.4292 li
304.038 41.3721 li
302.452 41.3721 li
303.933 30.4292 li
301.817 30.4292 li
302.01 29.0459 li
304.119 29.0459 li
304.742 24.436 li
f
310.02 29.0459 mo
311.609 29.0459 li
311.394 30.5972 li
311.816 30.0083 312.328 29.5503 312.925 29.2212 cv
313.522 28.8921 314.135 28.728 314.762 28.728 cv
315.208 28.728 315.674 28.834 316.157 29.0449 cv
315.409 30.4951 li
315.018 30.3369 314.689 30.2583 314.426 30.2583 cv
313.876 30.2583 313.331 30.4512 312.791 30.835 cv
312.252 31.2212 311.815 31.7822 311.479 32.519 cv
311.144 33.2549 310.86 34.4663 310.628 36.1499 cv
309.907 41.3711 li
308.353 41.3711 li
310.02 29.0459 li
f
323.204 28.73 mo
324.254 28.73 325.217 28.981 326.093 29.4829 cv
326.969 29.9849 327.652 30.6831 328.143 31.5781 cv
328.633 32.4731 328.879 33.4873 328.879 34.6201 cv
328.879 35.9111 328.565 37.1108 327.939 38.2173 cv
327.313 39.3232 326.47 40.1782 325.414 40.7822 cv
324.356 41.3862 323.159 41.689 321.822 41.689 cv
320.168 41.689 318.807 41.147 317.739 40.063 cv
316.67 38.98 316.136 37.5991 316.136 35.9229 cv
316.136 34.6089 316.449 33.397 317.077 32.2871 cv
317.703 31.1772 318.562 30.3062 319.653 29.6763 cv
320.744 29.0449 321.927 28.73 323.204 28.73 cv
323.165 30.2363 mo
322.182 30.2363 321.257 30.4819 320.392 30.9722 cv
319.525 31.4629 318.861 32.1372 318.396 32.9941 cv
317.93 33.8511 317.698 34.7969 317.698 35.8311 cv
317.698 37.1309 318.099 38.186 318.901 38.998 cv
319.702 39.8101 320.738 40.2148 322.009 40.2148 cv
322.998 40.2148 323.896 39.979 324.702 39.5073 cv
325.507 39.0352 326.148 38.354 326.624 37.4629 cv
327.1 36.5713 327.338 35.6162 327.338 34.5962 cv
327.338 33.7422 327.161 32.9858 326.806 32.3252 cv
326.45 31.6641 325.948 31.1509 325.297 30.7842 cv
324.647 30.4189 323.936 30.2363 323.165 30.2363 cv
323.165 30.2363 li
cp
f
333.162 24.2881 mo
334.705 24.2881 li
332.405 41.3711 li
330.851 41.3711 li
333.162 24.2881 li
f
396.602 125.031 mo
398.285 125.031 li
396.029 141.695 li
394.35 141.695 li
396.602 125.031 li
f
401.285 129.369 mo
402.805 129.369 li
402.551 131.285 li
403.805 129.797 405.262 129.053 406.924 129.053 cv
408.201 129.053 409.229 129.441 410.01 130.225 cv
410.793 131.006 411.184 132.057 411.184 133.377 cv
411.184 133.906 411.1 134.795 410.932 136.041 cv
410.168 141.693 li
408.613 141.693 li
409.377 136.041 li
409.543 134.832 409.625 133.941 409.625 133.365 cv
409.625 132.502 409.361 131.805 408.838 131.273 cv
408.314 130.742 407.629 130.479 406.779 130.479 cv
405.945 130.479 405.17 130.695 404.457 131.125 cv
403.738 131.557 403.18 132.139 402.789 132.875 cv
402.393 133.611 402.09 134.775 401.879 136.367 cv
401.172 141.693 li
399.621 141.693 li
401.285 129.369 li
f
421.168 130.752 mo
420.307 132.031 li
419.611 131.043 418.789 130.549 417.834 130.549 cv
417.293 130.549 416.826 130.727 416.441 131.08 cv
416.055 131.436 415.861 131.83 415.861 132.26 cv
415.861 132.592 415.979 132.908 416.213 133.211 cv
416.439 133.512 416.959 133.924 417.766 134.445 cv
418.943 135.207 419.721 135.873 420.098 136.439 cv
420.469 137.014 420.652 137.674 420.652 138.422 cv
420.652 139.457 420.293 140.313 419.57 140.992 cv
418.848 141.674 417.912 142.012 416.756 142.012 cv
415.229 142.012 413.943 141.336 412.902 139.986 cv
413.867 138.863 li
414.779 139.975 415.773 140.529 416.846 140.529 cv
417.459 140.529 417.99 140.313 418.445 139.883 cv
418.896 139.451 419.125 138.955 419.125 138.389 cv
419.125 137.928 418.957 137.486 418.613 137.063 cv
418.395 136.791 417.805 136.33 416.848 135.68 cv
415.813 134.969 415.133 134.379 414.809 133.91 cv
414.484 133.449 414.322 132.93 414.322 132.348 cv
414.322 131.436 414.668 130.658 415.354 130.016 cv
416.041 129.375 416.91 129.053 417.959 129.053 cv
418.58 129.053 419.139 129.178 419.643 129.428 cv
420.143 129.676 420.652 130.117 421.168 130.752 cv
f
426.389 124.76 mo
427.939 124.76 li
427.326 129.369 li
429.807 129.369 li
429.625 130.752 li
427.141 130.752 li
425.684 141.695 li
424.098 141.695 li
425.58 130.752 li
423.463 130.752 li
423.656 129.369 li
425.766 129.369 li
426.389 124.76 li
f
431.996 129.369 mo
433.494 129.369 li
431.883 141.693 li
430.33 141.693 li
431.996 129.369 li
433.238 124.295 mo
433.586 124.295 433.885 124.42 434.133 124.67 cv
434.383 124.918 434.508 125.217 434.508 125.564 cv
434.508 125.918 434.383 126.219 434.133 126.465 cv
433.883 126.711 433.584 126.832 433.238 126.832 cv
432.885 126.832 432.584 126.711 432.338 126.465 cv
432.092 126.219 431.969 125.918 431.969 125.564 cv
431.969 125.217 432.092 124.918 432.338 124.67 cv
432.584 124.42 432.885 124.295 433.238 124.295 cv
433.238 124.295 li
cp
f
438.895 124.76 mo
440.445 124.76 li
439.832 129.369 li
442.313 129.369 li
442.131 130.752 li
439.648 130.752 li
438.189 141.695 li
436.605 141.695 li
438.084 130.752 li
435.971 130.752 li
436.164 129.369 li
438.271 129.369 li
438.895 124.76 li
f
445.543 129.369 mo
447.127 129.369 li
446.381 134.525 li
446.164 136.043 446.053 137.004 446.053 137.408 cv
446.053 138.33 446.342 139.082 446.92 139.664 cv
447.498 140.248 448.26 140.537 449.209 140.537 cv
450 140.537 450.682 140.313 451.264 139.857 cv
451.844 139.404 452.26 138.813 452.508 138.078 cv
452.633 137.709 452.783 136.859 452.957 135.529 cv
453.793 129.367 li
455.344 129.367 li
454.746 134.033 li
454.459 136.268 454.16 137.854 453.836 138.791 cv
453.518 139.73 452.951 140.502 452.129 141.105 cv
451.311 141.709 450.313 142.01 449.133 142.01 cv
447.793 142.01 446.693 141.574 445.84 140.701 cv
444.986 139.828 444.557 138.74 444.557 137.434 cv
444.557 136.912 444.604 136.305 444.697 135.611 cv
444.813 134.523 li
444.875 134.059 li
445.543 129.369 li
f
460.859 124.76 mo
462.412 124.76 li
461.795 129.369 li
464.277 129.369 li
464.096 130.752 li
461.611 130.752 li
460.154 141.695 li
458.568 141.695 li
460.051 130.752 li
457.934 130.752 li
458.127 129.369 li
460.236 129.369 li
460.859 124.76 li
f
478.609 125.031 mo
478.393 126.539 li
477.813 125.994 477.27 125.723 476.76 125.723 cv
476.436 125.723 476.156 125.875 475.926 126.182 cv
475.693 126.49 475.512 127.111 475.381 128.047 cv
475.205 129.369 li
477.793 129.369 li
477.623 130.752 li
475.018 130.752 li
473.547 141.695 li
471.994 141.695 li
473.473 130.752 li
471.994 130.752 li
472.162 129.369 li
473.66 129.369 li
473.807 128.281 li
473.992 127.006 474.186 126.152 474.393 125.723 cv
474.598 125.291 474.904 124.945 475.311 124.686 cv
475.717 124.426 476.164 124.295 476.654 124.295 cv
477.301 124.295 477.951 124.539 478.609 125.031 cv
f
481.215 129.369 mo
482.799 129.369 li
482.053 134.525 li
481.836 136.043 481.725 137.004 481.725 137.408 cv
481.725 138.33 482.012 139.082 482.592 139.664 cv
483.17 140.248 483.932 140.537 484.879 140.537 cv
485.668 140.537 486.355 140.313 486.936 139.857 cv
487.518 139.404 487.932 138.813 488.182 138.078 cv
488.307 137.709 488.457 136.859 488.629 135.529 cv
489.461 129.367 li
491.016 129.367 li
490.418 134.033 li
490.133 136.268 489.83 137.854 489.51 138.791 cv
489.189 139.73 488.623 140.502 487.801 141.105 cv
486.98 141.709 485.982 142.01 484.805 142.01 cv
483.463 142.01 482.367 141.574 481.512 140.701 cv
480.656 139.828 480.229 138.74 480.229 137.434 cv
480.229 136.912 480.277 136.305 480.373 135.611 cv
480.482 134.523 li
480.545 134.059 li
481.215 129.369 li
484.285 124.498 mo
484.609 124.498 484.881 124.609 485.1 124.826 cv
485.318 125.047 485.428 125.314 485.428 125.631 cv
485.428 126.025 485.275 126.371 484.969 126.674 cv
484.666 126.977 484.307 127.127 483.898 127.127 cv
483.584 127.127 483.314 127.02 483.1 126.805 cv
482.885 126.588 482.777 126.32 482.777 125.994 cv
482.777 125.602 482.928 125.254 483.229 124.951 cv
483.535 124.648 483.885 124.498 484.285 124.498 cv
484.285 124.498 li
cp
488.906 124.498 mo
489.236 124.498 489.512 124.609 489.725 124.826 cv
489.941 125.047 490.049 125.314 490.049 125.631 cv
490.049 126.025 489.896 126.371 489.59 126.674 cv
489.287 126.977 488.932 127.127 488.529 127.127 cv
488.209 127.127 487.938 127.02 487.721 126.805 cv
487.504 126.588 487.396 126.32 487.396 125.994 cv
487.396 125.602 487.549 125.254 487.85 124.951 cv
488.154 124.648 488.506 124.498 488.906 124.498 cv
488.906 124.498 li
cp
f
493.949 129.369 mo
495.539 129.369 li
495.322 130.92 li
495.748 130.332 496.256 129.873 496.854 129.545 cv
497.453 129.215 498.063 129.053 498.691 129.053 cv
499.137 129.053 499.602 129.158 500.086 129.367 cv
499.338 130.818 li
498.945 130.66 498.619 130.58 498.354 130.58 cv
497.803 130.58 497.26 130.773 496.719 131.158 cv
496.18 131.543 495.744 132.105 495.408 132.842 cv
495.07 133.578 494.789 134.789 494.557 136.473 cv
493.834 141.693 li
492.279 141.693 li
493.949 129.369 li
f
508.627 125.031 mo
512.195 125.031 li
514.455 125.031 516.182 125.326 517.387 125.92 cv
518.592 126.514 519.563 127.432 520.301 128.672 cv
521.039 129.914 521.406 131.332 521.406 132.926 cv
521.406 134.625 520.992 136.197 520.154 137.639 cv
519.32 139.082 518.293 140.117 517.076 140.748 cv
515.854 141.379 514.037 141.695 511.621 141.695 cv
506.375 141.695 li
508.627 125.031 li
510.064 126.639 mo
508.25 140.074 li
509.709 140.074 li
511.959 140.074 513.451 140.014 514.182 139.893 cv
515.299 139.711 516.238 139.355 517 138.822 cv
517.762 138.291 518.418 137.492 518.959 136.432 cv
519.502 135.371 519.775 134.215 519.775 132.961 cv
519.775 131.639 519.469 130.482 518.857 129.492 cv
518.246 128.504 517.404 127.764 516.336 127.273 cv
515.426 126.852 513.889 126.639 511.725 126.639 cv
510.064 126.639 li
510.064 126.639 li
cp
f
523.648 129.369 mo
525.281 129.369 li
528.467 138.469 li
533.764 129.369 li
535.531 129.369 li
525.748 146.201 li
523.965 146.201 li
527.459 140.205 li
523.648 129.369 li
f
537.686 129.369 mo
539.207 129.369 li
538.955 131.285 li
540.207 129.797 541.666 129.053 543.328 129.053 cv
544.602 129.053 545.631 129.441 546.414 130.225 cv
547.195 131.006 547.586 132.057 547.586 133.377 cv
547.586 133.906 547.502 134.795 547.334 136.041 cv
546.568 141.693 li
545.014 141.693 li
545.777 136.041 li
545.941 134.832 546.023 133.941 546.023 133.365 cv
546.023 132.502 545.764 131.805 545.242 131.273 cv
544.717 130.742 544.029 130.479 543.18 130.479 cv
542.346 130.479 541.57 130.695 540.855 131.125 cv
540.139 131.557 539.584 132.139 539.189 132.875 cv
538.795 133.611 538.494 134.775 538.281 136.367 cv
537.576 141.693 li
536.02 141.693 li
537.686 129.369 li
f
562.355 141.695 mo
560.76 141.695 li
561.004 139.842 li
559.58 141.289 557.951 142.012 556.113 142.012 cv
554.443 142.012 553.072 141.473 552 140.393 cv
550.92 139.313 550.383 137.924 550.383 136.225 cv
550.383 134.26 551.084 132.574 552.486 131.166 cv
553.889 129.758 555.541 129.053 557.438 129.053 cv
558.465 129.053 559.367 129.27 560.141 129.697 cv
560.918 130.127 561.568 130.799 562.096 131.711 cv
562.381 129.369 li
564.023 129.369 li
562.355 141.695 li
556.293 140.563 mo
557.307 140.563 558.232 140.322 559.066 139.844 cv
559.902 139.361 560.564 138.672 561.053 137.773 cv
561.543 136.875 561.789 135.895 561.789 134.838 cv
561.789 133.563 561.385 132.525 560.58 131.725 cv
559.773 130.926 558.729 130.525 557.441 130.525 cv
555.928 130.525 554.635 131.074 553.561 132.168 cv
552.482 133.264 551.945 134.607 551.945 136.199 cv
551.945 137.508 552.348 138.561 553.154 139.361 cv
553.959 140.162 555.004 140.563 556.293 140.563 cv
556.293 140.563 li
cp
f
567.627 129.369 mo
569.176 129.369 li
568.943 131.115 li
569.422 130.473 570.031 129.969 570.775 129.602 cv
571.518 129.234 572.264 129.053 573.014 129.053 cv
573.947 129.053 574.773 129.326 575.494 129.879 cv
576.045 130.309 576.459 130.949 576.732 131.805 cv
577.293 130.928 577.984 130.252 578.807 129.771 cv
579.631 129.291 580.467 129.053 581.314 129.053 cv
582.459 129.053 583.398 129.418 584.133 130.15 cv
584.871 130.883 585.236 131.83 585.236 132.99 cv
585.236 133.52 585.188 134.166 585.088 134.93 cv
584.213 141.693 li
582.66 141.693 li
583.459 135.781 li
583.625 134.543 583.709 133.637 583.709 133.063 cv
583.709 132.346 583.473 131.752 583 131.283 cv
582.529 130.814 581.906 130.58 581.137 130.58 cv
580.32 130.58 579.561 130.836 578.857 131.344 cv
578.154 131.854 577.656 132.455 577.363 133.15 cv
577.068 133.844 576.848 134.721 576.703 135.781 cv
575.883 141.693 li
574.309 141.693 li
575.225 134.932 li
575.322 134.215 575.373 133.625 575.373 133.164 cv
575.373 132.371 575.135 131.738 574.664 131.26 cv
574.189 130.785 573.576 130.547 572.813 130.547 cv
572.172 130.547 571.559 130.697 570.973 130.994 cv
570.387 131.293 569.906 131.684 569.535 132.168 cv
569.162 132.65 568.883 133.25 568.697 133.963 cv
568.514 134.676 568.383 135.32 568.307 135.895 cv
567.535 141.693 li
565.959 141.693 li
567.627 129.369 li
f
589.139 129.369 mo
590.635 129.369 li
589.025 141.693 li
587.471 141.693 li
589.139 129.369 li
590.383 124.295 mo
590.729 124.295 591.027 124.42 591.277 124.67 cv
591.525 124.918 591.65 125.217 591.65 125.564 cv
591.65 125.918 591.525 126.219 591.277 126.465 cv
591.027 126.711 590.729 126.832 590.383 126.832 cv
590.027 126.832 589.729 126.711 589.482 126.465 cv
589.236 126.219 589.113 125.918 589.113 125.564 cv
589.113 125.217 589.236 124.918 589.482 124.67 cv
589.729 124.42 590.027 124.295 590.383 124.295 cv
590.383 124.295 li
cp
f
599.822 130.752 mo
598.963 132.031 li
598.268 131.043 597.441 130.549 596.492 130.549 cv
595.947 130.549 595.48 130.727 595.098 131.08 cv
594.711 131.436 594.518 131.83 594.518 132.26 cv
594.518 132.592 594.635 132.908 594.871 133.211 cv
595.096 133.512 595.617 133.924 596.422 134.445 cv
597.6 135.207 598.377 135.873 598.754 136.439 cv
599.125 137.014 599.309 137.674 599.309 138.422 cv
599.309 139.457 598.951 140.313 598.227 140.992 cv
597.504 141.674 596.566 142.012 595.412 142.012 cv
593.885 142.012 592.6 141.336 591.559 139.986 cv
592.521 138.863 li
593.436 139.975 594.43 140.529 595.502 140.529 cv
596.113 140.529 596.646 140.313 597.102 139.883 cv
597.553 139.451 597.781 138.955 597.781 138.389 cv
597.781 137.928 597.609 137.486 597.27 137.063 cv
597.051 136.791 596.461 136.33 595.504 135.68 cv
594.469 134.969 593.791 134.379 593.465 133.91 cv
593.141 133.449 592.977 132.93 592.977 132.348 cv
592.977 131.436 593.322 130.658 594.008 130.016 cv
594.695 129.375 595.564 129.053 596.617 129.053 cv
597.234 129.053 597.795 129.178 598.299 129.428 cv
598.801 129.676 599.309 130.117 599.822 130.752 cv
f
614.537 132.031 mo
613.23 132.791 li
612.318 131.311 610.924 130.57 609.045 130.57 cv
607.959 130.57 606.967 130.813 606.068 131.295 cv
605.172 131.779 604.471 132.449 603.963 133.313 cv
603.459 134.174 603.209 135.096 603.209 136.076 cv
603.209 136.945 603.395 137.723 603.771 138.41 cv
604.15 139.098 604.68 139.627 605.363 139.994 cv
606.043 140.365 606.85 140.551 607.777 140.551 cv
608.729 140.551 609.635 140.361 610.5 139.984 cv
611.363 139.605 612.037 139.119 612.518 138.523 cv
613.82 139.441 li
613.004 140.33 612.121 140.982 611.166 141.395 cv
610.209 141.807 609.102 142.012 607.84 142.012 cv
605.891 142.012 604.373 141.48 603.279 140.42 cv
602.189 139.359 601.645 137.945 601.645 136.178 cv
601.645 134.213 602.359 132.533 603.793 131.141 cv
605.223 129.748 606.975 129.053 609.053 129.053 cv
610.299 129.053 611.398 129.314 612.35 129.84 cv
613.301 130.363 614.027 131.096 614.537 132.031 cv
f
618.75 124.611 mo
620.303 124.611 li
619.404 131.254 li
620.682 129.785 622.137 129.053 623.768 129.053 cv
625.018 129.053 626.035 129.441 626.826 130.219 cv
627.613 130.998 628.008 132.01 628.008 133.256 cv
628.008 133.941 627.93 134.867 627.771 136.033 cv
627.006 141.695 li
625.453 141.695 li
626.209 136.033 li
626.361 134.893 626.436 133.984 626.432 133.313 cv
626.432 132.467 626.168 131.783 625.637 131.264 cv
625.107 130.742 624.414 130.48 623.551 130.48 cv
622.75 130.48 621.992 130.697 621.277 131.127 cv
620.563 131.557 620.01 132.139 619.623 132.869 cv
619.232 133.604 618.928 134.766 618.713 136.359 cv
617.992 141.695 li
616.438 141.695 li
618.75 124.611 li
f
643.334 135.85 mo
632.342 135.85 li
632.32 137.314 632.703 138.467 633.486 139.305 cv
634.271 140.143 635.318 140.561 636.625 140.561 cv
637.496 140.561 638.297 140.385 639.041 140.029 cv
639.779 139.674 640.389 139.176 640.875 138.533 cv
642.051 139.496 li
641.457 140.26 640.676 140.869 639.711 141.326 cv
638.75 141.783 637.709 142.012 636.592 142.012 cv
634.66 142.012 633.209 141.412 632.236 140.217 cv
631.266 139.02 630.781 137.672 630.781 136.178 cv
630.781 134.953 631.107 133.775 631.762 132.643 cv
632.418 131.51 633.289 130.627 634.383 129.998 cv
635.479 129.367 636.666 129.051 637.941 129.051 cv
639.52 129.051 640.826 129.586 641.859 130.654 cv
642.893 131.723 643.412 133.084 643.412 134.738 cv
643.41 135.041 643.385 135.41 643.334 135.85 cv
641.881 134.469 mo
641.836 133.309 641.438 132.367 640.689 131.65 cv
639.943 130.932 639.004 130.57 637.873 130.57 cv
636.639 130.57 635.555 130.918 634.617 131.609 cv
633.674 132.303 633.008 133.256 632.617 134.469 cv
641.881 134.469 li
641.881 134.469 li
cp
f
662.125 128.113 mo
660.549 128.508 li
660.336 127.807 659.992 127.252 659.508 126.844 cv
659.023 126.436 658.502 126.23 657.943 126.23 cv
657.326 126.23 656.82 126.441 656.43 126.859 cv
656.043 127.279 655.848 127.84 655.848 128.543 cv
655.848 129.16 656.055 129.809 656.471 130.48 cv
656.727 130.902 657.346 131.561 658.33 132.449 cv
659.346 133.371 660.059 134.232 660.463 135.029 cv
660.869 135.824 661.068 136.605 661.068 137.367 cv
661.068 138.176 660.85 138.953 660.406 139.701 cv
659.963 140.449 659.373 141.039 658.625 141.469 cv
657.875 141.898 657.084 142.115 656.246 142.115 cv
655.178 142.115 654.256 141.773 653.473 141.096 cv
652.691 140.416 652.131 139.418 651.793 138.105 cv
653.334 137.584 li
653.576 138.582 653.965 139.322 654.51 139.805 cv
655.053 140.287 655.682 140.529 656.391 140.529 cv
657.201 140.529 657.895 140.23 658.475 139.635 cv
659.057 139.037 659.348 138.301 659.348 137.424 cv
659.348 136.783 659.184 136.156 658.855 135.545 cv
658.527 134.932 657.883 134.195 656.924 133.336 cv
655.896 132.398 655.229 131.682 654.918 131.184 cv
654.414 130.354 654.162 129.477 654.162 128.555 cv
654.162 127.414 654.531 126.473 655.275 125.729 cv
656.02 124.986 656.943 124.613 658.045 124.613 cv
658.975 124.613 659.801 124.906 660.525 125.494 cv
661.252 126.084 661.785 126.957 662.125 128.113 cv
f
663.709 129.369 mo
665.342 129.369 li
668.527 138.469 li
673.828 129.369 li
675.592 129.369 li
665.807 146.201 li
664.025 146.201 li
667.518 140.205 li
663.709 129.369 li
f
683.48 130.752 mo
682.621 132.031 li
681.924 131.043 681.1 130.549 680.148 130.549 cv
679.604 130.549 679.139 130.727 678.754 131.08 cv
678.371 131.436 678.176 131.83 678.176 132.26 cv
678.176 132.592 678.293 132.908 678.525 133.211 cv
678.752 133.512 679.271 133.924 680.08 134.445 cv
681.258 135.207 682.037 135.873 682.414 136.439 cv
682.785 137.014 682.967 137.674 682.967 138.422 cv
682.967 139.457 682.607 140.313 681.885 140.992 cv
681.164 141.674 680.225 142.012 679.068 142.012 cv
677.543 142.012 676.258 141.336 675.217 139.986 cv
676.178 138.863 li
677.092 139.975 678.086 140.529 679.162 140.529 cv
679.771 140.529 680.305 140.313 680.758 139.883 cv
681.211 139.451 681.438 138.955 681.438 138.389 cv
681.438 137.928 681.268 137.486 680.928 137.063 cv
680.709 136.791 680.121 136.33 679.164 135.68 cv
678.127 134.969 677.447 134.379 677.125 133.91 cv
676.797 133.449 676.635 132.93 676.635 132.348 cv
676.635 131.436 676.979 130.658 677.668 130.016 cv
678.354 129.375 679.223 129.053 680.273 129.053 cv
680.893 129.053 681.455 129.178 681.957 129.428 cv
682.459 129.676 682.967 130.117 683.48 130.752 cv
f
688.705 124.76 mo
690.254 124.76 li
689.637 129.369 li
692.123 129.369 li
691.939 130.752 li
689.457 130.752 li
688 141.695 li
686.414 141.695 li
687.893 130.752 li
685.777 130.752 li
685.969 129.369 li
688.082 129.369 li
688.705 124.76 li
f
705.691 135.85 mo
694.705 135.85 li
694.682 137.314 695.063 138.467 695.848 139.305 cv
696.633 140.143 697.68 140.561 698.986 140.561 cv
699.855 140.561 700.66 140.385 701.398 140.029 cv
702.141 139.674 702.75 139.176 703.234 138.533 cv
704.414 139.496 li
703.816 140.26 703.039 140.869 702.072 141.326 cv
701.109 141.783 700.07 142.012 698.955 142.012 cv
697.02 142.012 695.566 141.412 694.598 140.217 cv
693.627 139.02 693.143 137.672 693.143 136.178 cv
693.143 134.953 693.469 133.775 694.125 132.643 cv
694.775 131.51 695.648 130.627 696.746 129.998 cv
697.84 129.367 699.025 129.051 700.301 129.051 cv
701.881 129.051 703.186 129.586 704.221 130.654 cv
705.254 131.723 705.771 133.084 705.771 134.738 cv
705.77 135.041 705.746 135.41 705.691 135.85 cv
704.244 134.469 mo
704.195 133.309 703.799 132.367 703.051 131.65 cv
702.305 130.932 701.363 130.57 700.23 130.57 cv
699 130.57 697.918 130.918 696.975 131.609 cv
696.037 132.303 695.371 133.256 694.975 134.469 cv
704.244 134.469 li
704.244 134.469 li
cp
f
709.635 129.369 mo
711.186 129.369 li
710.955 131.115 li
711.432 130.473 712.041 129.969 712.785 129.602 cv
713.525 129.234 714.273 129.053 715.023 129.053 cv
715.957 129.053 716.785 129.326 717.502 129.879 cv
718.055 130.309 718.469 130.949 718.744 131.805 cv
719.301 130.928 719.996 130.252 720.816 129.771 cv
721.639 129.291 722.475 129.053 723.326 129.053 cv
724.469 129.053 725.41 129.418 726.143 130.15 cv
726.879 130.883 727.248 131.83 727.248 132.99 cv
727.248 133.52 727.197 134.166 727.098 134.93 cv
726.221 141.693 li
724.668 141.693 li
725.467 135.781 li
725.635 134.543 725.717 133.637 725.717 133.063 cv
725.717 132.346 725.482 131.752 725.01 131.283 cv
724.539 130.814 723.918 130.58 723.145 130.58 cv
722.332 130.58 721.57 130.836 720.869 131.344 cv
720.166 131.854 719.668 132.455 719.373 133.15 cv
719.078 133.844 718.855 134.721 718.709 135.781 cv
717.893 141.693 li
716.318 141.693 li
717.234 134.932 li
717.332 134.215 717.379 133.625 717.379 133.164 cv
717.379 132.371 717.143 131.738 716.672 131.26 cv
716.201 130.785 715.584 130.547 714.82 130.547 cv
714.18 130.547 713.568 130.697 712.982 130.994 cv
712.395 131.293 711.918 131.684 711.543 132.168 cv
711.168 132.65 710.891 133.25 710.709 133.963 cv
710.521 134.676 710.393 135.32 710.316 135.895 cv
709.543 141.693 li
707.969 141.693 li
709.635 129.369 li
f
gsave
0 0 mo
742.561 0 li
742.561 170.52 li
0 170.52 li
0 0 li
cp
clp
742.531 135.85 mo
731.543 135.85 li
731.521 137.314 731.902 138.467 732.686 139.305 cv
733.473 140.143 734.52 140.561 735.828 140.561 cv
736.693 140.561 737.5 140.385 738.238 140.029 cv
738.979 139.674 739.59 139.176 740.072 138.533 cv
741.252 139.496 li
740.656 140.26 739.875 140.869 738.914 141.326 cv
737.951 141.783 736.91 142.012 735.793 142.012 cv
733.859 142.012 732.406 141.412 731.436 140.217 cv
730.465 139.02 729.982 137.672 729.982 136.178 cv
729.982 134.953 730.309 133.775 730.961 132.643 cv
731.617 131.51 732.488 130.627 733.584 129.998 cv
734.678 129.367 735.867 129.051 737.141 129.051 cv
738.719 129.051 740.025 129.586 741.059 130.654 cv
742.094 131.723 742.609 133.084 742.609 134.738 cv
742.609 135.041 742.584 135.41 742.531 135.85 cv
741.082 134.469 mo
741.037 133.309 740.639 132.367 739.891 131.65 cv
739.143 130.932 738.205 130.57 737.07 130.57 cv
735.84 130.57 734.754 130.918 733.814 131.609 cv
732.875 132.303 732.209 133.256 731.814 134.469 cv
741.082 134.469 li
741.082 134.469 li
cp
f
grestore
396.775 153.369 mo
398.359 153.369 li
397.613 158.525 li
397.395 160.043 397.287 161.004 397.287 161.408 cv
397.287 162.33 397.576 163.082 398.152 163.664 cv
398.729 164.248 399.496 164.537 400.441 164.537 cv
401.23 164.537 401.916 164.313 402.498 163.857 cv
403.078 163.404 403.494 162.813 403.744 162.078 cv
403.869 161.709 404.016 160.859 404.189 159.529 cv
405.023 153.367 li
406.578 153.367 li
405.977 158.033 li
405.691 160.268 405.391 161.854 405.07 162.791 cv
404.752 163.73 404.182 164.502 403.361 165.105 cv
402.543 165.709 401.545 166.01 400.369 166.01 cv
399.025 166.01 397.928 165.574 397.072 164.701 cv
396.219 163.828 395.791 162.74 395.791 161.434 cv
395.791 160.912 395.836 160.305 395.93 159.611 cv
396.045 158.523 li
396.107 158.059 li
396.775 153.369 li
f
410.141 153.369 mo
411.664 153.369 li
411.41 155.285 li
412.664 153.797 414.121 153.053 415.783 153.053 cv
417.057 153.053 418.088 153.441 418.869 154.225 cv
419.65 155.006 420.043 156.057 420.043 157.377 cv
420.043 157.906 419.959 158.795 419.791 160.041 cv
419.025 165.693 li
417.471 165.693 li
418.234 160.041 li
418.398 158.832 418.48 157.941 418.48 157.365 cv
418.48 156.502 418.219 155.805 417.695 155.273 cv
417.172 154.742 416.486 154.479 415.637 154.479 cv
414.803 154.479 414.027 154.695 413.313 155.125 cv
412.596 155.557 412.041 156.139 411.645 156.875 cv
411.252 157.611 410.947 158.775 410.736 160.367 cv
410.029 165.693 li
408.477 165.693 li
410.141 153.369 li
f
434.848 165.695 mo
433.25 165.695 li
433.502 163.783 li
432.043 165.27 430.396 166.012 428.57 166.012 cv
426.908 166.012 425.541 165.473 424.469 164.393 cv
423.396 163.313 422.861 161.922 422.861 160.225 cv
422.861 158.26 423.561 156.574 424.959 155.166 cv
426.354 153.758 428 153.053 429.887 153.053 cv
430.912 153.053 431.809 153.27 432.584 153.699 cv
433.352 154.129 434.016 154.803 434.572 155.715 cv
435.514 148.611 li
437.16 148.611 li
434.848 165.695 li
428.777 164.563 mo
429.795 164.563 430.723 164.322 431.559 163.844 cv
432.395 163.363 433.059 162.676 433.547 161.777 cv
434.041 160.879 434.285 159.902 434.285 158.844 cv
434.285 157.566 433.881 156.529 433.076 155.729 cv
432.268 154.928 431.221 154.525 429.93 154.525 cv
428.418 154.525 427.121 155.074 426.043 156.168 cv
424.965 157.264 424.426 158.609 424.426 160.201 cv
424.426 161.508 424.83 162.561 425.635 163.361 cv
426.441 164.162 427.488 164.563 428.777 164.563 cv
428.777 164.563 li
cp
f
447.613 149.031 mo
451.799 149.031 li
453.289 149.031 454.354 149.174 455 149.455 cv
455.641 149.738 456.164 150.193 456.563 150.814 cv
456.963 151.438 457.164 152.16 457.164 152.984 cv
457.164 153.883 456.928 154.717 456.457 155.488 cv
455.982 156.258 455.34 156.838 454.523 157.227 cv
453.709 157.615 452.635 157.811 451.305 157.811 cv
456.336 165.693 li
454.445 165.693 li
449.426 157.811 li
448.107 157.811 li
447.043 165.693 li
445.361 165.693 li
447.613 149.031 li
449.078 150.639 mo
448.328 156.18 li
450.244 156.18 li
451.664 156.18 452.59 156.123 453.029 156.01 cv
453.762 155.826 454.352 155.473 454.803 154.941 cv
455.252 154.41 455.477 153.76 455.477 152.99 cv
455.477 152.125 455.164 151.494 454.537 151.104 cv
454.053 150.795 453.184 150.641 451.93 150.641 cv
449.078 150.641 li
449.078 150.639 li
449.078 150.639 li
cp
f
471.768 159.85 mo
460.777 159.85 li
460.756 161.314 461.137 162.467 461.922 163.305 cv
462.709 164.143 463.756 164.561 465.061 164.561 cv
465.93 164.561 466.734 164.385 467.475 164.029 cv
468.215 163.674 468.828 163.176 469.309 162.533 cv
470.486 163.496 li
469.893 164.26 469.111 164.869 468.148 165.326 cv
467.186 165.783 466.145 166.012 465.027 166.012 cv
463.096 166.012 461.643 165.412 460.672 164.217 cv
459.703 163.02 459.217 161.672 459.217 160.178 cv
459.217 158.953 459.543 157.775 460.197 156.643 cv
460.852 155.51 461.725 154.627 462.818 153.998 cv
463.916 153.367 465.102 153.051 466.377 153.051 cv
467.957 153.051 469.26 153.586 470.295 154.654 cv
471.332 155.723 471.846 157.084 471.846 158.738 cv
471.844 159.041 471.82 159.41 471.768 159.85 cv
470.316 158.469 mo
470.271 157.309 469.875 156.367 469.127 155.65 cv
468.379 154.932 467.439 154.57 466.307 154.57 cv
465.076 154.57 463.992 154.918 463.051 155.609 cv
462.109 156.303 461.443 157.256 461.051 158.469 cv
470.316 158.469 li
470.316 158.469 li
cp
f
486.236 153.369 mo
487.787 153.369 li
486.375 163.803 li
486.148 165.486 485.873 166.664 485.547 167.338 cv
485.102 168.266 484.361 169.029 483.33 169.625 cv
482.293 170.221 481.072 170.52 479.66 170.52 cv
478.27 170.52 477.088 170.236 476.109 169.67 cv
475.131 169.104 474.391 168.283 473.885 167.211 cv
475.301 166.701 li
476.162 168.264 477.613 169.047 479.66 169.047 cv
480.738 169.047 481.674 168.828 482.463 168.391 cv
483.25 167.951 483.814 167.389 484.154 166.701 cv
484.357 166.285 484.566 165.385 484.777 163.994 cv
484.844 163.514 li
483.51 164.967 481.885 165.693 479.967 165.693 cv
478.268 165.693 476.9 165.176 475.869 164.137 cv
474.834 163.098 474.314 161.748 474.314 160.088 cv
474.314 158.863 474.629 157.713 475.26 156.637 cv
475.889 155.561 476.756 154.693 477.861 154.035 cv
478.963 153.381 480.086 153.053 481.225 153.053 cv
482.174 153.053 483.043 153.266 483.826 153.691 cv
484.609 154.117 485.307 154.793 485.916 155.713 cv
486.236 153.369 li
481.543 154.561 mo
480.508 154.561 479.549 154.807 478.666 155.301 cv
477.779 155.795 477.092 156.467 476.607 157.313 cv
476.123 158.158 475.877 159.105 475.877 160.156 cv
475.877 161.365 476.262 162.34 477.029 163.078 cv
477.799 163.818 478.834 164.189 480.127 164.189 cv
481.693 164.189 483 163.676 484.035 162.648 cv
485.07 161.621 485.588 160.326 485.588 158.764 cv
485.588 157.389 485.166 156.346 484.32 155.631 cv
483.477 154.916 482.551 154.561 481.543 154.561 cv
481.543 154.561 li
cp
f
502.457 159.85 mo
491.465 159.85 li
491.443 161.314 491.826 162.467 492.609 163.305 cv
493.395 164.143 494.441 164.561 495.75 164.561 cv
496.619 164.561 497.42 164.385 498.164 164.029 cv
498.902 163.674 499.512 163.176 499.998 162.533 cv
501.174 163.496 li
500.58 164.26 499.799 164.869 498.836 165.326 cv
497.875 165.783 496.834 166.012 495.715 166.012 cv
493.785 166.012 492.332 165.412 491.359 164.217 cv
490.389 163.02 489.904 161.672 489.904 160.178 cv
489.904 158.953 490.23 157.775 490.885 156.643 cv
491.541 155.51 492.412 154.627 493.506 153.998 cv
494.602 153.367 495.789 153.051 497.064 153.051 cv
498.643 153.051 499.949 153.586 500.982 154.654 cv
502.018 155.723 502.535 157.084 502.535 158.738 cv
502.535 159.041 502.508 159.41 502.457 159.85 cv
501.004 158.469 mo
500.959 157.309 500.561 156.367 499.813 155.65 cv
499.066 154.932 498.127 154.57 496.996 154.57 cv
495.762 154.57 494.678 154.918 493.738 155.609 cv
492.797 156.303 492.131 157.256 491.74 158.469 cv
501.004 158.469 li
501.004 158.469 li
cp
f
506.793 148.611 mo
508.336 148.611 li
506.039 165.695 li
504.482 165.695 li
506.793 148.611 li
f
511.836 153.369 mo
513.418 153.369 li
512.672 158.525 li
512.457 160.043 512.344 161.004 512.344 161.408 cv
512.344 162.33 512.633 163.082 513.211 163.664 cv
513.791 164.248 514.553 164.537 515.5 164.537 cv
516.291 164.537 516.975 164.313 517.555 163.857 cv
518.137 163.404 518.553 162.813 518.801 162.078 cv
518.926 161.709 519.076 160.859 519.25 159.529 cv
520.084 153.367 li
521.635 153.367 li
521.039 158.033 li
520.752 160.268 520.451 161.854 520.129 162.791 cv
519.811 163.73 519.244 164.502 518.42 165.105 cv
517.602 165.709 516.604 166.01 515.426 166.01 cv
514.084 166.01 512.986 165.574 512.131 164.701 cv
511.277 163.828 510.848 162.74 510.848 161.434 cv
510.848 160.912 510.896 160.305 510.992 159.611 cv
511.104 158.523 li
511.168 158.059 li
511.836 153.369 li
f
525.205 153.369 mo
526.723 153.369 li
526.469 155.285 li
527.721 153.797 529.18 153.053 530.842 153.053 cv
532.121 153.053 533.146 153.441 533.928 154.225 cv
534.711 155.006 535.102 156.057 535.102 157.377 cv
535.102 157.906 535.018 158.795 534.85 160.041 cv
534.084 165.693 li
532.529 165.693 li
533.295 160.041 li
533.459 158.832 533.543 157.941 533.543 157.365 cv
533.543 156.502 533.277 155.805 532.756 155.273 cv
532.234 154.742 531.545 154.479 530.697 154.479 cv
529.863 154.479 529.088 154.695 528.373 155.125 cv
527.654 155.557 527.1 156.139 526.707 156.875 cv
526.311 157.611 526.008 158.775 525.795 160.367 cv
525.092 165.693 li
523.539 165.693 li
525.205 153.369 li
f
549.822 153.369 mo
551.373 153.369 li
549.959 163.803 li
549.732 165.486 549.459 166.664 549.133 167.338 cv
548.688 168.266 547.951 169.029 546.916 169.625 cv
545.879 170.221 544.656 170.52 543.248 170.52 cv
541.857 170.52 540.672 170.236 539.695 169.67 cv
538.717 169.104 537.975 168.283 537.471 167.211 cv
538.887 166.701 li
539.748 168.264 541.203 169.047 543.248 169.047 cv
544.328 169.047 545.258 168.828 546.047 168.391 cv
546.836 167.951 547.4 167.389 547.742 166.701 cv
547.943 166.285 548.152 165.385 548.361 163.994 cv
548.428 163.514 li
547.096 164.967 545.471 165.693 543.553 165.693 cv
541.854 165.693 540.486 165.176 539.453 164.137 cv
538.418 163.098 537.9 161.748 537.9 160.088 cv
537.9 158.863 538.215 157.713 538.844 156.637 cv
539.473 155.561 540.34 154.693 541.445 154.035 cv
542.551 153.381 543.67 153.053 544.809 153.053 cv
545.76 153.053 546.627 153.266 547.412 153.691 cv
548.193 154.117 548.891 154.793 549.5 155.713 cv
549.822 153.369 li
545.127 154.561 mo
544.094 154.561 543.137 154.807 542.25 155.301 cv
541.363 155.795 540.678 156.467 540.191 157.313 cv
539.709 158.158 539.463 159.105 539.463 160.156 cv
539.463 161.365 539.848 162.34 540.619 163.078 cv
541.385 163.818 542.418 164.189 543.713 164.189 cv
545.281 164.189 546.584 163.676 547.621 162.648 cv
548.654 161.621 549.172 160.326 549.172 158.764 cv
549.172 157.389 548.752 156.346 547.906 155.631 cv
547.063 154.916 546.135 154.561 545.127 154.561 cv
545.127 154.561 li
cp
f
560.695 154.752 mo
559.834 156.031 li
559.139 155.043 558.314 154.549 557.361 154.549 cv
556.818 154.549 556.354 154.727 555.969 155.08 cv
555.584 155.436 555.391 155.83 555.391 156.26 cv
555.391 156.592 555.508 156.908 555.742 157.211 cv
555.967 157.512 556.486 157.924 557.293 158.445 cv
558.473 159.207 559.25 159.873 559.627 160.439 cv
559.998 161.014 560.18 161.674 560.18 162.422 cv
560.18 163.457 559.822 164.313 559.1 164.992 cv
558.377 165.674 557.438 166.012 556.285 166.012 cv
554.756 166.012 553.473 165.336 552.43 163.986 cv
553.393 162.863 li
554.307 163.975 555.301 164.529 556.375 164.529 cv
556.986 164.529 557.518 164.313 557.973 163.883 cv
558.426 163.451 558.652 162.955 558.652 162.389 cv
558.652 161.928 558.482 161.486 558.141 161.063 cv
557.924 160.791 557.334 160.33 556.375 159.68 cv
555.342 158.969 554.664 158.379 554.336 157.91 cv
554.012 157.449 553.85 156.93 553.85 156.348 cv
553.85 155.436 554.193 154.658 554.881 154.016 cv
555.568 153.375 556.438 153.053 557.486 153.053 cv
558.107 153.053 558.668 153.178 559.17 153.428 cv
559.672 153.676 560.18 154.117 560.695 154.752 cv
f
565.918 148.76 mo
567.469 148.76 li
566.852 153.369 li
569.336 153.369 li
569.154 154.752 li
566.67 154.752 li
565.211 165.695 li
563.627 165.695 li
565.105 154.752 li
562.994 154.752 li
563.184 153.369 li
565.293 153.369 li
565.918 148.76 li
f
582.906 159.85 mo
571.918 159.85 li
571.895 161.314 572.275 162.467 573.063 163.305 cv
573.848 164.143 574.893 164.561 576.201 164.561 cv
577.068 164.561 577.875 164.385 578.613 164.029 cv
579.354 163.674 579.965 163.176 580.451 162.533 cv
581.627 163.496 li
581.029 164.26 580.25 164.869 579.289 165.326 cv
578.328 165.783 577.287 166.012 576.168 166.012 cv
574.234 166.012 572.781 165.412 571.813 164.217 cv
570.842 163.02 570.355 161.672 570.355 160.178 cv
570.355 158.953 570.682 157.775 571.336 156.643 cv
571.992 155.51 572.863 154.627 573.959 153.998 cv
575.055 153.367 576.238 153.051 577.516 153.051 cv
579.094 153.051 580.4 153.586 581.436 154.654 cv
582.469 155.723 582.986 157.084 582.986 158.738 cv
582.986 159.041 582.959 159.41 582.906 159.85 cv
581.457 158.469 mo
581.412 157.309 581.014 156.367 580.268 155.65 cv
579.518 154.932 578.582 154.57 577.447 154.57 cv
576.215 154.57 575.131 154.918 574.189 155.609 cv
573.25 156.303 572.584 157.256 572.191 158.469 cv
581.457 158.469 li
581.457 158.469 li
cp
f
598.346 156.031 mo
597.043 156.791 li
596.131 155.311 594.734 154.57 592.857 154.57 cv
591.77 154.57 590.777 154.813 589.881 155.295 cv
588.982 155.779 588.281 156.449 587.775 157.313 cv
587.27 158.174 587.018 159.096 587.018 160.076 cv
587.018 160.945 587.207 161.723 587.584 162.41 cv
587.961 163.098 588.492 163.627 589.172 163.994 cv
589.855 164.365 590.662 164.551 591.588 164.551 cv
592.541 164.551 593.445 164.361 594.311 163.984 cv
595.172 163.605 595.846 163.119 596.33 162.523 cv
597.633 163.441 li
596.816 164.33 595.93 164.982 594.977 165.395 cv
594.02 165.807 592.914 166.012 591.65 166.012 cv
589.705 166.012 588.182 165.48 587.092 164.42 cv
586 163.359 585.457 161.945 585.457 160.178 cv
585.457 158.213 586.17 156.533 587.602 155.141 cv
589.035 153.748 590.789 153.053 592.863 153.053 cv
594.109 153.053 595.209 153.314 596.16 153.84 cv
597.109 154.363 597.84 155.096 598.346 156.031 cv
f
602.561 148.611 mo
604.117 148.611 li
603.217 155.254 li
604.496 153.785 605.947 153.053 607.582 153.053 cv
608.83 153.053 609.846 153.441 610.635 154.219 cv
611.426 154.998 611.82 156.01 611.82 157.256 cv
611.82 157.941 611.742 158.867 611.584 160.033 cv
610.818 165.695 li
609.264 165.695 li
610.021 160.033 li
610.174 158.893 610.248 157.984 610.246 157.313 cv
610.246 156.467 609.979 155.783 609.453 155.264 cv
608.92 154.742 608.225 154.48 607.363 154.48 cv
606.561 154.48 605.805 154.697 605.088 155.127 cv
604.375 155.557 603.822 156.139 603.434 156.869 cv
603.043 157.604 602.744 158.766 602.525 160.359 cv
601.805 165.695 li
600.25 165.695 li
602.561 148.611 li
f
616.066 153.369 mo
617.586 153.369 li
617.334 155.285 li
618.586 153.797 620.043 153.053 621.709 153.053 cv
622.982 153.053 624.012 153.441 624.793 154.225 cv
625.576 155.006 625.965 156.057 625.965 157.377 cv
625.965 157.906 625.881 158.795 625.713 160.041 cv
624.951 165.693 li
623.395 165.693 li
624.16 160.041 li
624.322 158.832 624.404 157.941 624.404 157.365 cv
624.404 156.502 624.143 155.805 623.621 155.273 cv
623.096 154.742 622.412 154.479 621.561 154.479 cv
620.727 154.479 619.953 154.695 619.236 155.125 cv
618.52 155.557 617.963 156.139 617.568 156.875 cv
617.176 157.611 616.873 158.775 616.662 160.367 cv
615.957 165.693 li
614.4 165.693 li
616.066 153.369 li
f
629.91 153.369 mo
631.406 153.369 li
629.797 165.693 li
628.244 165.693 li
629.91 153.369 li
631.152 148.295 mo
631.5 148.295 631.799 148.42 632.049 148.67 cv
632.297 148.918 632.422 149.217 632.422 149.564 cv
632.422 149.918 632.297 150.219 632.049 150.465 cv
631.797 150.711 631.5 150.832 631.152 150.832 cv
630.799 150.832 630.5 150.711 630.252 150.465 cv
630.008 150.219 629.885 149.918 629.885 149.564 cv
629.885 149.217 630.008 148.918 630.252 148.67 cv
630.5 148.42 630.799 148.295 631.152 148.295 cv
631.152 148.295 li
cp
f
635.479 148.611 mo
637.018 148.611 li
635.777 157.967 li
641.752 153.369 li
644.221 153.369 li
637.066 158.875 li
643.373 165.693 li
641.254 165.693 li
635.549 159.539 li
634.756 165.693 li
633.17 165.693 li
635.479 148.611 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (siegelh) ()
%%Title: (IDSC_logo_Full.eps)
%%CreationDate: 5/27/2009 5:25 PM
%AI9_DataStream
%Gb"-6#Fm?qFXOiJT>-YF4DTF%?@.=lSt*EnWq4H(e329EF3`5jh)!MuB"E=M&0uqMi>D_A$\XU,Lh&b;,$5t@YQ\,7=TMY@#0E$2
%YSF7t:UYIYn*W41<k&mV3lm6RVg?*Z;dFP3hZ#b'VK;%Rf8!9"A1Wku$`2/5E!SeGd4Y265sOhr4l31plKa3<1\%P4,-TJ=#JH4^
%F*`8)=%_>Ag;tGUPI[YdC+#UtL/Wl,9X_hN4u\pPN(<X#8^t!b5<MW1m0F_%G7NQ%^1$JB,]OZ^UbYHfS0R7YaA$!n%-8.XZ&/D+
%G!+74n@1XB^3c&S3hM,]+Ci&"mggdi%eHt#']^3o%3NFX/:$74,X5o$\K'*"d-uj5Ah_/Tlu6q)?dn:6HnUW,AYQ_'._4CejujMF
%8fpNDEC'[J#F0IWK5a^@V1_YYP/toFSR0.[me6FG*0Mc_n5,R!HuMRedjkQZT9Y5)h;K3.7q;(J8=.%aDDq#;W2JOr3VX^EhO_h2
%`\[5.6k1^,,PQeS.c[L1r/arUHp)Ke`@B?Zn]G!.0c/+$`H/iSe6sCKgu/NXdPIQo=S1Bn-7`XEgmh'YPB3],!jl7k3JSCs`PMF6
%+9A"im/Z+]+p>C5#e7k%GZ(8h$+%DUUoaO9N%*]2A1"RJ89SCD![fa@0U%;AI.K_&oL,_;$o%^6dXMiXe2s"T-RIt!:#U(<-fE_R
%//C@0N.k2#a8hHiq@N-[$"@nAg(U).5KGY%,+fWd6>gU7Uu6qp&i6[O@tHlPCec#5iSe/kPtqo<G>hLS2"egcgMt851q+!Y+&Bn^
%bms7brTTuY^tl96=jg#W1m)Z.OQGi>8)(#\7.s0sOM)lGgW=1_'A\4c3$u+1`HQ@l[Wk0MRa!4#EB@;t+o*q9aX"!.-D0+<bb\3m
%1.X-NpdhPMLb*u;/Q7IqfVedppt!\P*'HDXlt)pUrPX^nrW^^1JkY%/;_4kR-EcDtI_suJr+eruG6lfZ&??np7HiWRCQsI1g.`j/
%Si_bf.$RLJV6Na;bjJ!MGT0RNR$;d`pW%KOa^eq7g`8qW'gGBg)$\0+U/9cW1m>AE>)1L91uf\hjLg=\RYl^)do\,@:W_2"$'pd_
%N:$!9D.\kn_\OnLmNFLEY0geFlm2DgkQ#"k:uQ*e0Xop*E(r`]if5of1RioL3A)]=*0YX,R&4LFMK`[jjRdeNS,eP%cQDYdH#g`H
%"/PaC-JHLumk+4k)tL1Rn^e%OSUu3$4$8OCa6G_KLfM8IaHi&&""9BfSQ0;^>_!MA8@<s^9Vi(pB.A35m8TTV@qrU]gtKIM+i2U=
%OEB2Oc.!7$%k2JY6AsmP(hBZ+N5!Ro8VodMF7^Vm`A"?B-f'R%[!0be&4&rpXo;uD7&#.Z-/Ci&_4QQ),Yp7<Y'=GjHu&jF<$mYf
%*DP]:*@;pq4'721@QU3?6_iL-'),rmd=9\_.T?b=DJ(&;hjJ^e9I2Z'_a#^I0qNFKU@BFgRi7ICc*O.4CaWoZ/<g.j#Z]TbU5+"S
%0g<[I,YWf)Ms3Vd=nU*jo;#!UP&WQ_3_\o\`+-6s,UI;S92ojl6&(<1SP"LX5c8p[eAasHg#SD4MXlV@>8+ss.2(%q_mh;CYf#`*
%j+:+?;<U!_^0/7YD[h9<HLBk#\^]#2_#4.97C49Y`=<]mTqI27-1tV4DZJ-g%F>&[Wgqm.q^irJrrt$"p+WcCIubK1EK\oeE'%;\
%n`ZZ8[J/^<]mX*G-msF9fPeMpE;I);VdK\S:;h2M[d#6;HqRELBC$#Vll:B;qA-&m]`(a+>3FV>f"#^]C4Y=MV,C@efhUY%P;*j1
%c-bcr>Lh3;oTn`;&48IIb%GnWA<H,Yd@l)6mOa"M.%Z@:TVkcj0Yt'2eAfGk&mI-3Uo(?!NlPXdr/j?LCVkA0q.*q>hNdZt)s2F$
%4=ro9>9)Wp:-@R(b/CXVS:_^Wku?1"P>";()O&1YS>91UdHlGX?8e@sC"4k_R#i#uc#Frh@d/PE]]g#HmA(4J8sT:.*I[`gatXRS
%k2MfI]AhP=qM'W_F>OFaaX3&=LL`/8,:f-,R`TEEU7%BY#FG(ifPpE)Yq+:6k:i$QK\.Y:a,u5I6'g1*YGCa"_aH9JaQ>7WK6X*>
%BdA#eXLKKt<]lScM)FN,^K1WAH6YfBhgSUR-^Vt8[\JW*jGj6m$o-l'kN!&7nd\6]*!aU8c2f27m*VeHX0`0E[:h2\fZ(leZAqAS
%lK'9?6$eU4ZhlN,#ZDQ`'jpKV]l(#&NuU7r+_qDs)(#1%HnGkIb:R*T'A#)dQnXk`-F;qbB_p#bO=1\CiK?XU.sS;c2p53/@2DV\
%+t/g<,L8goXI569=0Za;P.Wdd$HGC_Oc+*)%MQBo'rFX`V_]6$dH"Ut\efQaV:)Z6F<Xq4;OLWLAmdeBY)-+QrLChO3'b5+75:?5
%W=ER,Ceg+)7DZqg>&@/qnA*OiJR$,Mg2%*r8KsTrC%>Q-;VOrS#-*Q`3RFWr"&VADp>QuYg2u##7!]e/s.J&Vge8]&OGtJOPpn$W
%a7Y[Ze2ApQ3Nufo`_s_KF>Ok"e4W`eO\@2.b`PF/PF9Q?j;OMp:JAYofOiYNl(fVa[Q,nmjr'G$Ao/ne9?i*)JJudpb%Rd`$;E^=
%Jq<7*\>Ddg6YB7q<fXmOR#/fq81].HRQ^%BL$:i+cRpASC(!Yt',rG>9/2m\MIc"pe+>P5YGO.)bm(.?;7^j1j.oV.(7Ko5@WZH]
%1;#o61FRHfZt\2jB)i.DSB!1WCAco;+5_cU`Z3ar3r1XhZVVCE>r-=%9QuOR.V)&-a#oUoM\3'^.al[8J?A@8@8Z(6B6fka*l70.
%i%d$".^S<FY(;s2RZ$;gdq%.&k[@`AX^K#PXPf:Al,0'5/Yn.Kg.>m.Ba]c<d&bC',=>nq4$%=mEB1L),3Wd\@tbQ_A5[+Lgq1[u
%1No_ZNa\YuITrtEgSh?Xo+9WB6Rt9%kB6nAf/cV]^'>[fZRi/LKgmne,AVX,M%4fIH_NO6ajDBXm\;-PgHdblL7RO=4KGfPCpJ-1
%:3AeVM!U3/7hZ[%+[mloP:De@CIJ8e,*jls=K$M[J8/_+)5'Sc\RWrfOQ=f";B?#\GCE)gJd-SbLp\^,o?LL:@kk\,D'*l&@ZIjn
%fu;(4[:[H^Ji+st-_3ir-=hfDN!k9p9K^-"Z5FGrX5'DT(FLf#]%,AsONee<m18GAaaLMt1r]4-(Dpc;Gpsb$qAgpMj%@AYB2A?$
%]Y]$?g;a?-%"n6*c.PdZP>.K)+BU#90[3lgn6<9J1d.DE/)8dSG'C:_>etOZg2r&io2n,EfLrMk'P8d#UUS4q]>?""WO>J;c#+nL
%7o:dhKP>.pN4)Mof'%aGLAjmWVgYZ)@T%KeY`5gN"kq=&#5a^?k_1I0_8u&B1@LCE`?Z<=Su?Zcl$NKR_e@an01AQJeZU+?F$,;[
%QT!BO2X!Q4(rk9T$(.&Pj:ka9$H=QMBgLEl9VCWG)T0T=C''-KL!jNLT=BJ9(7_GXNb5Rt6rl?6TOFqhY`W*D+#XaEeG\Jqa]8&P
%GjKtFO.r%pX9Q4pe-^48M-8mtP%uYA8QRX;fhEbEeX:O)NmLC/$ZI']?1FG^:Sg_dCO.0BS_5.g:SX_4[O`-d_5Mq-l">F''@LUM
%6N&(8:)imQBtm4Zf4VE*Kp1@"SXeFp3nMe8.Oe<,I?Q+O4t/WVa]$@KSo3K2pu#o"5;?C-(5bJ*l!`*[/ptIk_?#)BCj:1ai9cT#
%4X2trG'g^rXZ['H0$`!.hU:,aT6'%Xi&NgRiKbQZb?*ajVn6Ro([Ble%NZ&/c?)MPGIcgQq5M`p2<3GpDKZP5<O]RYB:tXWf'\0S
%e]eaX_<SK-"?bGmF]Q!64(bPJ`g?P&gUV<TF*0&nOn-39iT=iM<lg:'])De-cfA-93tuW=Hn2q+Q':T>Od(@Cc,GpFgsBXq%)la4
%h-Jc`D<Zn>hU,`>4"tbsd2>NXGSUK=CF`Zi8n<3"dacsW_mf:6P@?97]'7dbHclg339E#t0WgMe4Vk+dU?PR8AM]b"ll;8<2U&]o
%Za:n`[VR(L>7`\j#7Xq>JL<l^.f!]-\a2o/4HOLK*is6%<N!Lo5B+3>JO*)i\FUF4*'Ao+Qi#=0Y%?2)f;=O#*V=8p4,,\aL8Ae;
%9oM@mRY$f&I>Q@fHK.n!<]=TqI!s#Ee1#jk;^6Ck.&B6b9#93#[deO);SDs%dDk8Kj&/%`93d-c))j+S-5+3-Z9&"Zo7Tt`\]EQ8
%^IbE=gA7f%^-8l$\%'9.Q$K3*X:8+t@!chPn@!D[ON;48U->j3WQ%C:L#&<1_\ag;,]\5sc.?M@k]L<E!XinsZdu\Pko()A6E-Q@
%:7sL?7SHJJ*_t;IPYrBMV?KIG)\)HJ-Da1TI*"jMgT]1Dhn%RDe0-)@C3;OJ>htT$:"`!c6cQ(S9R_o'Df4iC>rO6uMZa9rPu=k(
%2/DMi(G_Q$V0\HZ\]FWoN+$"-,2(9<"4tDk;5mA#2qXFg0WD4Y[P>MJ4)%UEC0)aOSuT\+>BCRNNjSHRH`P2\<'LQtBWF5W%kW^9
%0"3cR9(gGh*A#Q8#M'A/Wk,A*Eau-P?DCDlQu($oERoV947+6rCJ,[daWsPQm60)1pR.8Wg<@fb`3Z7=,&%r>O1)6O`o:hq_bt,+
%HTFkoSQHgL#oT"#)?S6"Qs46/$5aDdAummT]=/dg(m_`e`huL'SKDq_*g0Ep(k_+6EXQT*Y=Y]VbmPJK>CD7&0(s+j(mTso)@PEW
%m)puL&:)O<X\[5")j`T?\T_efs(%$rWTuS-1b"]s2u;e\9sll1R?\]L2Q)U3)OEM<gRMF6bD%mN@PO\:JQ(r"'-[[9WY[%m0j8>!
%-9%l(St8W)ERf]<[d')iZF7)b,Cd(Wl5=C$b%RifeM:&NQ?j*YdBl"Fh"ZPhPU\M52[u`ZF_7q+,ILWg]2C*o,MJ#0BD#H10*8!D
%Ap&9:/JY(Xp,!5cBdd6B(R]*8V68uB7T:(>So=!9l5IKJTO=,C0$a(Uriq2V:hh8Z/N&aUBbjA/R!,Lq3]%qYD`C<\Fna+@NKI+1
%0snO"X'+obl4fQ,l%hG6CoCLZ9b0UjK$ID0qR2UZXnD+G`_Sr&[*["f@r!<D$1cL/PMGY2CX2!T@lGLS:=U7G"XZXkWp<#prV4mh
%fF2UEIJubXNsTpF;_teQQJ+6lVoamIEdc$0H)c\9:bERB]3"pMY7EQkpJ*=N9Ue/hFcHrme7O]4NcOG^bZJY]2fFkp[lMjjSSp?1
%3k@E'iEp7WHlAASiMEt_BJUjd(fr(@ZsE^]f.\:P*U#D,HEq6.HucJno2Hme=K#f9/s?R/]KXiR)>;=W)*]/1Mk''IFuL@)SX@5_
%qG_WZT[b=(d]"I8eg6\G4ZZ?G+2e9$:RB\2Ho'/nqQ:FXelu0d+kOKCH+Y7;7t[_e-)%B:bo\Yd>'t$.P,k"0)o',1Xm\3?)QkfB
%>/*$;>A1%.kV7CPa`MAp6S\#cl)#e$i7'+c6Go#9Td+rbZU^Ftc(f+JH=O_Ke,36:;bR)2l7MR+:GbVhe_JTbfFh1jmnPg69Zr(*
%1bi+g_4eG=`0,+->>nsUnE)YJ]Vu)VeLdPeI!&Znb[P_L_?Pr^2e-pZ9rlNa]UH\lC:Lj'F;)5V9*]qB>'F'5!8u)pOogoC?/pKH
%,7I_AnmjFBLJbZ2jaq8RM6?5Xkk`g<^j*qs2PQTXTs8C5>oX:'V:\hZ]@MtD_8m3/$uOV@*2r]8Cr)_*2=j^]+rfpHV/h][DpkF\
%?S)b_P4$UiV-m<&b8V4n%T[r$9-#"r/Bam$8XG&Y3&"<Ym)uS(V%+QHM7h-"lC"ba.6QEJ_iu'TBW+p'`F:k=k9lLG2+0p%9,j5_
%=^F!>[3i3"WRXpQ0H"&]PR8X1(g:aFPo;M3Q#tO]\IR*RP(&:&WRse12kt>];QAC2:fhkN6,Qm?%6>W-Hu^Mg@j3#$Q#<lcY-e<X
%8S]ZbWbnQTj>RV7)7tI-<_V]-8<65siUsXVekdhX6+$]q_UpR_-FAnk/*m2mj:%,q]M1N]E6M8lR7nf7:J]^RX&r:0?n30t_]n[8
%9F.;7Uq5#LYrV1k'9jSZmDo+inPh$*d%ZpCPGX'7d:to'&ipcD<,S.[@KX6S#O7]jQq=,10$\euM5M8PV'KN(Q!"Rsc&Hu6lcBGZ
%68]5bYt`A`k\okFFq6;aA4SpE56X7jYU.K%O92E<R)@']?th=*'"&`sj?uR3kB9BKMS)2`*3HX@NTCN]St'EFTt<T"HhbuCUDcHR
%CaI1P]$tZ:7YQWcSqX`F69K''(PN(69175#Pm"aj/_9R"cbmTP,hAh@H<K=;?nV''X;)LtKjNPPj7/:<q,2l=+W;k<.6^qe3)gUb
%bt.;4"M/F7DeH1D0+uN_?5b?$gm6GnTn0UjROph.^Y0#\0a0SC0u+=$B*[N\gr;/j*,Q6KCW>X"YVqoU6ps^s)kL*`WEL><#&p(q
%C1P77e?di8EpgNadBTDqVeO^1\^tR(PIlD2Or4lb*o3>flD9Y#<P=h?8A0t!l>g*4h.dY&P*rQm=R112N/ap".WOY2;pGSi8"O9l
%pYaa[+cJ/e>oIR'4.93o)X_<BEnXWHDRIP;ls-r\RrMK%IHm6TmVO,D<PW:mfWbkh[+7Djd*[Z>b(QI*")[ZUnr$9^bJq!&`e^Ie
%"/Y-0Sj\c5B"ncX,[*"LRgOse5LnJa!Cd7(j4FL(E%HZCJg8:cC^W*<oZjg[;6NH3*sC"1[_V5#),&.gf*VtMIbIb2`2'4Ze=0E/
%A8G(Z@[Uhc'N5^0%g)Rd4&mV.!8qcs>LNsqkUMB;=C]m-.Yqp5oq9,!=u/jcOqk4E7ao)CBQ6!&NRf<U'cRPRp$D9(,<&nG=eNs[
%/_1aZYQdQBc!G:AL*]m9e19l22`',?^7%Z4Y7a6%S)&+AVRCB]'2=u''?*ZO/M4H48%1ja1'>MiS/&8MN;sRP\dK>eVQXcOe+SMi
%]AAE>;gR?@*Jbm+J@urqg`$mWo:aPUL=:6Q=O55s:VB(8Bu"%;JaAF+JN?]4;b*LsW?]%H%48LIc77tm<,ZTWb%_Wh5pCKF%)EX`
%#Bl3mHCZ@EV2t_>ON8Y\k[?=f[TT<#9i#arGIfU\c]+tg;mna.RemLT.GiRH/$9#=l&T7mZ$<JY94FVD0Mnf)`Iu7.(g&)Q!_(NS
%h)dK!+]A@uCaaU9^pJhZ*Rj'"<2[o-2@/34;`YJuAj02MI+@SVYb'\6.jJ5jRENgeK\5-`:QV"Sh+nK$]6ql/%4N#rcN<aEX6c_$
%,&%mJo^\;6Y;C#W[^pJt9d_iY+3E7SS/7cT)UW<2l"#\%U]^7_l`B'4G4,$e.IObWS5C[kFLEod4/-ibAUuI_7Kr?rZ9&Xb)?Sr"
%BggQNQS9"l1r@5<#E,t4@5N=>[n7lj)j>TD(oqpFG?s^jA!]*NKV?A$Ar<!/0q6nu!h%=#BEXbYU8fXKFZ17FTfI6SHW8bE<n!\D
%7MY3&MgX`UXt>c`E^,O-11/T^e4Wi)00Q=Q(YtP->#A"(a)iX"AlRM7Q6>T9e(*NY\F*Mb1q(#/^><_%8m%%;`/eZ%_3.JXH5):b
%[","#`d2rnR=UM?5Eft;'$+Eb]-MTA`I=8enS<#W<BGn"]p<94(!p.]1]e+5\a7iUS@<Fge69W"C3Ot3F*$$^)c>%bB5'(ZY$;>T
%VDbP8?`(mWc<7N*lq1^FN7<L),2b.*lm/@3<KZ@JVOd-f/T`]b("j/(o)]-,W>?J2C0"?8N3n_=9koHSGct#g'6HrPdfPds8V:Eq
%<fJY2$I*l4963"ja`L3r*nk!A03bn$"7%jP]QH$$9E?05J9B$Vka&sMp[8Q31LE#&>>L`(:md_KJIYWr7M)m`j][4\,O8Bf'ppZ2
%\f&e6OGq>kDY"TH`?cC=RP)AJEq.qtMoZGf"=>p5P:EGPEi.l5eI&*la$o68MI7?2R,$MlnJS\!94>l9CMCV,]PW.P+'<8gEL"ZC
%if#MN<fG"o<l!5K/uOVOW6f;PDWA!WRBn?QgO_TtXYu/5_2P`a]V==lD5<-5p8T7G(j6K#(@hiFA?J4qrH7.s#a/DSo7U/(A",<u
%Tl(qgbN\u+7!7ma1lc,W$?6>PTLDdq>2f/eEjIR?1i45_!tWJTm.m&'E%,*pJS&c(p_bdGAo4fChS1NVZ#M=u=^*`Jr>XiBNc-I)
%ZIM-B2ib2KM:RUnjg:);`Y#o2gQ]]T.RrT";j+0pepkf?EF`6Kehp*?m4doL!3cp]+fgKh<'@AH2K13ETW`()'.d@$aN^#_g?8Z,
%<o/GW&!iM_9seHE?#GOsdr`[<A5hNjQ=3'(aF%1b@*upV(\ZM1@PZM8;4qdiRAQg$)DkC9VTkA$4LAfq[@O]B`gO?V=j.7)CL-_[
%W+eW@E53Mu3j9Yffla;&6WV7]VM=2,;9M1k>L'Z.(FGTAH"aNa"Z85q5c^E'/TW`4GD)M>$Vt+@$fVRF8qtLn/?@H7$RJ^iBlV-`
%ks\E=FFsYJ:WYH<eG60"p.rqBN8@ZZH_>f9.$bC$WD#:DFY'.s6*g-%53l<7EJRhJ31k=E?^4XT@PQhhf!0U&lHmMu_tgBDq4O+t
%K_&?enl9Bj(J>8$Z]=."@O`&:B-#/c>t-:Tc=`]NMM,A;+Ipb=Q;9AT=&(`IFY'07:FdF1VfmSKO*"#6ou*sqn'-KIHB4!$A3*"=
%eW;6@/)I\iA0YcGm1,HH`]M^I_"G'j$">%-<&+C<(+Y);NTRB[7?P_8bX_-Eem^E`XjtF=Me8g4,.G"dCIgOrKnK0ef?dYsDep(n
%ZPld[P=\`,ou(np9`![118S/br16'XZeWRa\(YVr\1k'0r(BF.@-1q(0i48A51*$R0VGDTb$"H('mH7$@<ZIAbMoB3jn>S,R:[o7
%c?S#42iK4'G#siVM8jW=D(M!/g$rjo;$pn]a&.Y@JKf/64*\TWG-Fu[iY0]Jh,UVk`S%G.c'#K`">_g!eC/5Q*&3G"/Lotl8rP4+
%)c9a_%No5f0[BC@Zu^)<k8IRt1FfXqUDTj@(VL:[jrYWu$:^fI&#Sl1X#]K07StmoemDL_mE-4a1j*J4H#tKV>imb]h79*h'201t
%Cr=AAJ7\.o0=/t?%tf!.4n";b.83op$ipV"[UTXP`oNL[7$T7-=NkV?=W.$5ekI[s@uAB&h9(sT[']t1Rc9-8^62B92+?h31==VC
%`VthAM(7,Jeb7Ha*+/%A'b$uSFl%MKdirm0CH'Hm:i&pmBcuOX:JV/d4P*ME@uqoE$E_@$\f"q7nY"R%/;2Aj9g^pd?ndu,W(&Y_
%<S2.T(,fp26nT?.XI'NUb_,;!=Fn='0jgp08A?T6WgI]h'V^C`IqHduq^bb<VciBZ0ST2d[Su#"*%hr).g@S.L)W^h7`f*d3-8XZ
%\H?C\X(Pgjbep`FQr$sN%5?>eS`!?@Br7]K2;-Mal\N;FX`IC^UscCIWTBdF$MLeP#DHXZ9JKO]ihS<5Y,L"m$V]t4Rl.6S5C9^q
%"^U,)K]cKGdX>]&LEFWQAoHII_/t6:T:OZ)*e(Jn!cDs%2J-llQ,3TtMPH;SAoH2j!`6YOnge?,Hc*@PfT1e<IeH7;;CKQ&Q0OFS
%nk1&M>?\+90s`fNCBR1t64WuQUP"(X5'm?Jcgd_gY7#sNR'*mVX)=g[SK=n(KOiCkDs`-aB,i*jgPo6G#)H7(a@fU`8DAuVlY8'/
%%8Ya8Udo8^6PKr=dl9^.-6_c3p_DsHC$Z6iC=ai[3lFg.oVsGEQj^NsO>oJrmq\m*g7CAK'OBIlnWelV:"K;M[,kf!J>q!r"X<P+
%5FV]fl=EKJ=g-gc/2GPimCL`.H0%'(g5aB-j:#7da?442b>uSKOa0r]+#u3$67auL:ZlI=XWge(19\jY>H4&pKd63=$^(Z4ZVi%>
%=Pg9"K,'Ej1E*B`X:+!_9<"t><LUG*Lp\)QG.lCQ5M;d_BufmEkBKju'ppX=qB,*e?&-UT)-QbYgKuMON&3og@c/[51m1_HT)bOp
%kXX5OT(dr@gUuVNRb#5WZ3$?gBWrV8Z#nQZ5Up?HP.*\3N]=(1=Oq#clAY;Gqbh;>jr.cBdnKFS?u<H-!*=#=*GAa[I9]NKk#9;G
%,:e2L3Q*3]Q(a7T/te/HR^L!MRBOo*Hj\*IYo@a_IhSa,kM4^kWcXl)`(IIQVS)D)_/?^3Ya[@*(^F&iOR1\@-%f_O[gE>]XrURd
%8=$IL<a^*47#A<Sk9;um(<i^.,?i()XkEOP8jPFkj"#c0>/?/6Id!4@2k0RP&k0)#'Pt&R93<.;'l?![lt@la%"$H2@SiZ,9rhr(
%*pKR;oG(8*Z\4u6;r1J3.'L:o:>8'[7?0N(%Ed/DVnm'Ak7X"l4T/+HTKL^!1n,^LBMn.6Kdt@ATe3"Be34\fIJmL(:Kt!S-fHcK
%9q$45SqOI,nVk#X5Ib#pcXo8>re,<3.hbqJ;#.?EASVar_AND"%X!t]Wa]d4?#).I'FT(VeY'GaVi.G:<dKKu/bKFl%\isYeQm\)
%8n;A=f9H`'%:hB.2S8,J%sTKL*-.#ip=I;SB)?pYBBQj(>HL*!)OuDTNT%t,=sPFOG1ZB8c6AZ&B',d'%)VEZHJ"$-N#88sP#Bq<
%mDAE.456S=7I0@IY:c;uh(>$a^Yt3,]OhIG'6_F(N16'sX2UXNf?M2#$3g='h<(QnB&ohci_JQ]AeAJ(jff$&S+6n[WTm;:Z9,O#
%W]'2RG7Zno%JKBM>6OiR7&!H*;Rsm4aXNEOaZbFOSr*FuZ`q&9X0B2sT6[Dge$U\uWE$NX$L9&Qj&*-\B.PGn0tLar.b_7\Jbb+j
%[<;,2$IY3La'ZQWb@N2p43VEeM0bpkb&+P.o\%<k[3LqU:`<92os.*B7:h3NN<X69fZMaZTRX/JEsnf:2QKoIqJCIQfaBFtdXM1j
%S3>6#^R21ukV@o.0&X9Tm6%*OE@\K2T$cD@<JFk2.;O:D@]/U8?Yq;R3&<u.KpLUh=8NJ2m]9L2GHaCql^?>NB`//0_R&JE>S'im
%h%a`>hM0'_Q0N.(V/NA8K\iL3D%C%8>&/%X^4I$:`<Z+%4D.St@%YgpJXNsI<+)=q<*tp\pM@tYlnb)!1t%jK"8e%OqUC]X'aa4_
%R`7:1n1Qf+:I>t)e9?TJqi%h\.ek`^U'(:O`r7k8l!a_kN7N:,f!@\oI7@(^g4be!"SN^-a],7SD-)S05,28,Ar'Zj^cnf;FB($!
%cR>ehj/#q9^cnN:S;KR#"8e$2<G=\Q>^g(Q&J(^MXb)+P7Q`MN[43]2:S1YG*LKJ*m'Gnu<\gn_322ZXfVd&QHk!7,JUJgXXgl/1
%UENai)&3\K1WlAJ7"&,nYg4^"g3QdVYg7!f7IPM/G$pq><1e&a>CKtP;&Gd7@AOTfI7@(^](W$!^ciu`W4M8Z$1+u3:f`._5,5&?
%;jS)L<V@97Vl;mJ`e\B(X_7A8oK-jnW`<h*Y9-6eNP;]82oI==V0DGc_IVKa-tsJ^lRmrU;AIsh=='t&SZ9%Om)(`-)tr?c5Gs0(
%<1/JN)oL*6Z=O`;Y.>@L@\h-PPNXbWCa7`m/uaeW1G"NF"f^L)eQ<hgVB.K1/7]i^W*9N0a)6g74LSBKhuBm9i&TiBs&=G*G5LUE
%DuOBXCdr6B2;?sbNu:NU(t3-`e)po4TuI!1b,j#^*f3p8E/fk%s(kCrNYK7kOng8u`Vt@1ihaLmS,ZJ[;0^'i*LfeI\U3ICCQ3(7
%<R`t=d\E(cn`]5)[M=m.f_l++f?mQH1f8SKQ@B-1WT'ah*7ItsLPEZD3\&)\<$8'ATVjN(,:FDtB^QaI4$4!ej/\!"g8O7HTh_9J
%lo.BBVEUeilH$?oX"s[SQ.^a$`m$M:fL/'hC,K3U=0(#3\m!A4FgW^W8Nh3,<soB>@Q'RdP!X1DrT^p;!]DhaXUS5?UI[l9WZoPR
%A'$V"!_#N2e(b:#qc[iCYDr7@^VJ',:opA6]&>:$o7iW:3*0)2cXK:m\I#^Wd@&"uPa\N0/K/AmnqJ#u>4aAM(Y>a2fnOk-h5Uek
%fM0&fkDSWWRg6qaUe9u[Qpfn5/;/*gAK!m4PSM7\f\15b7Nc;U9=]J0Yl5TcV(I+ZN/@us24hGklbC5?C;"_98/A`RO[`3L6R[gt
%/B0kVM_9[Wn[NOGN(n^OCYq?fqS?_.^QS4d\*oq0RoY)gs/`fsAF%!&"Ch)6g'bVCHf%%l6eq8,rKE[-e#iY-Y*\)Pbc>ij;0MZl
%/:-3gWWN(W[cs^&$Ldk)qt'4=qbiRO1=69D@Yeeag,E3A=Wfnpoc5Rtm2N1\2On!U0i2F.;h4!FM"Y+92@@.LX@CmfW7]3F,EFJ$
%VukA\R#C#n<FE173$\$5gT`@m<Ql739k1.<Mi,5-:i3`r+R<OLJNb]O4Ui_W)lUIGQZ,o0!ulejRi0IY9[g'XN2=rkVV)pEZb/"5
%i%LA_lG]ddP-+Os4+UA#)9i`-N3Oa"T%XXLWfhR6ef-?:l@QR7/ulro7>#-AG%7LfobbTlG"n$['GGX*BNo<H(mdsDN7=2hfXT\_
%d_=u/,Rcoa?U[1KD]5$E@,,::`CD2BFpH2'-_<%C_thN>H8[g^OFetrk!$7"ppBD40XnBa%9.ZcQQC@_D#%p!D)et(go[<jS1Cnu
%DH*8CmM6=G1-L"JN>A&Mn`'j1qH"laF8[TkRGPY$hqUa^jP1&s6`s;Y(S+8n%8m(t)PB&+V:h;T5(0qU'U]3F@$o`L`VtA9*E0%)
%W?Uq;4*N$riW6ai/bLKl;^r0WNZ0bb7*O4M@P6,-\]A#hg8It!L2K`+7]U5rh6Pc4Y<BskWfC-'A33u$ln!p8s$+iXr`H'i+C\'/
%BoH:D^Vq/3"!Z+uO\^-A0g"o>639$V%]\j+C))GI,cG?n[=O.5\N/,:)ogn70sad<7\s-WHf5,TVO'u5bRI7I%[rV#(fKbeW%E.\
%Pfbo4[7!MR#inU:$LQ2sJ8r.qdr^as[oE4XR&qo&bu6HifPllH%(`3s#"S76;-?$a@l;$VCXi8bH"XS60B?hn2H(&6]DcMFc1Phd
%H;R#51RV\n(3OF0P8J[U!NRUb)meHP@acgf\@(%/lF!IV\[=0\1tAPtEO3Kq.\hu;<r7ergp2`'dsXcno^K@WStM7mXY$MEBk4S]
%YG(r)Hp\9M;@BFchUj0fI31.(%rE&JBKj19XPR'hJb;o/H9YZBl#NYC/)eZgb_DkWmU20SCLb0J18raI/c#0I7D=..5X_83&Q'JL
%PuoAbb,nZO5&Ff&!["*=`Z)%0CKqQjKd;s<,H^Q8*N6p.FYOrbG2-9;;%;Z"mK7':5#('pZ7VlZTtJdA1$`#t2E';V^1&=$)q2kd
%kE$pc??tO.KUkj9<:h(fs%o'0*$6Jqe\4**q\:TAKYbN4L<t*AbQmL>6&Xm2\:D"Q::hEEc;&L$g.sFO*3LbPd]63B:,ReW@5<YR
%C$^_HIYts2=.R=+pOOe=/l?Kb%:`&31uILPO%V$^L[#_;`ib$hMFka<;qi*:.lWe(?rcKR?]3\HmZ^rjd0ac3AA=R"7>^00.+(/S
%\`oiUp"`),Db:=-Zl>()F!<7\:sI#LZqC2mLKPZ%_kCqd,8(S:4X<nJ6aM#*eetoLO@8C7')gNfM'7]oGqg=n)Yi*VEN,If#">8O
%)Nq%.Ma]a;PqLM.PTo4*1rt]Q9*e*Ga/#;-dB7go7(R\Y3`SUe<`iAO-?UVQ<iE1GcY^!T_s)s!DcTt?Ga#^2CfVsEU`1gO.auWL
%l%3Gc)ZuD1=eXf]?0+!q1iZADN`:]k/$-%g^LnFR'rn/R&D!4]bllVY]WI!$PMH]V"if3On?=YKAX3.m<I#N)W[jtVXt%Duf5SVp
%lR=(]+/mUG4OhHLB"(-k8P"1/J<fo0<KS4ARW(jRmBFb"X&d2WG\BmGbMMa8g>.FQkULAc6TY<[("i#;#*bNM!\<Y4R2[2N=&)!'
%;<!=cf"2r;k;l8mnBea=-I/j7Dg5s:WWJf204DacCQCAc5-;I,&$:%;A@mJ*D0TaMo$M$C$>as#^"]5iCs(Q&d!@fjk&t&&L5/5N
%=itW;AP!fPiLtBH<AsP"['ekdFY6Vr.^7m*om.&46seH!LXs;S<<bap-#Im?]H/<bG,Q:\Q+l4NhU.A>m83M-.QKOZh!i\EYZ76f
%C!93*nBc-F8+'E6_l3,b4LB;%<d/HAV/LUW$7"$eG$(U<7TYEc*a7#hlJ.]=iM!*nbnGZ2`.j&u$dFR)Q+>j^;>V&n+*(f&gL1D^
%,fUcE>-Bhg\Fp]IiLtBQTCSi\)]i2OG,S]./:#-#lcp$D&QE;Y6gM-qSQeF[)]i2OG$%pLh-e,flWgHkp*hQiq`jXhLZV@m7;d?`
%VcbNn_o#rl.+B0)nhrV["a[+j4-\b2b2)P`(,Ee`%SO$?`Z#t&GCIa^XiLq^XZA[^p_CcjCj9'E=PUb4*nlRl/U,*"3>]<>b*TQq
%@?DU:"reVL*i^m^G0%t,Q*oSEokoPDKe@;]6PGq9Fq+)g>)=1>>!#UGB:qlPnB`^_cVop=p&hKZRV]!:fc(tJ3VG"H_aB\$e*V<\
%QAZs!iM!Y]<1RH=DRe&JLXnUXAO3WG%1fRnFI>V0]F>CRG<7YHVj4XJTiK]8m+G?I_aE0AS+8I"<-)!MgS&?"9!K<V>.55H"i<lK
%Dg5sO<_+5Z>k3"%RYrn]"_cU`khScd?c7!:"V4jI?\"OV-Hi*[MJ_bLY7@;Vg,)U[N-b;t6"L%bNn>d9@]&8#:e5tc'SdE2B?>;A
%8Jmjrh6bn+YASPAN]Z',_)a$q=>l?TZ@17TH^SSLH[SD:HZ@iqkOl5ppP3%RI'dlA*XK4HXOaN'<"J/\X8=(sY+"G]?Urr=@VpVn
%6#q.M0ts:"?pEQ8f^Yj=+?$[[Ha#B458p.'"t.uVNYc='o]Y`0rcI.=IaBsD?e??7DVEkS[l0j^p7@^8RVM6F9t.:tjtcV99oYR"
%]<8^l'i2C*\[qabk*<3BL"9YtGZ4?Vh9d(E!qj\79W"^tWk)biE4f?[9cg`dmWa&g#hRPM7HP@1ggFu6JfC5Mf["(@4me[8IWo;1
%Z#*qhX'RAIIWceDZuuU"<fnua,QNlE=R^6@Z?mh(6p2pXL;lgG%1.=IcK=t),(3s`Y.h%ZAV3[f_d[->GfH+WLV.8CJ%cEid$`ad
%Dk_Pt@^O[a]!SX9/SA?^6iGG4?(gdC<'N6%37>;o45Ap(2N7N:j`"4-e_3:#J#qTCa@9qj>8%llYKeEE;4oY<F9\2&ac'E._Q4Ym
%eK:f'A?h1=cI.H3asjG)98O]SXq>b4U]f#Z@d&'1f9L.9D[h$$?(h:-W#+l]O7_kccV=$@q6hVRKANc&8?ctY(1&)^*?oV@6HcJ5
%<56PL9_[IS'4*Q(p:&T8,>CPC_u.;>#=_7='2]R,$q_#r*#o2Df?ussYW3D5j':!lG&6p=d)i"&?\]u8.s9e<RBLUnHmM]ugIOe,
%SBL54-9m&p]d`a0d7SkNjjgN%A%9u\12;Inj)*l"?$Gl#<b/O^Fd1Y:khYRl*37?bnkg0;)jf?C+1/6__Y)[S"6-9'4IbMDnhVZj
%@'=?II_[ZKg?XLfV$@[YUosXR=A;c/f1HZC0f8jeL3#k6f$7e_R-ro%SkElC]Fu7h9c`ak^+g>-$%Z^&]hpFq52AhpCo;RVSB,e6
%gYUG2a>Di[3R^`lC<%,+n0^`?OjEJ)9p2,X^,mjG4;l.XY2r3TCOGik%8Z0@aA\ecf-(f>c7'RI2:i!kiGc5STIng/dG)bpe?P/C
%p6/Z]1()PBEQ*Y4Z?-uG#K;pi--'Q<]5"Z">N\((^@$9m7%\rlejQpGH"FE&M@mgPGua&i8r[EZ7MclM'Hn-Yo<ACsp5<bpdtI^o
%0'jc7;BZkQ=,(uMrV\gA?Ld<"?6E;td/Edj%ANR55]_$Gf+qft`rtmTV<]!$+KME>!?g*W[:'Jof5hS-:6+tXZKWE>"o@i<WC]GZ
%T\3^TPf&V.3aMhCh+T:"Ao+92c9Tpg8uWSd6(Qc#aHe1J\X(44Y1A/XV'2YsRcl]tjdX?ZUL^,rpuu^j\f\&BooRC;b]>>@!u,,/
%W]+G^@KkK\Kaa6oplte([@b)&*NOq$-X[hC6n+6opjd9ugioG12_0h4A'\Nm-\t8sA^K`CCD]lkLPZ%HJjK-YO(eF%LL$EoHaJR^
%K5U_+:jD<!0*Y_(F@](\f[5Wd)CPDL"*F[X\5HGL&'d*;JB</%RKY^H^'NJEd1,fg)0(W.f$($(U$-Nf,!@Zds"kOqn[as.Pha14
%J>^@%]dqRSG()sd-[THn%#3BfS>uO+8A!J:^Y+41bVM9Gb06mffkL2X(@D@sZl@N!,)e4X*"CUd3N6OCXiUP^l&:^*jY>7=V"F/<
%/2YEi\HFh#D*icmU`3!:gJBD,3TYT?q&V5lD&-<A>Z6B5)\S-GEiq+GQRY`o7'S%dCnV6=k'3%OB\KVY=T^,C$u3Po+;u`2'&Cc7
%m.[1;`:#EO]q4@tHr_ckM%8\r<#s8=,EXpYk#&[a0spAM3AjV/(t^]3b<M9?Caq#ZeZku'P\=t7jFR(D!?od!WAVgW33Y-@Ol.qN
%+_Y;?YaTQM/),Fb,"Np)*+"J=89AgZX6AJ%QKbWio`%YnHda_^<`gPZ4pdD<5$!!#VK@WcS5AG-?9R?O=pJl@<+_2.Q3^s'dteK/
%715E];m$-nLJ2B,eXeH+0/Fg0H#.C53`LI3Wspg)Q7R]?I_2'^EfD@j.nr\A-j$tBa<JCt4S0LBUbir[j-q7`=ABfLL:(3`Vc:bC
%hTDn?B#Z5$SU+K%Z(3J\,3j+N$tM#t,5[=4C#k-W[%0;hX%i2iOT@0p;[^_<oR(C6AXrj9#R]XtQ7`ihjtWE,2orlh8#E^N2F*(!
%^^N^q>EC']F\E!&iT$.PK7,4N,10!qXf6rc?.kIEJ1cm^F^]#g[Xjhb.>-_,Q0I@a`g:o%Us!PZ">)ES\]FW/H5GhjZqO_r+YIUT
%'hPa+c#VSLP:\c,]Ura]XX"*&+4r:h)G/E?Oj'.pO\E/,BdMFCa<P&%(PEuH)B@MdAa99g5/U9`U_T$46+6,LH97NF:\V>Z[<c&)
%,JCa<bl1kHX]:Vt5GnDJDXUC8L3U.iO&<12&%)5X`H/]ndUSIGef2i/8$q\tN=N34]9^D:F(f9Objr-!j#206.?66?)QVp)8Q%U0
%IH&o^m&CQ'OF]ADOlH+qLYB\=@4-6VL7IgMbfH"hZ?:M_A=Vt]f@e['+[,.);4`o<0^1lAS+8gXll#,T*^lOBKD#.3YOl4];\c&F
%23MAV>P)<AX$T"YkeTg%nc3>_%h^uajq7pcK9I8b[ThR1*VFMHF`:[&b[Jj=blu'KVS]I&WXV^PBYp[%gSFpY^-s#K9oV/)&h%/p
%jEkWr__*eWV\oD<U7&T>k)rJRLat=63Lcl@Ug_,:-mm/^MPVq$3_;'o:r"+8N,LQALA-+Yaj=Ih2S]f=OaT3nQ%o7+:[:A;1TkaR
%P&cuRP[&V->ohn<q1d0HSEnu)O/Dg:qN?abi^"`pg9MmI$LKAjj>es(/5TP%2n-gAfna[R"t0'%[qEcUBH)CQL@CW_I7J&ga=IE+
%H+&E5KiZtr3%M?E_K0abil0l211*_p^3!,DV(^1D%Y1O?:SgH>=?:,\B:qRa)o/b3)Q,)_1Y(Ed$QeDKfUJ/'>b$e8A@\9+SrgKc
%3aEuVc145EVn/jBaVk;#/9"S'`%PA)P`CrPfAM>F$Iq+GQa7j@)d$3c*,CWWi&hX2rNm6KA?rKm>b>&om6C^:r!],Leu2ktq]Ku_
%PDo!JkqL^RE\bU"P"B!-)sYO5j^><n7B5<7X0bd'9\H&q?$1nZ)rr"?_94oF1\nq5AhoS&9-bOn`6PA=>^aLP5G*n2,+3\'/q-Qu
%5IH\>MC3J*%Yq*'2EX)AnFjnH;R*`aINubBj_"eP'SImADR23s:>A5he@uqB4;b)hl&,3'Em*9tXHV50ffdi=b>%24>M\"]E3d'#
%@O5.4[\&(_>J&2GepPMSFkc[hIs!h30#4-)fl6VM;2Z1HdE9T)X[pULkiQ?C)+`3RGB[ou[A>6?H:NV@m_I2k7;!mRi`R,>XK?I&
%F/3??L0,Am!omD0F:jL5WF\5E'Br>K;bPYX$QB0JIrVI!WBFF;2&sG2B6AQnHO;7ZYYj5H3:*ec:JS)n\*c5.f\"kpT&f_DdTS'2
%bnC\?dT\-3bnCdi:((XBH,=#_D5#;dfkd5o0DL]6.(d`f<(s!?7@JP!\S;"hQmTh_Tn6`GcdK>R12=*kTI\f4))YQmM(r\OPVm`o
%6Og[2%$h;eLCF>N[%CG$f`6P2CI1rYJi7HQXh[bU>BA,\JH;^u)?;7B@/FU^3j@1*(-PldcTlehdpf?@1![0Zit@$C$"o8qAN+[m
%!F\)5W]`1@\@!&(,RcQZ$/F@VA+C:.b:1",.Q$j"YD__5@42"a>1Z^mTpI:7P]P9-0[\J!8f!-9Fe&UZ7]p7:[#%YV7jE1mRUYmJ
%E_EmV=k1n6Q)M<q<<>>;-FTlE][L99dj6l=A":3e_6^2.Tjo0MaFFK$L"&q()8_EO=s)Ln==e_J!YWrW7nR[=S9hY$frq,f@)Hck
%G_#PBfp.2\^o1l<Tt3;:,YtjZVi4Xu4=u1\cVU5j);g]od4^`kO"4/I6;qjVX]fH/eQ1:WlM@=cFrE1TOCCO/-4`;G1rq2jJ"d]f
%,E4iO=/(%jJFrA.9"KkD9(s*]V0gB'=(3r<WiTaZZ,X_\WWQDD"9^GYe4"s?Mhmr9:eXON@S9[(UEH;->GIi!'\L)MEIgGuibC)e
%DOrL8Dd[)3nK<pZkg8X5<IMZ19-Su.V%<[d*&%a7f]AD&g6<(1*=#/m%P@A="c@K8X&X8C@75mR_UAuq_U-adPuC^tW9L\(?q"'X
%*o1Xs#YC>L,XSfb`+B"gkjg\JD^m4I>m=g]5ue-;3g]4rkh]ruc*14VQ(+lm,Z.$"W)pGl"0HlQk!?H:.(1<hmXjP"AA5rm\c@Nf
%D'tC(?EV5c<,&`Z4U7Fud;p;N2HsgE`hl!B_-BWY+N!fRnqsFo&"=QtgW!FOCk/0&@"r0_D_Ga+QZ(XJ;n8Vj.n-g9+31O#b,a@P
%4ORZ@+>p:T_"P?JSn*qb)&ru<VUJV)X7"#%;Wr'WMb,.kGU4@kEbr#F`bJ[&if]$m,VEpW'hPa+c/=?*%[5-t4LjQgB-aT)"q@Fk
%lkg7uUhTE;Wp=em<KX!K#U`8KC%_Z-pisCn,Y?JEf\WP[:\V?I4Mt(*Og^n&:7]/5bXS&YC%$).V>E?gYZ>]02U]Oib0)^MTk/\?
%]W%JuD;nb1r4"E$nqJtt*`'qrW(eP+4DKTohB<mU963DBU5,1"4;8$]?>$$T`A`paN&VYaI,NB)bhLYpqnIlO<mbP4m$-@c\E(IQ
%l\#W4d\],qg<;_dk%&,Pd8otW==\M]V'7V9HD6!oNQWucfE^ZFibPS4"lf1*"RBY]38Z!nfhQ59Cr%aFhP:f[15nI=jldO$PRU'.
%Ju9jBTq3/"3R)0M^"8.[SJDI6+H[\%-UQQI=Ubb4OJ-2Y]0u\NSmeGM[$^=-oK:532i0Ot94i]nT-.kDU>:Hb1WL%rB^Y-P,kJ3M
%(c@YL#ou)$>5G+>G/sGLLT>%s`i<J?KX^*M-R#1/-ur4WdadJM8('h=3BbribS#8D;g%WHop*=!he^"Z0sD:[_Q!Al?BO1rZA#YJ
%os_TmQ@s)"_tpt<pgqe5`HKYfFZPJ9@aQJnruu!f]oF>C7:)G*>U3_r.4T%iDXp.)aRHLY1C^Jkl>\Gj3M$ogIkokIfcj3K&YU@C
%ju@tR6mqTFJZ(EQKjtEEV:n>8@A$[tk$40#=I7Cl^=l19:=cFg,!JEX0`Gl[p)TFl[0IGrIdTN$\qkQt_s!n10s"K7/LH[i35flQ
%k%dOoq14OX.RB"cfhRfp:<A#-&f54a'br[V]&:CJ?.I:]T]:9Y8jDqJS72p4HWrp7<9e7h`H;TR@U-%f*(\*%PmWINJ6TAM>WtlF
%GW/"[]gQllH>X_H"n/,a3;A8AJ'c">!JfV+_@J<V*S[_XUPYdinBHtJF;!ANojr1BM4IlqQ&K>#F``^l9B0OR_u5T*#>Ml<WB2+p
%J;N$6jRB+9/<Xfn;D>_QUCU-nB31Xda,<MK3W0p>oDoH"cR8KN?G,b3!eM@Dr15#Y^gCCRH?abPH[S2mi;Gj#hm!m7ChQfkhfJ>>
%#[EpPHY5E&NcE,)3p2<!_6]Q01VDRpP7rOcLL5"H"U?kC?D$-a"?;Hek7H)FSaN/ki<_JrK&9@BH/PADW4o1P$LU/tX<iqGKcZ!#
%mrl;@5-MleL['/0;O!et\tOukYM8=9qqWM68B:UP?@C/_jP4W!S_"B@q=+[)nDNc.;[Dl3!=A]iV]C"2^c=Q/+?joD38Wif#'_L3
%oY=*cVq21+jVpD?)>&1UoI];K'Eo,"\Tg7YO2L,a8pa*#nC-doq4'RsR(NN7g`@jYWl>;%*Io)JHTcCL]m^JgM-"T](sq<iptdXo
%&*`6b6KS?q0Zrj,Jq1.c_Lb'%kRE4,nU&=r4HPQP76mOIZ?oE^8::Xh`s%!-*-p'RE'$5NTE@gX6#lB5.-u\q!%A2J7c3_sI;YY'
%5To_-!&4NtQ9L@n%se<$%3B%O&1K-d"7c["6<^SA+7p[M+`$qDK+`]i]MEpoj$Y$m/pg+j&<.e;^BJ8s+7KmI#.tqg!e3@06]pbB
%XH46?Kh!\C,TNKL"J%i>(ZiL%%/9oG]]"#17;hmj?5+fta1JS^+>+6d8\gHIJr`uNi*.<<Ibq3X$oOYF/V*B(NruEPDF/&4+<:#n
%:_?Z>+J^q-$t*h_a!!Hnhu^(%K'\)2\HB-6pc,2i.%eD4q?Et7K5Z>?q_0B/75&CO&1Zl+girpM"9'EN$m93%)i,U(E<2\e8`YZY
%a\)\-:seCt#Cm(^[$q[8DLj&H;+=jq^!<9TXFUVXVK)c0it7-kg]P/TZ>bG*K!]b*+\6JR]KT<*5gW$Yn:TpkM/^Z*$h=G6f8\;m
%!"g?m$?IU7E!(n7TL@^hA:bo"cKu.X1Sc>^.`aLR3Vi%KprEng0Ha7'GT[-om_B2pOr):5Gf^DX#]KLon.sY8\G"@[5gffhMJdt9
%!He,("t;pu%D(B^%B+Uri0I]DpY=&e(ISRNp3P\?&82)UScBQ(<-SM\!KjcrW%*ZOnA\+7iU[,;5jEabJ=k37'C[M2#R,dHTR'9U
%+A)Wi!SR7\Uc'>,INME.+L-^9`<4`=Y(F(Ar#R'/5ll5g-+;Cf#E+@?F+.X,C3rcrd'D$p\fld+)F6oR=pOeH;B,rCC86;Ap/3%6
%C.l<1V?8@)9H$l0Noo:2;Ao02B[\*<&d2bHbNkEA)apQs*.k,/m\&hLiKX*Q^#u-pJ7_/BVJ%E`THI$J5V!tp$O"+1$j8f'.o6C'
%6hi_C>"!,hpB?E/n/O)Y_<WE<$eEiq.-3gZJH-$`+/L8ZABa<08FHgL3M+kuNiE?<Dq&u='X:BJ-(b^U"2rk?"=;@`?6C;&N"GVj
%+qT&E^-ESq&lHC%`TE5q,i/$$#K+mK9IM1("-Wo5DG[?rTD+OMT(heTH[VjhE$O<"!fEh:DMY<Les+r&!`\`qBnDWeqDo+gESM^L
%'C#c[2sA5m,T5<0+b6BZ;4@mEct3W6O@YBg^]@!o';/q/@&"I0<ll^sVa=3t+=$tl4O0uQiWC<(?:p1W>$`6e$s"5O7a7*WLO@ok
%r&j`j?NK/4]i_#k#$MZn/P!P:a%cV/'1=>Ri[=NJmQijH90BR9+Rf*A+M7S?d]jDUn^+:\"eoIr+*pUW)5rZnr_4jFf,W^KdWgU@
%66#AY'%)HY"0F4Hm?%BlK:"hJ3q&o@"JZqN841Jg#YkpZ'T^m9+Pj^$0+fbU#tb8tTA[UGYRf\]5mHTWK!^q8/L<&iW$S7j*0:XU
%!(9St^7\9_YC$GXnT1G0(@V&qNsK#fENmIdXQ$IHjAGn>U]VhE"c7"\%ho&]jpRi$"/AG3!N"34-WMFF'7]II1(YBmDP;dbrS5&H
%FLH^Vpl\*)WQ6-5L&bAMY:_e"%oA<Y6OsX.(Kr0Ueff+8*B<:!"PV7g?8]Bp]Y%To`a[I98_Oo3XpdDpiPI2fp'X#k>d,FVc\RkX
%J.Mm3`!Cqf"<D,`)JHin\DV><Yn?KQVVVd4E._>6+M$YZ7(<J]Q_PRs%m!4f3C&HH(#+9>@%;d4*#]7t!9e?QRGo5J:dCHmJp9U%
%H:8I%nIB^Z2A=?tE#dHY%&9&`_5]:rrUI3,47S`TOCMu+LCcEZF$#\,ga-q;!8ekALVWN[quE8GNZc+TmmQ)o!*<Q"+DjO9+?A?g
%2t;#Dr.(pbrWH@*.`3-[:!Oe>6W[S"^_sWas$9$1lkB6R(]"3N"UK_lJg>dg9[<V+X%sR_F%D,&4ZrHH")]1*@5pd8)JlXI_^Q?[
%oUH(ua9DA)K3n\M4n+f0rU@`mc<f]Yq;>TkIehfJn/k:N56L<br5Y:7B&-njO*?3F]-%"Wi>dHa&b9H4c6;u?kJerq%u3`t\_k<b
%6ZVUM.S%GK!2p5PSg,r=iT]$Ji&tC?ipktpO-eYqiB9teSGhMD#l_EW)5N4e,u=&RH8A*0oYFlFg]:-&F!$piE6%G3L[+r16fa3X
%"*fg/P7'@*i>a#_l$7e)N5.I;jm_!I_ll86L*uU3*?I47mM4YuaNJ'[EZG0Yo5L=nTuZO<n9TWPrGY8WVrSb'LFsB*JcQ\#$to.P
%mH$m`_,A-5JXe_;489pm!<*>tN3<KF_C_@EA-1Nm5XlpllP7`Sr)<l*pHaZ;puTQJ,Mml?LhAqD"r[^Wi=>eQ!tuIO%2SFO?K`ai
%8p?Bcd)>G10`2WtrEq8^D[8c>mbi@U]_9M2!?XWJJ:bXEPWJ=L(n-%NJ-/F:@fj;tXJJ"-G`$.M(P$ut3TG4o0BbbOGkUo!nBV1I
%n<H34k8!IXPB5B3#R95@$[;GqUia6T^s)o$S":ko&%[LEc539hp]mW_a+X3[_&^?.ntWp.h<>+:=aXZ=XsYJA6^8"r;^gDh@EraT
%+s9>4lc>t)Gi\Hbi7\^PqtpIZp(LlEJCTAN1ol/A&$cT>6h!1u&,WX"E%;>ML]%,?Ekd)(c=&^0i.&\+]k,D!L7dOc"[rK_h[^`"
%hN+L#H\j`eYXH"Cq/JC]p@lD2#L:\kpP0lNf,p_B$,o3T+cXg/mPg4-8qjSncCR;:56-a,L]F^i:^Y)nW-J@ITMW'MJ6DaO+VNC$
%045b3L=_"Xbc!0K!#a2M:`ohCKnIbL(!lh4EqMdXDEijs#6ob]]GptL'SJ8afAI-t<.O9W*qXRlc[,_A6"j0T/-I[P!SSN(*8L/j
%6M+p;%6^sM2!fWeL'R,T!%+WWn@mcb]lA;1*s`c.>j:hnn-!nG-R:s%Lld9d%`R$cIf':JB<4.5RYZ`]246+5a'[2H5dL[>Xrj-(
%Cl:G94gaY8TmJGSl+j.o,$uWPMrO'NhZ0(Ao8thfmk>3r;j%p$5FRLR32"OeHE,7m)F!3=rS';,SG5=.^uk.pTTq]i!OU:q07[+"
%p]]#:+27eZl/NRF.t(A(kV(%JAb+:jjT5<+bG.rPa\afiMWOlC3%Bip'VL.7rZ'9#%FdR22;3O[TI(e2=a0c`YSI7=O&D%c&oUoT
%m/kh4/;2CRD<Y0i!EI%E&(1GoWDIF3<M@o/pjZ!KF0Hs!/I7SpBaF7d)]j`QbCNgsW!Q-*KEcBG!n@o3"&jj##"TJ4"0=p8[/t(C
%dg5$hhY&Igj)%7nbCjU?e/5'_GV)0R]I_VHTUGm]\8I7'U#Oharq8-)#M_(&b?uo*<)%mH_L.g];2\8/=%m9:[1&]40Jt7iN:4RB
%=#C5n.A>9'[T'1p5UDqHQm,-?UC=8^3EWpF=GEnlW4%fQJSN<+^gp86(b)ilTK-,i,$6^')6/+Zl@<WjWJ:4lL6;n\?dg#&?7f1k
%W.g@KJZ<_4.eGV&-4<]Qp?S`2Ke%bO=BVT.XP-(B#&6KM[jf7k-mafXli/b%'YG-]N)^$]:"1A;C<<G/>pcG#P/[2ke\T+&A!P-8
%JSKt=/5R'VRHl%jOdHiZ%.]tXr!eiW_Fq]XX:eYNWYU/M!@m).P7o_e@1m#^PWFb9rha_+H);(RLm=(P$E=h="fN#.;)g!u'hSR]
%RR=qB@TCMG%Mf$2,*d_ZfrjJK#3J"t)#pAI+['>>b%*A\=obN)e,\[d7'8$o'pNHh^SO+NBGmlcWi/sQ855@V"DY_qOmAr41/%nK
%(?07jLBar6<IlWVW_?AR81@AFS2**-QtOPieH!"4#4.`jemE(c?Na7.</"7[qqE!kb:k6,%*&<XGVEeWXD4\us)48#<@X7h"8YYO
%nW_^%@K*hVV@6?*oq-@3McRd=5Xi)DLhb"[,GY=h&Eao>:8!1E;^A4A;F:(aQpZj6`6(>VLhaeU,MbS(K%a!XcF5=P.</W^9EjL,
%0g-5T10I&E')tCpg-Z349lZ'O<5B9*aaj;mL5-\K9ND<H6e&TGOIFhN'.7>1lYt!O5Ek#)Ladlh62ci3@*sjRAY@16/I!X-Wo0,k
%?"1E>:)Tp"9,5D&<?3VqM67K@s2[G?fl)Jl#cJO%YHg.6'Y,j6<2#Q(rLS84iA+M8:ed(@W]gJqm&,LM`)C3Y6;A7h)<C7S*&:V.
%Ws"^H^FZ=<82\TrTGj?hOE"1,Mr\DW8gl,6LV][7'sUA-7A<CF,sa,AoY_%dS7b`?'!APp-'SO3FcGgfQI1Rl<DZ,YSggu&*2su-
%'i:=eP'Hu'KThL]^so#F<4-l@W3<B@YNflm5(f,O.e6plWW?!2Kd&bij&DtVTG0-3f/MX8-m%FSJQtjab#esLRAa;bmk@#L1*;'&
%38Yn<'ZH7Z-NfR,7$%O['-,9fJ\MKIH58"=Q'#$UUdefcJBI9V4!aW$iFKJO_5nq2)[XBIQBkS6J=cs_UP)X!8d%CH<&N*2d33(P
%8d<cPVasPaZPn['O-E%kJ?5lT?$3Ld\-SC0AYCkI<?nUYOd\$)`!M:j;L;r5;rg!V"C`Q,!@?YIaIJ\d6JFi3b"tP+RiqZ06_k,e
%Q!ojK8<8sr'4=^I!m3D5UPmS@'&#7^9$)reAYN?NeVgC8<28qtS.a''U#Z?Rf8IQMPWZ`I>_61$#U3Hf.Zq,6KW7SC#3i>iRbC;H
%R4eS@'OJVT-"h?01*'a8NY>#/7ZYTJ#BBS5O\:ajU*WomXNf!h!45.*OcjnFK)#PJ*LmHs&LO1tT_&eKkYrQ6&%j664UP5?$:M"/
%LoNhBW4iR0&ZA;e%JVR8"EG..7$tbnK$m.##(s`%q1'QC(Vp/RNcPf2/L(4SOHS0o&lSnp1I+A0,ri/XfAi[f,dL!u.A9.cSXh-r
%UU(Wm,&K%EQ')jbTVYd:WY*\:OHGtd++Pi"QP<#N;cIq.lRi5P;%etHX\3dJZihr.eH8V_r_rO68H4m*<"W%rP+FYL10tSi@[FG]
%-*C16KU*<^G7Pb.j<0d5>"VkL.M3DXel)4J8/X,sRK#/c8J.ml:dmWl3.^Hb3dH[O,qpX0I0<t,bT-QaD`;,/\e:qiX&Mt35p]'Y
%4oHri;MFobTPnH[0+'+)GR[CtSUt(#g""X%1XOku%S%_*_82h=@5s!r"pZ@bJp*fb&$ZbG'*"*m.&[LI-)=#S=-42Ib*o+A:]m4#
%3@1%X8\d;J1,:mK/g"Su,Jum$&]BPn5bM$S]9)u+UhYT]R'.n%M%`@;-]1=aS_umn!qDMs8RN07%LnJXNDE6.O&&JEcbM7u2)RQ]
%3AE]%?i_e!!.c%67&B6/7Og.MPb\SL+fJr9of.4'-g3REM6n7p!/r]iZZF8D5<CYWKqo_,#.jLAW1AU?aF4:AYu6`O1!DR".0*?[
%PS$`,5:PJe4H]#qS36rSF(b^P4YnlY\$3BLZjb!t$D*TM()Q,qB4g)\kQjFB!?acV3b<ikJGD6hrmEG#:f3EUN0a[SVO#1mU_CiV
%e/T?q(n[CfRp0-$?<LQ<>@6:?KO\M?I;KDn0.kJo!F7(m-r_<=8h..(aV1I`V&7a\bWjR.UaJpM6_d4.isF!l2,7O@WXs^f$qHOt
%l^OAJ;*;:rae,][c1NrGFV`%Z3]n8I+6]Eb-V,[\lX6Y`OfFde6rFVq#sgu\"ZoNPaR):`7(*1XLIT;r-DK;Jgkfph@^10*QQ5O?
%/@H@SmSKtflGsM[.^38H$G):8'NHQIUkmNRU_Kb$:_r6_M)a6(SGS+`E+F?:C'J(KXolh[(dLcb3cuPdVbSN</qDd3,Z&-N-H:d_
%8AXkT@TnS`/5Vb->/m>S6[L*K*Q>?,EK8Ah/M=6.DZVNN!:o(;kU;imVG\j&-]\`J%fgE.L1FRm?CXBW!rI>Up*inhI:u=ol>&7J
%/P19JKGd&^j!d_h`7[9b!k(lu!S:E(2M%7-ku5WX8'+^Wb8coaJ3>lWhMlC@!*'>&7u&9D;IZK$R&ZOW-gBCX5`H(B";H/TD@'r8
%1-@HT1V^H4[]pL*m3[@LWDkdFbNI24><MKPHnLmWX?b?=FDGB'H#]Du%8#?!PLbtUWLfpS<4DXc3h87HfME;K_(nR`$MG.p'6,5N
%Q^32mZ$?-'0F90!GlmITHCQL[7BD9BdNAOZCFH1B+K-H`q`ZYJe##UOHukINGY`n);cJ$rTFBjHOf2OmM)\Sf[t(!H&E^Uq"QR,?
%47>>qPN+ghSbI#R2ZKprlKJ!W&p8Uk7,!\m_=A7n&t,pLl'VlM<U+\cKM%LtJr6#H/.!`38"`AfGCjmGB.oi932/+aHd6mQS:CNl
%(L;Cp3A/&0_Xl*gi4O-f$W)DS7gJ;RhN!D6#W2tC-koSr@6W(d"-TtT,k<",b,r=JTTnt75f#&^&Y-pc,\JG30[G%="T\+V9/!pT
%MCYhlIJV):0#.=i9.p=Mk?W$:6;8a4;)]'NjQI/[;PKNkc):C`P*F\KhbZkdnt#h=,Uh1gb'8MZE-)_3Y#:dhD#UNn58R^6FNIOL
%?[;JYY.j%eCZ2eclDjsRj]>`.iV=9pnD:K;Y<Yu3U_BMUJ.u!j@_R_qZ7Rrp4TK%n8OH=G&2XXo$ApYq0b&LX3.^HfcL]>rkgIYW
%4FQo"Y.a9"lYj;l`Z&j+iVMlD"14u0\EoB:c9I@&oghD12*MWZ9?a=1`(6l[4NY9"%I[)_piY#iQT-Xt]M)-T,q'&_ps_FI-f@*0
%36sbVr!P0gm.;B)F7&WZgj%;m2r?r^Rr?%*`Z)(qp6sH3?3XAW[u;$^FE)JOS19c!q$&*%j#mFCik0(pJY5c)+>Y&BFE)SS8"qAm
%oAZgR3.9'KYJ9Vi>Ah.A"1O3/#B%0HQCDd)rr(H=^>^V/</Pd9COLI/'FL5b#F]R#;G!GO2ZL]%/a"QKlQq-\9gZkGbUp#8m7B8j
%3<,/b:LAN%^qB?KgHTr'LH^)53Bhi2*?Vrm[Td[anbR%)5(2*1JFrR:l/AW:hW>`6WQ9IAUlm<pe4JX_U\>s//a$\s[QA&P,3+Ns
%a,(i<c3l;=r%s!#J_TYgn==dZooZl.nWCHO!jEC(25`+BjMD9QdR64/\["%&bbpo5,H2:D=WmsA3mKgeCXiP.!0%6'UOX\OPM,m&
%,L.gB^@n<\h/_9;GMEKIn%&2,qsT$mJc"oNn"+k+m%".LQCEE'='Q)'Jc!RLF=^%O&"9[FWGJ7BhD9I2$)n>4c$?9co(je$7t@7^
%\@)QuPSEA-`RXFliT=>Vk1pR)HiHGDJ*c3V_"$rU4oE\*pHEg\6G<'S)\=H`e"_P$_Ybk0-QoB6V,E5Tj1S2Y.8U,l1H(I/FEVX-
%)1RmnSc.F:c:=B`hL+)F+8WoG*k^rmLHkd[7j!/<*03;[acA[a^jQ`Bj:adX7!^l7l.K^a$cNgI^W;KNqg2qff*gi"'1>5_3?RVC
%-PAHLR^<`$+/=@X#C:Lb[=Ik$5gF]uGk_jNq=ruGOQ5lO+8_g'+*mX4Hg\W6_Z]5gb:c'Z!lFlkfG5b^8Ei^#U`/*rmC`_&.Ha-"
%&g`bR'H)E"7A*.0&=a9fs!`I)+J4&HWD>bWoV\=-l:Jqjkf5o1hh-./q8(g'rogbf0>$F2_#2E=7+)[qN<59CG]+e%Z8S75Tb1-n
%k7qLa)]g==$3UNl5Psg=0"gKAqlV;+n%&JW:]Ac%JF_sN4S.6=iV;aqT6V?ZrpcUCo'lU.o_.$W!o:U*R@d3)5#IJ0PM[[oUD!%?
%KiHPK!`U\E/Ea98!ZS-N'Fa1?='pI+Xg`fTXp6'Df]RdT:He[#Zd1f7r!RI+s86ra54eDF:H\X/k7Hm5DSPkal`LHS'7BqFDLg`!
%/VOsIiOquWPo^X79aX^"6u-<FPrLud5/2b#%ha3^HS;nuZI@F^Gg#Ju!8elIoW^W/&n$1fKbqMndMLkel,=HGq#%Ijq=KjpdQ9X3
%$]+%I(EuF:8l>+kAT^me^+?)Bg&sZD?'7X`NL-)0b5(/lkb!\EHHDH(!9<PC`81/Nr40k>psRW`II;e*?i'=p^A9T)?iA.!?@).f
%T6o^75l/TXn%8JBY64C"^>]bNC$I*t[Zome+F!P/6>E/f!7Xi3,gN#M,>'r1NAgD[OAI4dXgd3`OaB:baCC8qq%q@@s2%E9rp%\a
%Gi^ScIJ&k,^@Cbq^\lLfTDpGdIH7)K5kT'+OcgCms'QYm8`[S7/_(0,8t4%U;I,GSPRKgmLa)"JQ#]DlOAI&J#jB>/jRFUiIeNRR
%^\H?G?[;=PDgq"VhtlJB^%U_A07W)A00YFf+8u!5%t<LJ,Unl(GGW)A;;Pe)8gC,MD:5Ds"Oou/6kLG+SR7Gt#j9%T'+)AD,POD"
%kT<%Zl-DQnin(p@NE9Kaf!iEcf<;sgfAHDt[pJsTDg_59s6[@055iE0TDR-O*s%OVP[96U1]tDJ=b?p.N!cP#8QfoYW]^_hV=]YU
%=%!c!9cMJ>jnqQ6?[^a)+JB<0nAo*hqUB/LHf9m5o:+Y:lSm[Jo5FWjc+e\e45^&"X+9hrk<AL6a8bA`pYYq+YM]'0pRf0YnfIF0
%-)?DVl.'*MT2\(TdSk3?l;G):U3f;kcT2$b.mT@`n=dJ^!J1C5s841]q7YD;r;I6+mY=%)],uJ$c.B]88AF_LkF[/@8U:mqrlrN2
%0`&):@cO7t'*>:Z(c7u,5l\.tBH+!Fj"o&u6P2bX(HI!>r?.e04nIHe?[hf(^\PQ%roQ^8r:*S^rpP@-iue9ac.B`/=0K:7[Jtt,
%IIq$Bpk8C?pULtV-to+rD$$@_\Z;X;:F\_(JGtiE-u86>>tQ)J:dhKRSc:b0r"G]OpA(&hqT<U2If426nDh9]a8c2"+2%FG:LF"=
%='p:QZQQ**4Rh8nI.5]+M3.^c5'9C7-Yu6KAWu#KZVQN'AUtbf;+BfTTa,YR,O3^2QOshCl^gn#%SY>m07<0K=24F!2h*+3K]=/(
%oXE`Rjsr*7nV)I=qS,8g8[)$ap[8n-'\+Oig/e9Qe1RHC;fe#26pq`2rp_Xi"uuXBs7,L.^]23D-pW:QGMdoKVltR0b:c'R)6cpJ
%,>\qLW_H!]W7m:B@_Y;5oQM12Y8`<R5T+q+X9)#KV>)K=q?n^u%tEZSO$*goqYV.[oA=nI-0X7drJuI%`j]=P``HJorYZ9qL[Y3)
%%hWZiL][O]..g/#q]m%W6_MAZ('SeN!IFIMn%&5aCHhSJ7$mo::S7J7MWd"6oB$R4_?0\.5PX"%r7*;?UsD/Wg@UL<;kOpTp8Kam
%1C\m6VG3^k7aF9]4^agE8sTC:Sj8tK$\A;J$Kt97n0SDi"o9SPoQCi1=W3qR59HOB7?)is5R5f#U1FBX6:RZ07qD78PYj94aSNXQ
%T`7q:UHa(bH`t-ReLqK,&)[6rQ&Gdk5:hri#!d<7Y>qG1@7uYH?i8&*?MjF85PmqdkWaNg.MLA/Hc;jRde]ojfGDn\1SCUg'S%g<
%8UZa00;j4GBL*_iP*i.KJ,6`K8H1&>r,99+:"*H3q)E(UDnG8F5L>cF*&_NuW89Wk'BGUJ8_4uZ]f]cn';E<-rI/5F+8Y&.:H\UB
%$X`g=YPcrFhY<LJ8:U3Jn%\BU'[[`$Z%nVOH6kM%_2!"Dkrrru%DM4qag/&+`t=NfKL/oCq\P@&rmhV:GrIXTBLoo/%;;40p1HT(
%`Uq3#pTlfmo.@?D+JO@Ch5<>QVbJT5nY$9F>[<kfPhLE`b*rL`\+KqjH&hTiHJ%'fkr2uF^)O:<H6;]!g/&pVCHm7GDnl=)+9!+;
%+9(3qDg^`GTM!R_rWNm2YYP5hd;-g2,g1@'\s_E=Ff30jRn*@Nb`HON!QLeEe<!u^$0ah0.tN0@QX9rmhg+8,n,M`E5Pj(-h]t0g
%rn<:&J*&3<r'M"O7D&>&SZnT=j3Tf`S#71\R1)FtTW0'I_kA-)p*ter(/i$Hq`ff\IJ2"%J4QAds8![R]T-:q='kk]G"7[fpPGCf
%,"c$8Z/_o,L0F6=[6T52SU"sdf%;?IS&>g$qel0FloBP&V%gN907=^n9],^2\%h[NDu]I!YJ'cA_"ki3IHILn-)3OU:*713b"Eul
%h4f<1ePJXTfGi(#BZEdnK0)-o!'TLFWJgct3Yk#Eih-VSc7aPG7SU)!qEJ;=j41nljlN[pm6qkJ!94AO5BuL<Y=$UMQZV_RLeb83
%;3eiHNC)Nr*JJ5[^8Ub@qn?Atft9UE^,W^9iKb"9@HaJI5OmuNSpUH*10u:4Ng=%"*pED&$pl%\O:_&4T_%W<g*N#?$B3CP1e^p3
%'+g>\X0cSsbVno$",3Ks+R+*l_#C#troA(W5#.?ToX-?%"cb6cm3Nn<ZNTG9&)?d&.&$)7K"_Hp+qj(ZjG?BM_*Mk-e.%URmcerF
%g-gXZ%d_S.*CqH(ha^!&n%APS:D'B^Vt9fo09Y?!1AUPg`;.bCGN4(B3(la'+1B/Q]RH`S=6l%+3jCrX"++'>78#,Ul(k+X`uBU*
%T0T23qh.fGl+,t@s7tiLHhOel4T3cn3:Zdj]m'Lo*?Y'C)fX[(!^]^t7V<Q>7ca5(oh=dlRoh':Zm-fkJir!coNi^*-!+?"*DVe!
%dYC#He"]]&p$&CSi\SnCo9m@<qU7DkqUjspp:rh8J)ZJ!gk(`8QdD/U"*'>piOkg72jd<$re^dLS[u35G4C;>L&jj^5b7n5b`&0@
%hM%;f^'5r+!U2aX_YN`BTD7kN55D$.4o+.P:H\WsO$3?\_tW'[Oajn$p057XrRFtU.aF#PJmu'^iB/.2)boCb_+s(*ds?UF<%%#u
%8L+K%?Zu9o"R2KWN)TM44A$s@nTaE*7mHah_[kQ"i*CO.4hh@+HI[`<TsLMIT_%471l9oXW1bi30/bKtO.]7$V!ClWHnq%8nR\W%
%^&Fm554J5,n%/B;JGQN@55?TJTDR[o+8aOipH<cq-U.IEgMXj(VTUSQ?Wt4t@0e@J]IE$O\n&6s_p18p.7KEFj2*Q(MnJ@l&CZOj
%#O^J?Q^R8jn=KM!Gj&':_ss^]*k:Y[\pAGPbp(GWj1I?W'L<&%"D'TsT>K4+N74%RUSUf;)L+eV@Dimb>Za0#BmS$HFQ)Z5:B8rN
%mif`(GMdi#-P5FB2r4!&Wt?]bBJ)YQ6eD<678Q;72#j/i\)9rT<EjGp<55poYD<3N]>ZY^'juJ/QgPFL79>==T`FaQG61leI,`F5
%n+aK$(jb:D"=MTAe0MWJUaE$to5(W+5NpZb%@6=FPpVR!$BAnGA@4TE,J=fDs8J)9Gk3MrIGjf0hEd4+J+3.BgiglcA9n"A9.pFc
%,V:_0;Q.*C-PKIgb%)ur^J*8FN>s&TP#>MAbU:TBM*lmeSG-95a^nQQ!Nq(4KF?buEU,28doGlf0>%",lE?=4:Ae6o[C@b$<4?aX
%[M11m<On@lY%hN9[:$bR]XG@&,Gdd3!P%Ro)fGTA9fLmUo1_1"GiK7b?[(nfe?@fCF3Zs"LH+>X<&@)_0D]DhX:]#c?8bPY=q?Er
%ds+%SNfKp@$cMi,+thQhJc!CYjamle=6#1e='tp?CYsWtp"*Q#h0%p^nd!ZC6[!sQ3#?2HA]>Z%<9pFQ%TYtD0-/#mm([:+9"^!A
%WGfWJ'LB<)SV\U>*V@ainha2:C@lm6IHBRW?$\42kIX0DP(PU^I2O%_`5P0^GaI9h^qfL)D/,_iF](8IOrmgKEH@X:G;ngeP0=Q;
%(S#^Kq%m@bae`'E7ZOO*1Qg`m,l6^9SAb)sQhlj_G\Cf>?`I(CK[c2ZmH_iV<9*`V$Dek.#,:79,MB\c)qfr++O4MR;KO3X0K9;+
%[jTklNI&3O]np98cZ3?8H2A&mb>m^mLd'J@Q&HoX,tRdiku6(hmk!akp[7XonSYji)eY#QH+WU[*L+n'E<W8WGWe>m5!"YJ;kV,U
%<B94k8/^m/"SEt_M/IuZ.h7WNCaO:HG`Y046L+"disbcaN)rTLOlsp&Qb=D.s3WV?a'ls5<FWZq5SQg[$:N_'#,nFfn'Q@@jl9Xr
%KCkOUAaYAgNXANY5\4Ru7HO1FAR0=FTU$(`U-__Q&O\[p\:b@&HSH(^"2KfN\>#1&$:#XQ*rsc"gJRTa?'q6*Q^ii1P<8FWf=R*4
%WmWQ$I%8M>oYk^2>[8)?_kRm&Mf\72G12:H#KMUT8)uWl4@[BMh&,044>EkPC$:YZ-)fPD<<d23;Y7hE&J[o(MX6t4:?1Qj*^b/<
%F<Zi,FUClXFN'8/URTaL)mgX=*Z@jorbqMe`Eeh)3YO^[NlW)59T4g=1<+/6UEJ=*<-;2nJEMeV"M&iQ.)P*r)cT5<J4:,:5t+'N
%0@>#?U5>X"a`$a>q;5etmojkurqbAr+4s>[4O<9Qq)j#OrI&Uf[Amul\lD@ES>S>B(ciU."M0nq8PM"hdIOQYe<Jkir`b&ZU'1:$
%E]^S]J!gr>;oq:aZUu.nM4kf#.2Z0e^p$4S%]G'QD5FH[<=Alo/KaoKQ<YO0i%4r.o`E`Na3o^;QJ5a)e@kch)Lc+.SVhhB9/+q^
%2O'@*/J7QQAq3;PJGS^"DS1OS,,iB*$O%b&:YmA@'VS_7`o11RP&P":II1KDb<kSr.V`*f/FrWUWRG%J]<1kjb,aA&XOl?S_[Z&H
%\9bjO4ZB%0jk]L"Y"Ie7Dp+Ci':c8\YteuTd(5h5<HI-6f#ee[<6%2nnOkkUl@f/b$AGXpmeZ6f]^bjanLn=ITU\sf60q@e]Af>2
%kU^.iWD$u/a]9-5V#chg"#6GA<IrfWhgUel;''oReYteBs8'nhY@NXFgQ1O//$3EPi`n*KWYq6u>0bJm[PbIDYFQhRXb&9n=uKF:
%?1Er!??tXt=7MH'TTF"oaVKY:+1?uH<l_^P*Q[6UjeBA='[hIEM_,lXW`99*/&32h;(aA0"Nn?Y2Gd&L[,S7*3EOT#`Cso<at;rU
%eN[2%C3>J9+;e7n9!"@$J%NM(bA'BtXfF%U0U*lbk?B+YC2)VO's(GM]2H1E#*b*qWskP!Y[3L8CbO+9.^m$DV7*'I[Cm^7"]dUb
%/G.IS#sJGsXg('6L3+Y?JsXpI@7Z[,>-`N7!8_SSb87'+>Jbcg=<T$b2)qX?bJgL.;Ihqo>$j_pL.O+E-b?<[UK)nQ_TOFGXWH9J
%2:c0u)cgq/$G$=,$1t<!2-iO0.Be6%eZGV!>&3Fo?<1QS7I,@OYeM:sfY;;Ec9Ksl'7_qAQj>nmY0SWbhgd<og9@6X)LH6'TZmJD
%#s`5-d'LJRb;sU.XM81M?!hR=<*k'oC28N/O]jPk2mZA8G(<s&#\WN>fN,hb2@u^k_OKCAB`^#'=#"CkYeF=1m]&#+qXR.78>k8n
%0!q2gm%_tiL)"!\)f&QZ$M8mPhc?N1gp%#Nh>UnFT]Se)WS7A>LR!$3dFKSR"isnhX-0sQ7O@5a7O>6DLGLIE=\F?"SR3]aIo_X`
%G#Y`4.b=<i<Ieq#rc3S`WB#I-T1[MW5:SY==mDk_\#>_&<-dS'CSFr^S[t#FG0kMm?.Mf,%;Jp*e?!ajH$,OB.Ks*o;,b%>*S_Os
%ZoO7krV6ie9QWS7ZpW5JPl=',Qoj6]Tp:Z2Hbt7rCQA&;2:<5<)qODu>!9PJ?e4fT*M7Llpf-Kj_-%JZmS%14[$7D4P'U\SS5qND
%RPiIG.'9Jq46qn%Z:8#9-p=s:XMC?MH^`nUCSmc*5Za&5*^qqbs"lZ0b8n^WKBs&Hh%pX.ce"e-m%r1_%-J*0Zr37"BbRTel-A,6
%;N&#aJ_KGU7W1r5dq4$Bf&E2Y:HNV4C"8R:eVe;9k$@SEHI5GJkH-YfHhFAsX;_#=5rrH>XM`q2VbIG0h>J\6#T*@7XiIuL_;D=/
%@2f$l?A(,5"m`7nj0ZS]\rMWrmXBN!=Z)mX5e:GAb!01`.^O#[3U]6oBBPk+enmS58>kI>p[t%5p8mdZ>EG_"W>3WYQ`dKH\8EqW
%>jX^jND`i>k/"g0;sL0NlZ/?AdaN?<:[4bQkjCEOle-SPQ'T=g/TP2Sa1C&S[VD#<dNnQedjDW)naJ0eI*p/^#Ga4Uk=p``[2`Ld
%jZ@BBSD-fbH_df_jN[D>Hg*W)d`-Rh`-KcJH/9NdZ'"XhQICa$a0jmu:7[nVU!?k;c^R[*RUbMEhFjuUQb,5\D)f4boW5X?r0g[H
%ZSpk8rnUS`nNX*_^9[1bIb#Q[k,.@C8;m8hR5]&6Fks\.22bPl^chE0T=/[A)U6$5=.H,3r7_/;bC/OQE//'#X%h`AR;3`#n#^_^
%C#$Jc+G?Qn#%"]`]YJ:.rX<gcIJ`cm\:<URM2\e]g$j>GepLrEib8\ogkJn\-mtSTc[,DEHLC#GKQW&m</4kWdj:<?QWUiaUEs6W
%VdhF3_OR5KZ@m>i]T-'Z6Ub=hMRT*-;P,MGgVG(\5?DA9;p.HYkL<U@\aGiN.EIJ=-(TN@5Po&jUMn:(6IhbbG3mH^i9GkK.eB!G
%ps%*>oG%+&Vt;M]e$FFpd.BGo7@5arOIi#9^:]tXAZ%=9T$9)PUZn9daoq=c:H_lBnS8"o;J0"-Eol>a%P;#91U$F-Z*W#sgs_Be
%b=?WU4e'ViN%9[)XdgJ6T-H6S7I9+d0Mge@Xu3,_m<C&6/#L@Xfn!e"WuT@WMA;@3R!Uu^D=-k54!&HE%ZjnAJm:>%Xubh8`Le3\
%roClFK*2/>\g."V\@S^?0KY;5%eCBp%c$"o`]Y?]pkj4Glo`;0acWJ2F14L](CmoZJ%"HAE\7<Xl1pVu#3KgdKs!XqF3b)2XueB1
%<"BDnm0)!_#I*W<qW\2n%J$>8_7Jr0Yr`t?S'S9D^peWkm?oU.k2&i>hX-9[h%/@jW@7KHF9UtZ*b\eCq4\C+hBUC$j0h`(j@_OX
%Hd=sDYjMd@Icj?d*W/leY/.]9l_U5_IYpB"lR@D@T+gQe*G>Yh#IJ.1&',OtZpMA13<,n)_>$oZg3(Ep[3+$Jf1QAFs6)KQFMG$.
%5kk.:%<T@gdm3[)3Xp2GYL>c2q`51.^TZ*Op\Qu\FMG$.5kk.:%<T@gdm3[)3Xp2GYL>c2q`51.^TZ*Op\Qu\FMG$Z6pUe$>j%`/
%r;PH3h>6'3LCTo'a.\.K++C-&74?dDqQU:oGi6rbWt-3j2r=2hNK`fkFKk)j7dKtae&Ah:TDXJkD#0jqKt(D#0C&J4Dat<^St,gd
%5BQXnKC]!8+$+X`olD3<FO5fIfgacODRu\cnZ.9QRq(o8+`:B"Y1X4<[%O7N(J+4oq7$;^DY@q^dC#H2kkTscF7Q`TDtO"j0`$6.
%O9^-iqi.<&Cg7f9*g3#hYSi51hhZ_;1gR`PA)-DU-\QrT*W3pTnAB7P)[Ek"p7qP+a1!+AgN5Ub)Yr>'a,NA+E$>&ef5/U5aZ%He
%D&k\4%`5p5,^&+<m5lr/Iil5]Y']S4EYBM&)^hgKFRZEQmWdreXZN\tilK,2H)f\6jbN\lPOcTR>62K'I(2=e+riet`r(+X%4C/o
%j$NM2),L#P_QFQiOgZ;&'9@nn*H&;]fCgTO&MH'_4u*Bi*XVV)a_)=aG[tVR*^>7+kb%Ek6lq:WNq'q!nl83@hsSG1UQ&*1*,Xg-
%UIRD^E;6AN"HOWflK#ck7t'.5kKnC9cP&gh#0dGaoA?lM^:Sdc&\7^>Eu:P?M^ON+DiWdT^/dI`T)WRVpE+2)A,>tWp6^6J#pIH(
%f,-qokW8UJ0<$Ap,jY49INGc?'?AfZo(-Pjm,`#DomL%olJm<]N2Zb/TD0&N&,[EJ:OJl)%hlVRj&eag^V+FLoB<Gfp3B?q]mf7M
%#M8Om+b'\4m.80#kTW6P<1h%.A#&(fiuc=aVoSO%INJ3"VVpA,'MUQ1`"2]9[Gd`JjZb1Kb.j#6Z2-R4%j(?;nmddBYnKLBcVAsq
%r_X?ro8%dOY`:Y0cVJraEVU7G\#@:Xah$O"&GS7\5*$`QLSOQgoQWm;86GlIlXumKW^#TW(V8n\g#nLXhYo\-htF%1%j@H&/>"0e
%Xe/,Mha`^IE0QtBjDtUIjj#S=8g3NqT+2s(Z/qnQpA!V3F,Z.Zp@`c65%WLi58p<r])4qpe'WDB5**fFeJn.sUSQi>Qr&g`j73QP
%4F3_>p"e^O]mUq`d>me=M11]@i@"VQ3.KqZ,P(;uHI&:;n(VM6?0kd`<ZCkLMssg"2JtlA,BNL-BjN.KDWC[7m3%V,Drn-cGG!<9
%q![J+oY7\6#^,('PQ-hnjB^'oA;b$jiXOMI5r@og3tM<\RiQjirhGI54^P%+mdG9:kPeecEUN:<)X%*+VfD.nFW0HB?Dhf2mr]Q3
%ra)LBmdG9:kPeecEUN:<)X%*+VfD.nFW0HB?Dhf2mr]Q3ra)LBmdG9:kPef&$_47$TgF!\hmopM-_7\PVT&4l_WhpJGJA)0@`#SA
%8ne7"E1T@O"jd%2%uU'L@"$-V-Q)U1774>O'%E8&P9?b7cWYh#[*ugI28=L."lpZ^;P0:9>(sP#Y.eS>B1tQC!*nr^;e%s*W%SW.
%=?-JOdB2_'<#R)`=AAe,,CM:+'?\25\eEV'GGbdbKsa2%<Du[6V[5J,Ee8;=rR<%JZR8TDK(N#^<[]cF.E$@7^!<$tSNu!Ol)EWH
%7<s'1Z,3m',d!^k.SqjB-`!Yn;t[G*AHB>O/%7OoK(\IjdWHf"'QBWu6[AA>A3mOhJ%S>T3e_<Bc-frg\n@OSP`$Y?W5WY,("u5$
%]!H1JCP9H(S@-EgPQbP#nFma&!d>CE%-[gdpP/9u7?k,bL^E#M*ALJ+e>c1$!n&B\mKk8/\V)_j</:_,X/=J_ljRVp\cYV"K!R.P
%'kIT[$ucer_-/Qn7oWp]%-[+=c`!7WG".m%=[4;jedJsu;W$%4m-h:*q)Y<^l)EW(o?8X>$VI^F$F8TZp$0eH/$-b?,5nM1V_$X5
%Vo_%UF+U]4dS#N,!#OQ3er$F?Uh&^>cs:U&REq7'Te%$^4#AUtPQ%=;e-2WUZJQ8W)&:B%(K"e+1PEs-\J*U(FTH2bklg3F3"73G
%SsZK$Y>HX.4*;.-^g2M[OX?Bc?-.P>S7e@+W_&USQs$1hl-$faQ*CDU,19Zg$0Z]*B=oe54M*;R7eqgoEXm-Hl2FK,fcW.Oj6?d3
%%RAY*XAne!mVdMe%E\`lbs;R@m0Zf]3b9aOT9WB2rApIL0G?5i-u4q-:(XS"(h%+(Xe;g@/M'&3!d"ms$-XUb_T[ZgrFj$WFLFVt
%[t;2C[.G,0Z;73%`d($:ctf#l-mpC3XIL"\3AP+L2'KA^m=hBXTSkdB0[E>XbSB7KAURP%qQjWHNaSiK-C1e<\qC_1;C-F;WFpku
%Ql5#H4I_">l.@"D>FiD_7r#?58!<sZ^psNQQMHc5$O6g"UPq,'.VBVn%LH%1<_-jSSH3$3R9$#h0_;gto+RJ5q-Zis3a=8-%Ac`m
%d\iD6#J,e6/PO="M#?%n,HT$Z>74NLRLe0L*ttH(V-3L*TIVu<@@Cr^RQ3SGbWm)H5G)4==IqlB3PK=PdRBgMS7epY=j)2I;F+%i
%^*-hsY_fCoV!"o%rfuT`$NcmXe1n<Dbfn9qbm3SIA\n.r2-7e$Qs(!PX(8sHo^#SJB>/1FbUi@,-cZ36<YgKN?#SgS=:K"3C+RW8
%2^P!q4YVYj3#?"(1=&Gj<idPX@cDrmPDb1sSpt&MFb1;Y4a..(YB\"hB3*=C#adJ'-R]GbGr<N!]kMMm,-Sr:K![RE1!+k^kQL(+
%Ei'-lT;_LQF/tKhH1#<3$'6rnDgo$a;-BZBUI%tX&nuKgjpjWebb`$0bS`2mapH-J04#O^)cZnG:Nll/f(oIV;VqjU'6up4O3i8q
%54gWO;0q2Tl1@cjC'me!egrt.!U(NdR?_g\"X]Y*;&5)tn=o1l+Wj]VW'jesIg)c'Th4e[G*)Q<0ZhNWV./Mbca/PM&Hf("-.;B3
%/6rIK<:mt"lEtZT:g\c6A*/&kP+35J$IMWED0afk^Asas-DW!dAY>6lFJ**@8U[V/YLXAY=(%K<'?U\8!(b("G[5G<\-hoGN:`)Z
%r7unS37!s_rQqRo(LU/%P^#MdN'O6F;X;;SSd@;Bbt'?:IGHrWA8&i*k'X9!"_L&'Jb2?4%f"&Y#a\Y_-<<\;Jqn^iQ5\-%'VJ%g
%#?D)WP&d/+!:u1AjDT=%TbK[',2h/=mPr^E<4E"[/(B6Z@d*s@C+L*io0Hp0\Hl+=OD-$e:6Yr\+C0B:-#]8ZQX"Pc^^fF?6@+2(
%9t_&#<:U9[#>ldiNZh.g'hjm<&pZem+@fnRo[:o8]DV6/o=Fk*b:^L#;LepOJa*]DYnXL9"9"EJR7mOp.Q_LKf?1W>-:D`"#ne(.
%,J_4Y,2C@loob5mWIjcEDlm-1JT<HpA'$!G?jCjU@u/V2!_b:HoTCUU^'#Pbn]6if7un^t9E'4t#gcn,)5*!T.ajrn1^!]_$.'ml
%"#G,S+KD90Pgb@`JU*r&-CF%g,>&+g&<@hrIf)TV*Bu/i"fjm_8>2r]V,O%W7qX:YL)sI?cAC%*L1W,Nq'jNEPQLCm+C=SuGJ)t,
%q0L(CY.-g6$=a)O8->!_1.SGMRT.eVr.29BP_H'!\gZ_MVTN/23C#54,sYd&KNDK*eR.$QeWj2K/>4!1M\W1pF9XR]V4$Cq1G)$Q
%4"!p%b/npM#*[8YgY76V=K*FH"M/fjlWmTPP5fqHrk;:(&ueEo_H5Eo!)4qH&#BADff>=D)FN\!Qu@t;)1jR6nq-E^5eQsYCT_r,
%^95"9i#:)q:)jMeb;)]u:ejf#/7lpB6P&P#c<BKQl5:p<OD<ohPk^(caN8X3II/o\^@&SuYJ:&@]<8pJ]'BJMTO('_a,X'mQ`L:X
%-!rD!5TW@>mTdY)<R*PSgn`/ZRG]Ag$HVOO\FHGchG[]=h#sqh<KN*0P,0B")CS[a--:e5#E%/Hls,69jjXTNZbUtcgVHRX<05%C
%o&O/Slb+ZA!pbgLWNpUPW2XHnr4/5h#Em^Ufm3!bl;UMPmi4Xq;cFDcLWG195^B,T'Su4)hp"*p?a#r;^A33Gq^Z%hY$M@/=+[8=
%O'jqQCd9`?do]e=]J/u.MS2'V43sH*;I>#)1']VmFg[kf8AY*#&)?`lEntboTG=Cn.Qf"M7J7*SCWT?hHJm#h-sC5\NV0$92,)(2
%+r=Pujj!6!``mApmC"TO\(u5nXT85!KmM2Wf=h&bAZ5Zpd:B!/I*74Hnk0BS0H3HmZVt;TKQOK8'UaTA2r"P#n,EABhL>>BGMK1L
%*I$:YqpoV9obJYbSjN3NTLhSYjB!4F?rcQ=.@RKIP'WY8]FpZY]qQ3AhR[jA5eQEc]C3K2SpTmfcb&YW9>KBoW.IuO$J?*Vjd_oW
%ae))F:DaG/Q.XP6>%"6<U.X]ZXC4FO:VQ:0n5;LY`d@.Ld"h%slU)a,\,mC9Kr6-m)m=b#$mu4)=TLRKr.Lbq1PpNo;HdYpKge!P
%QoD\@4_,m:hL1GMgqN6kqsNWihgO86^a`0;PUr@*j]KZgJ)g>t$pCg?p9GAIG+NX=gjCWKN`G9K7_6H!q,bGW>IT.R6hc%SqnDql
%nr]!1lQ[J`YQ@gdhJkW103Xfqaul+moV/fG0iUZkJR-2X@qUrcPV^4i&Mb^iKpVN8j@;H2^]P\UR/B05*d@ZemfV!"n(>3OZrDV!
%14$oZ!Lb:KaAAu/).th\Ze0+/fjN.m1oXD61H-KKgMXc),lV5F"Mb6ar4$#C4p\Y?,uS==#85B6hg+4+P'e0?H,t&(8qK:3Wh-Oo
%A92BlVb-jNnLMO;\i.I="!T,8#<qk>`ufWk'68NlPOe7j6\8=#DVof%BP@WL<E(6I6`EcQ2MYn\+/mca\_(a5g"]`8F&]-^(qLV!
%dU.jX\*gclSe#\q#@8&(-U7:g:I!(he"7D_%k1D^1]tGZ)Q9T+SjOq_e5lAjpt#es8j1WK583nq4-S00R.kLUrt1Cg`s&8HI,m)U
%[HirF*r`MirTHc>qlg-M^Pr".Y.Fn$:Lh+JBJkrHn-AY2p*Fn)P]RY\&7F?!R.oDIB)]32I/&iMIdV9Ls88X!OR(<?J*qBMrJWuf
%dK_sVIg+=I5@GspHo7(Mi28R7@"pIo*@nbHS_i"UZ$uAXWLOhQR7WX8s2#QnHgH['*d\;t5Pk_2=p(UY6Ln2s.#hfZ=!K/Tp]Coh
%=\\IpfQHUUm(<C0*E%C%9LsBarLn)F'P7]p8&+QG(E\/)$+h8YdMF#&Jfk4i'@8hLAA\?sOh?Wu)+r%JYD\PqSl<H-k;r9@&\H>Z
%`_IC>1=dWA$Ke6-rf$@;YqJ9>`0[*DngRg>55CHs5Og^pJu&TrT8`V.DM."]bSrodaM2l(*_DXT&'S\4ojYrilM;ZCY[=)V-qXBT
%$M2^WJ+dr8;F!G=e5sEY1p=*2or0=R,"REa'i:+lNQTVCLLH7F(&YT[kJAoV&:;p'kV=1F=*"q0e=iBfdL#O:?hiX@:H\I&<s@O6
%^VT7%!qiN?^\l$:*ddO#O$!iD+2*/.<-7GY+34l0*.!IdobZa&?Rog+\MSY.E>Gf$j'Yr3DF*Q<q9UJq;jdA\J:-LIB:o.b2kPN\
%)*eq4:H\X/(PJQU+AbTm1DFnD)G).J1u]kiH6=.MP@:hkSekF:a!ef4:[Adp57!XK':<-Pl>&Z\c0([FT%A&04o<G^SppO::O^uI
%IN4M(%)(e/QpZ!AeUjDCkQ)XjLSd%F/'ZRB7m"\M;0:'*2n]IM.I8mj5GBj(IMsW,s4.Q2Hs<`i?MMh;cTV/bD^`uYJ+hhsOeEl2
%k:Y<3)_d%f,amSkWI>__)BhbkaOIO34%@VE:>U@k@HXO0Q6Gl[@6XSDo7HMEho#-C^\RR2hg59kcN*/B"T$5qN1h*ZZ?fh]"OF&r
%5s`g#cEe=BqkACGP-;ib_63/&CFJ@UO+1;@IclF"&W#?ErXXJIrP')GhgXP[k7m+r.='ChgHTpU-2>Z+m@5Y>NH9AKauIl:RFDn9
%P)T*M<U;JuPas;s-bgu^TDt5Ho(tZHi=CG1iue<bLHkS5pV-A\074!iTDFF#oWNtBgE3_`7)<AqT.&oN+<B*S>,m;hB2:'JWh(3t
%.e`9,Tq,_l8GsLR4SPsrJ+%_Kpu.9`nl&dXq8n[#l$$JGd=;,Z-_L/H(^^_cmp:sKpY1L"$CYdn4HL=tXrHf]^nkHbZY*-2N-5pt
%#!:N6o[f^\mQ5spUS%JVB0Z:hc[Yr#TDe,S5Q9X9KqlsY/!;8I1#t'Pm^ugp4NolecqE73L450ScfR3RVklN2X'rrc.&j,#rB:fT
%#.q24g#l`;/mo%/^\`AgrpJr6qrplZkdS>"*#U4EWZt(<J,?@WgoLj?,q0A#V#e=5cH3GXEMd.iMijt$m<<TXX4Tj&^J:bXs+`fN
%PlL62?i9I2^\ET!s$q$mOr"T+o&D'AN-J?!=d#qnJL!&Ml@@amkB-RuM`K'>N'?_s;br?q&US!M%tF.G!qVbnqObP%orii?$NU.Q
%&'.Qbng\l_d+b4d2dkn29WnP)D9t;g`T=$lT9Et\9R0d#A@Q]H5P[JO,HR<-Shf"S.=L6GU7L3Ad8,5rR(pK1lX0VMmsk>CT9,`r
%pd[RG0GQDR,TH4jkN339s%#+NXj;,Le$LA[Fh$=KQOY6?c`]P2NT\%K2rFMKO8nJ-J,bF6rT9`%q_/!?gY_r*QiHQ!5Plld'I2ik
%;,E[KL_Bk^ApPKeH")Yco=QB>o4;u5S2r7DC1P5QZ_u#><)8Alm/6N@s3&1VgV<^QDh%@CKqUa0YmC=j<7!:,+NY%l"2;d#l!sko
%?/YY!Va$B"d0nk1>N5S2DgqSes53kQpOE)?s7t9]'Z&+75"(obfu,_<5c]aU/=[)-?aGR[U:oN5hJiGq3</r,s0)G)SGutVT<eR%
%34F+Pq>-Y$mMA+fq-X0J^]42GrQB,pc[T-ZkFJNpcVk`Plh0l6Un@Z8qC)jO2\Gq*I^N8UI,")c\TaR1mP`q:?&eU9rq;u-G^j.E
%]Pj@hG^mj,kJsUuo6DlWbOan<ebo6YWQq+hE]pupY=B\+X@LTUH2fULr^%Br?XZ+oH!69CU$L*=dX$#U.BH#mD11;6lhdT&I=I^J
%'%ZfLrS?AS!g!"[@#B,V=2iJXrDV8Cra&gdO1q"SIF2AYfj6_E`a8MI0(?.jaU0\eL_rg8pQ%O?_iFH=f:Gt7>dB^Q^,LE'd!T%[
%[m)N$qt'BXrQ0W_Z"/?ITof0_@=RkEkt_R`fid"#pZ?2Sg2)8Mh<iPEm.h#*m!0'dqEe0NA1/]VgQ!BTkU/4N"m$9o(1sjG8mg$V
%d\e.dc)"@DkP)JN.MJ!T,i'Qua6fblO1rbR*;5gc^]s$n5NMg")nE.>40_$0%_gX=V.$aSrb-Slq;9f76Y:4j4*5(,%-9rR6k?)C
%qgH#Z2?%dU(k48WO&YIW^Nh[)2pDMPhTC<=(%WQb?M<hhl&'RUZKUN_GncGA)FXW'[pJk'hf&\th/@dI2OanLetUK$LWCK)m(.ZW
%47D)$l4:GH]V"<sZ&NbW^mdR,J3NkcoABAp$bX4H4>uY8YM9P#q_"ZB^#fh[X3U2#&)":=WEo$Ih,=-:5,1BX$NJP\hgE`)9>\kj
%4T.)W@?5k\ia7:!V"g9/hV#ZNG%01Y?cNbN(qO!5_F-ndU/MX6]4[a]L+'h1e5lV`c4D]r5'l,"ftB6:f3Pc/?aiB>@F=IjEUnor
%L185&nc\gAj%k'aaeuk=*2$Z*Is`"1cS%JJ*4>Eg-AV.Lmo"'pp4$DQUn5N8I__G)l:eCA731ogl8(dNGm!o2cTV-W(Q%db?i-;&
%PC`;pM;t(fKNk>Qj9;f,<.=;&:Bp`'r:=$REk(/C#TcuSKSLZFm,nsLGiHnRH.&iK56:f^UD?CF_#3f5-LFM+GoQ-d!]-_ommmq7
%1A&/Ie5_uh54hFVk^iA!.H'_UJd>cH"QjPCr4pQ)3S:OZ!MllSI4=$XL\T8BA]/eVpsJbn+!mQjaC+k_V\hXEoF$^o!9l4gr7kpL
%K:(H722D731G#;`_^aHH2N4je*g^Kc9(9f3Wkt7WMKS[MRm0.Q--ul<,YK6TN!A>aIJ!-'7m,'@LC>0ZS)SEJ&t@m#m;DI(4iB:#
%A4?ZAQ`$dj`A\Ydf(eB[IuOHk_`>O.a<M4npuV[/Gu#14]\;A7'6^O8Dm#-;=+[%K3((t(aRN^@r@m9N#T/'NPFqc[>S#lT;kNu@
%`JYVdc7j/nWE\kjY;7)/nR@JnYF.[,_+t-P)FIsZ[L-h,9`Q>H7;;jJL>N<#;=+mDkT2&X]`3EK[B\#M+U3;<cLVh2n+1p]V%Nb(
%P&1;Up*kp]MKbpC(8bBm.8"o)b%F6O%1cW'K8:Mk]ShU_mjn2BF]>tJ&=M];PU+%%q&t6rPTRcDTT[=c*i?3tIRhPn?rBA'*WSaU
%A3nA_#E>4+RA<%='g#&L6Q5?A]JeZERd+MoeOA`^8\PX%s8ENqp<3lt^@2&aE:X\&Yh\t]c!n4(.86$EA2$[-`KZqd-j%\b"M^CE
%;roZ<?@[on^6eXg>DeZU6-N`RkOuS_$::U);Sk!4l7]>5b%Y!0S!-ge.c!ScQW=cP()!!@5L0SpR("?VPdUd^12H9[]7KWB<B=7(
%#=FC)NRoJDRLc8EMcC7#Q!e6]J;a5G9*o#Q>nN7o-#r;m9ER\g,'"D%.?X]"]Sd)>G?]BaJDARH5YYB4M1CpEjk%`j(,ZVA;=NoC
%'easX/76fQ.Q(Rq=d?JQ[Y9B'Ub(Nsp=l!>GmgqY+nKK2=F%kB%<.bH[@4:DAh*"IaT"pB9lju"q$bd$<(6Kekm'$Go[_cAh9,ZA
%>>h?`p"(p.bn=$EqE*%$?!uh;SoR#3XeHWpZsVnC?B_[D"_sT)bB2I&:O=+LH'K]T<Z0%"lQr0H,sch>r8\__<t^!])YFj6Gir(q
%q0U"Rbb9J-&sR=clsun>'BDlR8Zhg1LSlgZfHE$kq8k.$rep%4YKN)9!@lP3Q1UUr/,_s"Un9dFhFY:;P,K&:SF7Jae#5&a9*5'M
%b+F1TKa-%@bliq:9)e`>Jc;O9DRttpo@I=I/nXrYk&mEu77fMcRgu0m+Mm=ic<<c3?`?Po<V.kDh8(!DOhGB'^[j)nWYQjbcXI#-
%7fZ(\:7rNeYbl`m@@j)aAesYDp;YJ2^2?t2nWmF7_IAqN&3c1^8Z5]tRgV?]@<i*8-5&p^k/F;2,ur/gb*`K3<St&`i),7,\[.HP
%o2^EK9U6=U$.Ku08^G$>A`YZu6=IROAX?:Ph5%8&Q_D'0?7BIY198rFWLRa-Il&\B0cbt2$;99BWh`DN![NJHeWj0aF@E2o]%i\+
%ZhA2:F&IM[R`nO-PM1S]P:F;+#uDX9`mQRd-.KN!9E%A=<[;f*X/(>gMhPfE-&5MD2m8;>DmLY:\p/:&+*R`92p"rd.Wa+o;8[To
%=s1lV\>(V:1R+l+.i7d<d`A!Ej)R$D?Kqu45Z<ME640[,MLra@<c)O3L'2dYTsWgh$[72*Wm6'CL\f8!nnWe_W%9g%/<*=,S@O5M
%b;V(aWTfdIehSn4VUMil5;&55\K5oTLJB?EVhM"O\$FgK'p]W2$<?kIl")9"^&7HEE]Iqg1/1cGDcnOE9uZ5[l=&;0CT!W=3RFc7
%)D'\q<R:h@TJ)^6(^n9?;^o)I<+aGAM\fbrlAI%On)l5mrnI[MkEgM^N7=b/BYYW][5Kc%,&!W+c!5i\<R+1Lp*rE[afd3G0?jWU
%1b."XcNWf]Bsk[a;Z-s!WTHn<\c09[d4jf4YY\K:;ka10(A\?5L&sP]'^2Zi5QQ.-l?k9sjpK<pf'@bdP7B]*r>@B;,5Rb)Dou?2
%h?pF2)DpMu'%T\7JuV&QGmc<Mm*AKh)U5ma9H-R)kp2Bp8PC(0PUjIJ3@V&"GELM[bX:R[fKWoDU<EL&cE!$Ve:e)Neik@3S9<rG
%]e)a.F4Q%XU#j6kgR-dNk"Q`Y]HN3@O0ROr$M'1U)peB#1"/l[9Dr_i/OUA*:-6Ld5O!*]%;mf.OOjZbp,4ELf/2KT[Z*;tIR,lQ
%Y&rY`YA2%_gb>\62EJUGI!onKZjO-;c<4MLh>/eh4?@%f7f%kp,jJ+I=)JaqhR$52@\]k?jsn[,Ans9NRI$tL;&.T7L/t/H<n2Ms
%TZf")c<Z.7VOplQ%sIZL5Z>"ff1ilES[[5o9\Y2j?ahdpl+48IbSe\/FOgG4ee[]/MP[MIG(j/TE,E!?>j>blVmXbKGd2nW/*?f]
%(0#A^BPOl_dUd?prcN]sK:J^,2VS%\5M3)fh/Y`q=-g:KIlq0(XD?drA`9F&i4=AfFc4630_a4,EM3j&RP']$mGh)g`S=e)FFsGZ
%'f-XF5os:[?h"iaC<jD*rn3;@.qbtAX*0ac1MsC%Kt2_TGG$IW2%ro4C]O=Ce5LG:<3tki\^:BJi"#]M=+SZN^/k239@qeDoX-MT
%Xfdq4Wdd(s;7kWYp#(l/<9o:lF.b%S?dG:OI][q[Y'-_6[&73oUg*L=?>-.Hh!]FoFI0GSX8RKK48pk>qjhgUISp&mG5s[@q)`Lh
%]MepoWn6j7A6-uPc5Jj<]j(Nt):54gg%2B"kO.2g](F93GE-^hbS?L\qg5LJ?0n(e\'@0]hL^.+h0Y$!9dfMN7caS\LOSJ&d!8ji
%C%(koId-Hakpu/L'?XC[oLhEHlCM3;G2K"nr44f^b?a[G;dHF5kj.[.2(KKS\t<I3q1W;`QM^KE<r!E1l`U*J!Ro49ng*hWK*P0E
%I"YLqHTrXH50KW\FC9rnVfFu<Ip"`H,9PdIE[o*,8;pPrj_Tn;o-SWC(h4*>G:^#+n?bAiA>]MllE`rpO=R5<S6`++3G@IfcU1i$
%>!r8+?-Yg*+,@.HEm'A&%qTnmcH99Qe"^.4"(kk&Ksu0:bRWgZX;lo"a7FTi9377AUN"AD6B`(0oT+^dHKt*Jnl]8K&P*QLVfr'e
%7/.Yan(!1M]kW>g%i.E2-T+Un'ftIJO&fA/Fuc%m54iT=jOFT"K:%\5R\,!#MY53K/']#*=&0G*]aF(o"1n&3@^DiJ(/_4U,du=r
%c=SG\<BN.;],c,S5OPTWH*Ef^\&ccl^^6=0+ItmE?tUk.'l&GBEmicH4#6DlE#+bR]K.pS3]-?QTiJI@J-f]dH1h[.RNi;<l$UAT
%dco/1s(sCo*1h5s$tOc!j3B$,T&R;HB?lW7%^eEs>`8@i`;.fH]:<a5,&em)l(Gr#W^B)^6B1]/<J9U1b8THE-sm,&)JO=LX;t9/
%_(K(".u]\`9QrWEp-kN^>9U*ZZ)s(k?,S\>=BN-28[^;C>i9]RE-3Su.h(du"*`?:\%B,5JR?:i`V%Wo9*Z:e>\BV8!cj?W6GJb+
%X#&7j"/4n&X8hb]QVTpHY0VaOlc`9e?p!1@*O!0NUVL75\a%^Ji4C(5ra->Ys0q0V(T>dbi)fDKs68#fmMeo126\slg%DY;]r31@
%pD7HCCNu`na_/77LqNEtB=cC(Ff&I>pIkM*h[Rm0^J<hEhs3,ErOktdgu%EScMbFOj4rPX1sZ'5rj1NFs8:pOhgXqC#B)bInDlY@
%*BaAk48g`t\aJ%04a>!LLCRX=khru@VDiF`I*\L=>o,G'k;Sk_`f9lV5D3Xt%ui6\m>?-ck;RfNH4]W-r9sKU]+5pHn%\nL_/$*D
%CGr>XO3Q%Yj3V[#S&<SVkOB')A(SmgJfC1SrjV8afBPS(5E,A-)[7*::<Hd$k;IZGFRk'%ZPttKGA`N"G%7CdK@Xsq+LcK%;grF[
%>.<1DD*K8j^//Jj5T]#K#Ii+Sj6#Q2b9-;l%9F4PQ&+VW5&N9,0NotcHG.^Mne07BRn_?>`Q@KK9`D*^@*!h9i@2N%\urb[fGm95
%nS;TMn24W1GU9^ke*:F_e+ZTLoPMBLEHCKZ]P&BF]0S,N'`<]Hl+p&8D;\^IJO-s_fOH1<#_:G!RpGB44r6,t-8TjF4poltpG5ta
%fu;7.Q<u>?r*+Y=6lu,$rQm'T5'Cp<)?#qOeS)j4lrq*'D7Z%:.EY21q%-bqKo>YjU)i)@H[KYF%/H<"eD$^=J\o2=A-/Ch2hsBB
%2g(Ubr#R:S(IqBW&OI4)4%=S"h/m(%<+1UX]gheP3)\JoQ/YfUL/$jZK;.UYV_9&o]T4ILm$h&;iIXr3jf!_"?5:84*8A1bhFH%1
%@@*<NVSp#GS$iju%8AZ#Kn^6BLlDcL],ObT#CL<bXHO5A65Tp*8l&'@0e=$,)T'i9$8;gll+=+4:#9RiauhmTh1['AAmZ%%jF]4L
%a$ES@3/AQ-1,Q#d:8WmTTohG(.4#FmU"<L88(e3d>C2/G!2XNoeJ0:dJFf88D$annUD!DXg=nK;Wc&<^hJNm1nLCKGKsCuZA6.*/
%,Ec&!FMu\NM`CT"H.-@NXlo/p&=-I!Uq&LqENBG?6VWmh,-;OO(dd.T%;,[71_$9*EoKb?\)N;TUsIL3a,@URi&de-X\-B;ISL#0
%-CP^=Y.CU_JK]N$cJurU(3e9C;1<@=OE+DY&@hXBePEo:b(KS=X$Z;-JW!Q:TMm?bZm&@@H.m8.gu]d3;;\l0HUWl]29L_iMcfgQ
%q%?'Hnuark12&TCd**nJ+4>4"CPC4SGPJ%t;K$,;7]#a+T]E\Xc-M4ZlKIkg+&lHL<2#AJDs[]u<K+a'8R&l';3"uj7`F<]2eQoH
%c8TI;mb9"TY2`2#g+#2e5ugjfNRPX49M+r>dP.32N]/uDk*X_9Ho7\J7AcCT1CljD[:SK>A'gnM(!WcoAC=lT<(e.>e,ad-8Qa1)
%&OIBaI<>>)ED5DL@pL6Wj$4upY44PNVGl'3:1Z^\@#rF\@=E3dab&_:-PiIo/$74`Vcq8r/0o-"=,?edWaFK2T:t'r--B?Yr62q^
%cko$?&:59fj8AFJhec+&'q?H4di;=#B.pDdqaV/;]\qi@?__9n<lW;AF&BXi'72'X!kXEK0fH^C@MhWQ]M2R,QG$%-Y(=RuU%A1d
%L>l>7(7ju*I`=oR<oski%OJJk?^BR]c1duJ5s`uAWb5uREG)^IIP2p^l+7G]0YOISB]J2-C,R#)n<;`;=DfW_o!__.Y!QDmnuEL7
%HN3n3@$%#Y>g:9I.Pj-ecgmGpD/2G#,3M#s73="M0F=MuE2G$=VSN&^0F4t9KVk@Rk?k2<Fhs'jk+?Q3:3FnP45VYYX8nr`bQ^q'
%[2:9T6'Q@2qJOHRYt9[[7>rIhg;sncR)6kr";/Un`H!sVp+^DB-:F98]4(]K-s55_/&\]4ZZ.Y%fX,_doCk.)DhK.V'r+Zi;5Q*+
%L[19C?)IGWAApF!,CZ6]"al;;!_([MBD+ug:g,SGSLtt;.(VKLV]fF)6mZrX;1ckkD1fY0*QXulou/J=<BbZ_-84+qAfa@<PgMEq
%U$t?&^%K3h>>.t:1)NL58cT$Q@B_I86ne-4M50DlI+.!Y$.Rui&3A+a1:3QhLd:8\H,46J.1(UY<GL.5q>k.EKCUXRSN\C4`4he"
%;\jZ=9ML^hM1_u1>n!.REOh?Q'WD(9M\VI1A9j+ZfRBdHrLEh$kDcHIQ;GO97kuT<'J#Cfq[T<Am>tHqMj$jIGY@O*I^lZl72BXM
%($e^b.$d\XO3EHo>*$M!_K\h8*HkFpWfEX;l[rr)quLNRgQ"+djAfYj'3[8(lo?<-W#>9=hKe-ZMqsas*(=?^bat#\hO1s93nd%S
%(1(j-fedhc$qs0QN\'&nqPH#&A718.CpkBHehRMZ,>@RdoQf>O:"IQ[ZnnTn%3Fs9S0k,]3)!ouYmlB<9fjR,_oLH:@Ma`l?QlRG
%#C(J-;h%E/]s=aM@VrIka5k!Z153552apTFgA@,cN.^Q9RTB23_aF^KW0G\nJurmn)sAI;WjNkSh5P6:,9++K*Y2j7"jq4]j:/In
%n6cVcd3_c)XVHl(:+<PWHom_+/M*&deE8N8HUWLp"9G)6+s-m##91IpkP*_7Gj"I*g7;@)a<PVM12IVV:<<3>h7OYC>A6,l7'i@P
%6ii1HNB2haXF*9h+U(3]g04u"pl1cF9]USJ+%@8h@DIgK*/`/<Ku+(+mJ"n+[g@8lO8@eeO"(,>2YlcY1q&72RXVVh>ZOLT;tgS]
%/cLkV(LH<-%T,/%i0*M1Aa\f1:sNL*%Q8%Es&(^6H&1Oo.DZkFoeDJZI8u1S?=t`*/pN_&(s<o;2qEt%SuBH(YoR+mPO,Z2T\hL_
%A0#j66/Se]<8_Vc4?9\O1miuNd^ZGri<qqX>AP.'8kBLs$[nrqbg54<=7&oCQE9-jRSZC,K),)6@C5ujN5`&_<9:q)4rF_$=BZ.o
%H83@ljS@iEXJKmJZ?OK.$t65U_U;t$c-VAS9@`I!f(P+^;J!3&SUqj>UBJQ+LkDeld+q$>>.aF^&6bpX=\+GAADGg\qF/l\ZBYks
%g#pGh,\qdtpkD*#g0XLb!>@Ea8mZ2p3ACoriEubaiNCu/3iRCLDE1H)"W4NAoR:hME&%R0brNEUjr*?I+pO,l(sUHZrJ&)gJ`BZ-
%mTRh,n9Lu9"E>9uoN9Se<X+(mk>m3HSXZ%**a6u&Zh4C6!W"_>[/i'^4'O?\XI2qTn!h_Efua:BgO-DZ*co4HK<pYKA%T:c`=.L3
%[P@ag5q-7W,`X6i#5YADkGF"<K8H'u)8,b^:N4BuU[H6Y?Hl%KTc`nZ\f*!1fT!>-U@^q*XA%;Fm^?uG;$J<pJ,leJMX%0MriUH:
%H*,o#m?6g07:XP5$]Bcb#_#G<QBUOgOQ$JklI_9JGe9kmbpVti9Z)[FGSgcn1`-,k6Q$Ln&![E,Q!Pa'\\j]CYiQLL@60d*XD9NY
%(CCj&jp1eE[YmK]]IaPE)SiZ@.tSr.@Ka="E;"&6b-W4`FRhJq8Ll!n%q'um9%>NrggUPega.#2>-9P>pr3@Eac+2;^6Ou9l!5P-
%*MAccda09gVC3JQGRlQiO3.<R:_$4S%PPkaP#kFg+#3R-$60Rg3>J8*0HN8-?PU3*RM"[d;B2$#Xu7o0?aT$VXGB$j,i9r,fQ715
%39kgBSV"<UjgA<^Ftd3P05AjE%@ZP7eq3>?AeP)IT`5-fOfG6sYA7(@N(>/kLeb&oJ.;@U,*fTUETkZPBWk`ficGeG8u2-=Br3[R
%b0.`O[&U*ak^d3Z5R^a]a:uib@t)d\=?WECf[4o6FtWR/j=:`qWCb-E'kUD^<+l?<ZX$b8C=AuL;qHcJHW`'SliU<*H.NMIqIuqP
%1911EYVDeD7D?ms4=C=LLRp[`)Zf(KpR&GeTZ0dVE>FL-Y63.fkcQ?)p7f=u==+BI7fF<*/ZAIIR=Pp>7;"sAQ15kg0X7tKK.i_=
%+,o=,(<:7k?oYW4g<k.VJZ"F\P\6k#`N8PMYO=DbLPba21!JE,+=8KHJJt:tHj/gEr#RWRbB28b'F-QX-s983:`l=^BSZbhDk/LL
%:c&MhNc^><JGK;Q\)"rCn!pFrJtpsl\5oIV&B6FdM_okg@crp3\T,4Y,6VFrquF\561ns-^u<Hjo[+D25nC)WI_2`DDtD]qPf5-`
%*B-a!8e934^]LiU,PaUml,FmFIY4@.M[2/nJ;4"[;K6AmJM<&>@b?LQJDu;iSQ*uqp)Miu>r%&^iT^<6T"t_MV?!r.D?htIKIJE0
%oak+j3l[ZMQ";W)3U-\6lT)gs)LNVAXcp6P-inmm(Jr%>d][]I803!-.X)_ffYGZ@bADiOYQm\O0*m7tC4*Ka=SgO'd>"h3LrG+.
%%T=\H"\o3%31u)H!/c_k;0g^6G\suMCVYQ4\$`6s19*`,Ki8^Tk(KFfks6Qfar=1<D$24EcTN?ab;B>glP5%<Q168!YqnmB"":JE
%j2%DC:qZ?Y@)TH!fFO^fUkIr`gu!*p7\Ge4l1(E?,>a"dfietth^4acA\3ti(9.lD9TQ$_CXNt$^DAmX)/WS(f]XqmBbV[+*Gebb
%`:8gk2j!#MoF#PZ<)II?EBf-j&IjJ!@l3/#XV&Xe_5i?l6f_b8[tu0J5a0r5ZG?6cE(9U3.n[jL';*H)3\X"-(dk!sM7J;a!e)h2
%_ZhtB7h"Y'9n;FLKDBa89nRu),L/^u*T=8>A?5tOOpG?HU"fo+fB]A3hlop:0#:GRZ%bTuU9Q8(N]ibamtsB1&;I8$_PWnU8TT4`
%gU=r,-P>kp=B%fC4n:5X!0cQq%lM$TaPM.?1bpdr@N3.dejs-!T*]AQmWp.*7$o.R35qik4.Q\u.<_+G)0W$0Ht^`B"FgImO!M0h
%K]5JT1*'Bq_B-4)FG&&m+VDNH!Lrhl\gNje)$:\s8KAI6PTqV;$+/>nV/;bM-cthn;XCB,9MVT9D,*ip&?.i[crm;)B/[JN*3eZB
%9h`Z#+L[6Y;[YDo$.oKL2(0&h"hsfBAg`/nKDc.0LS3iT/jPep1ne$/6:L4i49L;W%GhcO(*0^gU9Yt==9t!Mit&J[3[SFjD+m'D
%1h%-Q6K*PP3eD;9gNq&+J=DA4"JPc"92d5f57,1;oUE;A*8rN[8GFQrPGgsN>?t!!!n#ENDHfh1!_#&eO9b]0:eD2=bMnYC$P9qI
%*kXC+YihP)jsiN$BgY-VB&mb?OE(Am&(01>M:a!H3jcIX@Z/h]W]JjK8Tk)79X,BdR!>6jP.@#IdpkYj["/EsNi!Z7p/SP>Xfdbm
%i';:aV]'PbQ3gB]398,EeuCeH":a)lQbt6*J=f4$L&*RY65ZtZ_Gc0IKDZt,NLGU(Zf_CA@r5R$>KSMies>%po9Tgg^61,D9sPFa
%pM-.@80V_o<T?P,%38=UQuON-'+bL#'[H_R+3QJl@o02PCVW3&)$\_3JZb0](p4W;+DA1ojuc?-5cLos,1!gP\!D-0?A&n;V4TNB
%(DK<JgIE`+V/q_P,6g^s[[$$?6\?9*G@[q4d@-Z0@Ji/ifOk6t@7@A5Hso).KKsH3Gf&saI.<RG98PgVTQ*P"d)DHdj<gn$PcW1t
%'TGH1)[M"d:+2@a:f2P0%V02n1;hkFF0m#;-s<j1:o8AKe%fBoVLG<oN783H#rr9dXUgDYa;\M*9b%[=U-9i@`]tK/K+XQ)Tu2G;
%\PC.+.I+BpJS7W"@^I>9D7\kP&[Pq2-dDm$XmQe(>-faN$9?8Y7`TlS/OK)Dr#cl<1jCH>V+%2[JMO$t*B@:DieU=,LdGa#3NA.4
%I)0D:KW(r%Ymu>&/k$M)&L>mmQ>V9VW\O"M#01,CG1^_.4Z"8kF<q6uJU=pp8<s>bo7bg++S6_8:g8YK=>WC(PDZ<]LoaL$'j2./
%7c2;:`G$'5i`2^9,KE+#J/a<Y5t5uu'E\J4@4lKM@iQqpFHa0b<4j7BC-W*\8O?L1:(Fsr#YdcVg]bu?:a/hgj^jhU=]%6Ve*T/j
%dE`Br/mGqkj;*7gF1C83L>4=Djt0B0;C5cfII(Q6Y9A51EeXB[lI%5?bQndV?KZZgilg4*?*L27&'OD^8$a%!Ml.PMP?JBOR2TAI
%(d]4H(M"HD_b:S6#suE>8qg`k'77BqDejL)$hhSJ6J&?,:>XKcdACcbI)'b]_HO7!Ms7.hV\iD>8U;Kh>Y\_B_)agc7d-(,N1Ed(
%l'W_?];3l\de;.(H;(Tr$#qZ61hG=HM.ggq2Q!/2<7T\,VGK<RLFmj,&P(pJJeHSI`@fu1^uPkq6UQhuVOHU'X:IWZRe=Z_k:S&C
%,_A`(RabU1K([['B"WCa0?f=9+LR:NM!/l^&.jZ5[%qjRB$d-tJ<Isuf(Cju5VKeX9l+_F?t23M=QqR&6'8QO=-VQ^i]q=J6JJMY
%)MEhHC)\t4`9QZ&-,KR8Fp_)*6BkTVKf(-"7noN"e&C\>g[r(5kZZO]Lco4%R0^sn=c^q^HibIkZa.^KG.lTi8n?^!'NrSC68r,B
%0`F5t#;aclpZ&<e;NNA1IZU77j^#\+:B>jJ"ZtKQfNj_C9GB[H[Dor*DJM,a\9sK2\S^-g#91ijcEJ5YEY[XMV7^1[(-\O4,-QCm
%K+jOhXMXac]GAdlL0I<&<V)28)!%V2m@I8=Csg7n"!oXhR*@g`&6HTP(^Vt#0E^N@0m?@LH$/niaPlQ#=n\CZbF4(6,m*=WCjKn#
%,HX@g!(5\4JG8Ce=fL3+1?ZfWn!9,radqL5kc@:mSdBJ*HXrJJ!K*:Q8.G$A0USbu]M+1bZU76%$eK*R]f@T6KF;'e'<p_D3iu@L
%R?9iVq<cClU.Y`"=&<"@cjVq<%l>&)_8V%K/YMIpfnX&M2BO>ZU;8W-m5`EJV]kDl.iNkg2%L(G>/s@''$/6sM[%<uSN.h^2=L]5
%-t3guqI=q1)>"(5G;,,Um]_6]*Xg&ZTmAbE)VsZ"dNiEpY7JXO/q)Ns'cFamO$:;%p&`>&`6s^J's83h@!-4/")P@#!=a"\:7shj
%p'Z7\\uElM!fYR7JTMR2<+,K?;rM+.d"\h8;lUDn@C<OXYJkK1FpnJH%@g98iL(mB7dCTm/ZkV;N%o0!n5;Ne!X*Bk@a[?V")Wj?
%)N[qjR*8f`?d2k2Jh^j'ZF/>JR>mZOb]2XP;k!gbZS\V.HHOa8j+^hG<:]jhep'q#Y8`9k.H%A5GOR=*.QT`$Po,lG%::oFKuaqn
%&`@Heqmk#)N[`]3)YrN$RZjKP^.4u7j;rZ$Tc?YgSZO36nA,;jLp"H$IbnJu$$<A+9:S<&QJi6`"enP9Ee._h5_9>13A%nBrIcr)
%Bkkt*,59pk-?&<G7SEQ06g]XaUeKNuc%s^pTefM8Dj#&7L75`rRE?i$BMJt!At<tlq*9PFEGo_6bZ*_)lOi$LcN:NYjthZ:#PrJ8
%%-B:o'U`Z_8<7=#;pP/,DU8F@,LXWib>X[B@CB/)]t04D'*=#[CBsS7R,Lk/$BH)aof?iTYbOS6+c6AnW97Bl%iM6-X&s1Dl7D,*
%B+BpilJ%I4&X.ke+nWS`EUip`&Wm0-.WN+R",LnMWrf&eCGc_P@+dKcFEQ[)3LJs%"_:kV.ntYRfFL9*J=o>sE(;auK$n,S`j9p5
%TSkXl7]/#uYYc3ndg@['6EDW55+_#2q)0p&IGPD7\/[6>VXS"N<afC@<Y#jeN%,$342eE9Q(1\130$GrS1\X1@=Y"R?'t;H2ZcTa
%)O?-`,:HjO*qlV`Z8UIOU5Q&HRPt53Nj4PD;6B2IWk^$QY2_'ql^;=W;\bK_q,FR\-qn<J=#"AS(fk5b-PWYmkqOCd/PN"B3\rb[
%EoQQ:>KQ]nL'P^ZI$(_oY[!7X_Dm"rW,idD.hg*..)ntSPf^DNUD(kIDKQY/<^o15BH@B8@"GD^kEpsP2N"hr,qts[dtA`T`_NU$
%(Tf*^[K\ktk5%,(e"b3ulXjb(cWeqWkfcJ$7:Yi9%Ot<(OR1E,FqUKO_5Ppr%qgC=?!f(["cYMi\h*)i%c.QRY]eE80Vg8KZo@=V
%)M-FV&PP&HRb\!KeU2cdnPrDQ42pY_4oi1nSZ[mPV$4hc?cf'@;llFrU3/#bm0E<!0LF.?;`8*r>YV79&=eM##'94ZBu1Rm%9OD9
%At!:_rIu'9JcY$!CUBHE9QGQVNWL!FJtaD#`2Tl+(Ar%"*fWj&!PrBSTW&&/"`Z`TlU(7/d@d9RS)7%<Mr3!XF]`pT1]sDB=`;r1
%^q#3o)7l\#l4AMTIT0n.%4F&mjW8#joK)BGTGC_2.A!nVD3O,@Km#L[Vi"Z*Qfdks:>`&s2!1""=OrN/DE8FU=C`bgh'MB2IV8(B
%:^l`N/ZGP3_J'4FYrP[6&riZV*GU0P$5HIcH<PdBOCmfB.]$dN:kY/uA:W$?XG+2)*"))+Ei6ZAh_+0sDY:Bd=!lt7%$k^[:!oA$
%NUWNk@ZKq9(Y"&h-D)#H(D*%l'Hb'*#pGS`<lA;X\j5M4RRr,@ZXtoKYuT:o0\X0j0G4Tqe*W<f'["?'AT=OV:=m7$O40=/)KI`8
%Zp5]`a-]>\kH%5CHl3.Nn7="sA\PGf(f:L+n^tru=\Ff0#)BV6[[!^)kk2U2@)L?o&Gt=L+55:QZ+$ZgQm?_10UTStZ9h=;7+BK$
%@J2[t`M%?'7*Q:6+DT@N<"imt4psjR;.^N>j0_T2D?8"C('A/g$Rce\kVVm;FqKP0l4fbG>PdQ#m*Qu;5o#r%Kk8Rrm'A3%],)%-
%)Me0ded?n1/'[IVe[a-m\([-3N&I;;NlTJ"QkkEOMd&H?SXePTCZ1hnQY@lY-c=XXs36ph>O]VsjA*X1,;P1kM73!`0JT=SkQ:fn
%bL1SM.'rY<g7cc?XDS%@)P&.E``^EY1ioS[(,1p]A'/*&nqJ!N)cZn3c)J,T@a[^rYYDC46CLTqBa3=)T^FRH?)>sbn45I[C,_sB
%((ea7L#7u<_/`BR^l91[bmieA:SfXnjVs,&aoC9fggG"R/gbgK(FGhIYfX;U>*TXUVcen\VWEVYl=^sHQ*u4?Jbq_`>P^$Urd8$I
%$Y<#>/VSr$Q`Fh.[^V^J/8i:*gW\%+l5$%-#7FO#_Ak-j%FZ_L#I1NZ=A5NVhV#6V\P%b]*+U`r`lbK8_)'B,%hYcuh,rJiBEeYC
%H73^*Ejlg#Z1=2E7[s?1JDk<tRPV\jIS*SK'LJ"@>Ekpd<(o.m_3lC*`@\-cAZPSTa54D*e<]UfbdghM>GFj%D)mmg>3sJ+A1Y&/
%@8CUEQHS;J,^[1W1-q/HbbBNAAbHBg%[jFC+;WKcdqIVuC*+QC\OJt&&ko5Y-sW2*:o:H`eDAb.L,)%LB=<OM?'@%:9.1I\+ba.Y
%Sodg!d=b%dNPj>X:"`8Wb&lFKg3/@I9LjH,Be/+o[>ZOfk?tD#<M7pZr6,1Q[Kp8lk@e!p((>6qHg&uuB.24`S761kg;TpcE[\8g
%=XXpt>@T4Ml'SF!G8jO5'-N#f9Z*13>*dH#e"KoRR<VhHeJ-41`Nhh[m]QmrpQM&eVCD<2TF$>]B7ce!'fhilNb\27`A9gE/RaWY
%8dL$<s!jHDBj'F\^'d\Dqeh-E.JU_GQPRl"HMG=B6\[B_;:Ea`R?#ZnS"$\`;1Zte>SbQeU!j\t`\ON`9o97$8YsrgWM:&]Vma:.
%8YNDs]gOVAZSs^J/1Ek.0T]EC-&u-W(rc]02'aW0#sr-q7uLgXPTML#Lg`u9CmqhEM`INQ@(lq9Zo5Fs^2:*S</Y7<OA+UI`l.em
%`A*-&60T<rI5?h==c9,J<>:WQSlnu#@Y193q%UaMV/9CI>7+hKqA`__@<It+HE@?E0h`4W&POps\9jV\R\P8ni;+=24u]OAkc392
%DQ/>_>Lt1AZjOB=4h6^\^pR%?S2+.dr$$U,H3ZZ21JD[qU2AupE7b8;[1@=C/PNaLWI+]==H7*eMCM6`W)[Nr!s!o:'$1C:R/7Pp
%4og;0Gn=ejKeS\/kI$p_)m&.%jT5De/8N40!8s$K<_=tE:b4M&>Q>m]'p,s++9gH$<\Ao[;Hs2:d9HYc'sk^""TV4@,&ajsJ>*t1
%(hZVrKYY0m(gqUK2Dc'`JA^;a^:FQ0B=gZ\C1.]f/Mf$Re7'Q3m3aLda4sEs\H'EdFoU1PSshC@;\+CoX]\$%.p.L$nc41Q#KtcF
%9sl)_o1`mo/Hi%Xg&G-'Vg_g+@_7,=Kt=[/pCBmF2uR:]c_#.1ZMWf=i:'=MIsj-)e[p<GC:3jBK="01D>kR97"2`C#BT,g:7H_E
%bgWM[rs9kCdjdc?r8ZNN)u/ctK`O65\Wbc^@2/RF2.ep%%#h>I/YGYN:Ws>/H5Z\)pBYF0TF[l-deGfXrc=mfDp=#%gA\9L<a4&?
%Y!ZP)L;^+I>DJXd?V$3rK1UW)MK/"+BY0.dH0aAhB+LMsH0Z#(d$u3$]EL`PTN1,+L_e(>bZfiN=hg(4Dq!TDhJFTBg8ul61eYIB
%YH,C%]N`Es`n54j]N`$A)f1M@#JDuDX7C-K9E/7F(Wu`?71NA)JV.N:V7^#f`]1%A[_,fUb`9*DgHm?7[h[0YDF"T(7<Dp937O&<
%O\t5r\j#4.VS$-K<51h`k$6tO96sG%pVH1:)TaJtf!/Xf5IH(k?`%O;H+-P,h/udoj4mcZ]0&f^Uruhr\FqBlG3,SZ\HjeU(-KuP
%7[85a]&X2jM78M!Q)8Xs]WES^]@BT^`*7VQ`nrWCQEol%S!+J'!OK9-<T`+hiM5PtgK:=6[JaXOpUM1gh3?*9/Fh;raOY`c[^e\t
%Q`cpGH0\QGRnNophL]54,q8;Kip14%1%`\4_`0$h"^P#@d#==9iMrFuHBG)YU[fEKe^'Js'Qc*)2d4s@,U?C%8J^t/m=\'fRVCi0
%>fqirWGAZc>/mQr"\iB[hY-Zo2)hoT:5(,3V6.>k<^c>DM^c<d"in4:HHV3aX/<Fp'1:b^C671Se9sZ*(Ak<#;F"2?<iSdn7IrrG
%?-7h`]B3^/Qb)<?/'+r31`P8*=^;AjQJpt(fA*G6/iCR93OkLIV/:+6D!QIQPOc8d/d6**48Yo12V1C`)J`n5+=*?.1`'?FWLkL2
%bS?St;Q$f7kb!jK-M>SOZ>W^sU@cZ(?.8(Q$$cV:c=f"^SiMDM"uBfE.]nYCKc.nERSAQJY,AZ>Kgm[JNPpJkQXOto<C:b];,nPC
%UPhb6]bLeAmI4@obYa.<&a]dVOE5bRf@L_>NTmF4lk;MY\;hl'3fJ^i^/(6=Z,!`kLipWF8YN52(1(>MV2;LSN9\s\PAfchIl!E\
%D+2TT^+PDRUE,efd]8p36#_goS3q'$BU)IINJ/.TK[d90WO8Rb/OWg$\<,U][3"_:;-[EG)5KsZBe%?;bdWlPTjAW>9(UbO'r7.S
%k.%Mc9o.Nh%J^dnSIfpdA.'/Bmo5eQ=R@Qi<Rsqr;V4B\XFcQeLW/i,#UXhD27d3UK#cq,+#MYJqgo?LXc2XL;b#S]o>*iEPnCKb
%.<:EE;1HsTb%bc5YVt2R`pOg_c<Q(6TMV'l;GI%E=H,[j:Jd*8=2pmR@f9[<ASGjH!(cK5/<)\kCfTgl%MPK,>m?r2YEl^hRe>%h
%riOo'CI4O!\QTb=gGRB3f+o.c;V3p?^!lQ-:(?eGc`<h_M@Op&f:7_1A:HeM53"dq!R*O#SC)F_N(hC02mHL@)HBrrG>oq?T>M.%
%C:5&pYL'+$Z?8/$,_?C<h0jomD/2@lOuE![TE#jZCVNPRc:1JLL!j^K'miW2n9hiKDpslQaSJp7*Fg#!83u9G/nJN&g<^;EF&#ep
%j;N-RlpaY@'EcFf_$93*Lmcj,<j_;mbTqntj/AL^'*6F=\qlZA:s'GgkNb0r<MN>eCpY'UcOK#1_ekBFM6N2?jcQerMZ#DZF!^''
%-s$C6H\TrS;:i:3*WhUTgKV)dL+o:@+f1<t2tjMf_l'?/f9@iUZD/WR_qt's6Z9/"^o4l]1l#c(@/1KV(59U.A&DE)]uIV*=(*Z.
%@@VfZqVTu_%+-l^=2NQ%Z,)LC#Y;i?Y7#lK?qesa_K(tsZ$-tcD+lc\WW6]`nVQ'hK8ggNG%(`GpF3+&^+rMt4(7b^e6OK3ot<8Y
%Be3U:dEk;/I`Y`NU_8D1H/<6.WI&'TYAB?NUmb6YUY/9S*Pt^J7d?,c[$r4!LY3jXXZeV7Ts5A)R?CJ(loC^/]%Q0W'W\%Z+t<G]
%-DT9f),>+t9'q_ijIM[e_@j;:ltX\/ng1`le[G]tl,Ou%r-ljsSQdA5cXdp@SeWi?0NS\)7=Z.FY[c=<V$Wtg;O\/"J0i,T8Sor3
%_,mp4;Pr@k;NIV?Cop2?^.K'/3)S[R[P+EAfbu+jW^GHRHR,BuW^YHBHR+>6XGA757fp1D-IWn#Dnm'ZC9plhk$#4$Uj@0AUm).a
%l_/')Zs^D,J>VRJ=_3L:`Z?`'+h(!o<MbVN2Fq;q__u8`+:6e\_)rRF5n^8>DZs+o+:2htNf)C+,S`pM)C/l<i3>Q\r,'j*%;h3V
%VI!"+X.,E^Gp`17,DiD;We/qKWQ>pA.kQp;/T"$!!n\\'N"%\e;BEQZ$V2;$ka<IglDDiV!IAUEKV=Zc6u%h5E3j.dWFKFD7];6'
%Thn3QJ`&YUL^XRZa%Y#eD3)UHWc!N2GGKuESLRuZ'8LEB/UWS&aI+Zk4&Vj0>BPSYp$G+!!8a(n<f'H3?B`o?+.X_2d\kqTq37OU
%n+G(n;d1EAbs%Rm%UEZ-Z0?&*[e<qZ'@\4Nl)&Qq6JCk&9r-m`Pl8>oJn;9brB;WASD&G,U6PWUKZJU3W!f;#4RMl/kq&YWmJ#;7
%ZHL4)]!VcfX_4"4SU$<trB?&"NOJdL.-<4hrVhIZqu)CaqgEq,()Q1`T1qDfOJ8u1E=-Q-6bVAiYLR=8'K>TUR/'kXqre[H2nl>2
%C[=HV[,6Y;P9Qn&^8I57b'r5(85S^JWCed:pA8Z;lFYQ#_RfP(?gm_TOZi/T^L%o<<jk"mk_=(HRjkc!n?TMQ-$$!"1V+0Y]ruLq
%I%QrYQ2]g"RA$/\$63nngYpRR'+m23CDUGmdrlIKo^HSkDGCm/kkj&nkXF#3o,h_K7IC:UQTBFdM3A`Or.pie1`ln'1M+nnArhug
%-$5t8)LV%V=%(aX%126hKe9Y`)VPF=k-N6Jd9N."#4%/$^2\;($2_^Oh/pYU^%KoHp[kG"IaFs*34H_ZoJWR#m!!*bSsuH7CEfpd
%SR+D0%@1V.h9K+*P`i@O;`%N4%)0HXeK?'NhPHO4k"KOqD%hldKt$URm>4<`,p-]f)jX[6QC,;6[PhQ.:UJtn6od`h'<Q?]Mkqe)
%.J9XZ6Z;.69k[JacWjrGE1(#j=ibRC`oJD>M$#,514$$[BXE`Eg-eE2^>tQe/tt_5'M9^X)_;N*ZB1VQI_]J<4.gPIP)5\X[>A.E
%a[Cle:fA.S6tVX]ekJhK_&8\uNQb"KfN6(2p4V!T19(]$=PqZoigq]3FT-+=-F--S5Du1:(K"hup;o_B$$2Z,>0,Qu$JAr5HZ.2r
%Ca!F`D'9^)ZB4TV3iODE)/f/492iEX\hlW!1YJPccLSKHM^YkS/8A4sLj%Js-sOeAnjnK,e=a@DD(XsXD'Jl.HH6m9)4ag9qHT"#
%hl"%I1Q`8C(fT?>G7euK:co]=5+SL7NFZs&M2@A];g4^I,^Vr<7opSMKi/f1R@&tES97?j<]6*QLZldXN=<)"[>><3BZX>]OV*5m
%m*NmEp72tBB+l/1of:6n4^H%N/GAS![V;"8jK"c)Pkf&`ZLcY)]J>XI*i')TK6@i\CF"6GfgR_rMNM/"fgpkphMkeqPL6P$BuRKN
%$j_h!`k$tXQ!IrK,LV[Bc'0iT0i^7]6^]N>6ePhkoW,9^f`EtA$ao[Bm5%,i/)n"G_:010HG5)Ce^#4nX5Bo*n:9fd#(ARMR@/7U
%^d)K.#GZ/%I8'5G;:-sb)R>-0m[;F6hj8e([')k;Xl13.4ko:U9\WSd,P]JIf=mRR)W07sS;7FBo7P5Vfaoq:"uI&bi$&cAnC1hd
%ddp1(#D'H0YqlkVLmkB^PUQ"mWMj^n?;i3U/<5j*#f-,p.RKWi5\h"5&j_To!96B:-1J%3N:RK\Qr*r*"1ssjnnq8k$'5Cf6r%Es
%^s5^oM*5,_IKBFI?NY=/LAGiIMuAs(E5Il(TnTP\joXLsA'_lf.)m8?s*?RNE]Sg`]iT'Fqn)O^\ompP!hW("deP5*c&S2%66)(\
%J5Y6q27$L:?X<JRp"=r4r-Y["/b%H8&$6lT[\\j*X$<$/UNd]1-?<Z31!>/,YcFe^NG.%B[a)[0/W^<AEL?,tOlouuB'O,7m'uPK
%,u04&N0%XJrCB9Zo7=@*B8Q0:/@cil/a?^K[SM)BDZFi0*2mapeqVj$("eWkdu!+O[Q;Zc`W-Nc*@-FM\LQ=#?3i7.)uHU$A&o%2
%0gr$3K2[`u]f]j+(84_SnFtV`!<lsW/.h%77L@&,0-rM,Q/6lDmGZ;MC(P/G2d3F4FL"%ui,'<^)"ep!DmZuTdCQ7]&tp*E!fS7@
%\R_jJ)[\kAE:)+QU`g5F^D4jgR?+"Sph>dFb8a/Eg4V+?UlXXkp6o=6c"s;Z#Tg\"N*m(T6rIo;oek]bGE&Pmj7/VSd`A.m]Kh([
%9`I*E&cYKul#['EF;$a+U'M;hQee<LJC.hUS#2i,,2[r6GrU`1CSG8DCF<ADm?h7%'JkNB92]qaj(Mg>J?J`q?qU-Y.PXHpM6`[%
%0pEP)>'M:ic++/fff"k)=,Rt@*u-#_HB'_@rZ1$4=q,qAXC?%Q3jM>-Q,S=$p)OAna!J50S#GpoRQ[oodcOK>?@^DO_!(E(\sbmt
%Yc!_O#>D$aF(iQZbt#*IT#E(_FY8_1/CU23..s1gWO/ff4`n2?HX*Q[anHpB(:do%%,r8c0R^2.7b6MKBWQ'p.c%[1;ma[EUDCb_
%>RrZSjPae=8i*Dck;-sZBprd?/[oCpc09"9e"\j"j(UX/6Eb/;=u?!&V;HJXQ7'&r3)Mhro>Z$47SV;p5W+MWk*)5lHe#Ee*70uc
%M[7NGXL\'SNQ8@O)@4RcAc?-@6DqE7g32<(Ju4N3)^]1VDjD;TfP*rs^!0[p/Nq$*5qj$0<;n3=Xa8gH.3,1,QtI/<gM#+oaR<Yh
%o8uN"+Q(VC-gVdSRm0YtVU9ZPA+=0#-*YqWq1U;e]sW8]ArHW9KQW0LYd_aPc2sA(Bkp"T\d'G[p@G=97T:n!Y+=jrBJ!#[jkE;E
%1ni1.Y=.+Mjp!e0)*pX>H*eVY3+o[l%\S?d%\96@>5Z!1E:j$Md7m/aG2fYp$d5CFN&GAH_!4Lmf1hWoSGCP_(]t/rr1#Zj;mU8d
%OOa";<hnJd2mpm47NWQt,;(Yq)LiUt.Atu%S#!qg0et2W,5>#6!A\@[lU%iO(TT1t57hMiYiVQZ.01$^="MEPn7Fq@>#0aF>rmYS
%,.@,&T;hiH)R,,3SlSIJLse#.=k=Uu&XD5R_Y+d5D"KY/.m+Ia*TebnCXpZ8)@Xh!*d]M%"bB#fEn9SK^pf;7&P)lMd29$(c2hVg
%:A6Gr#.'<J*Z9o(VIBFY[toqF)A*MNZfkZscORZN_K.Kb12O_ggG!I5:cb3k+j1*QD=l)[;[F27:Yb0e(bWK>b']oM*Gph./D'^H
%#UUq3>IhdgCIat>%,QiL`L_\I(c(#:*K<2f,Cm$$45J'%6m7=^#QYgJ>47hmCh$'TGM('U";uG4+:3j1^fqPu&juW-=WB%&VT3k5
%2A2$RSM4Z._M1[YF4<qHM@gT0YSsRQK)%9AS.$O9B<Wdr8n5_(243E;qhL%C[?"r`0q\MhLi,i&)4O?j4:5#[T.Jj?UmR-YH*HUI
%/+EI:Plh$s6TXXn`rIsPNPT_g`re[+AFla;<Y/s:UTk3Z&E(IEkXpL[4QUYoWc-<LN2%;eCm4"lRP@rq&,"L:'IT'b(C'S-K81R_
%CFp*>mMb`)8:*r>cn=bqN-SeHda6Om^k5?#L'\0ob/61N#3)q)P#>u'c\66\mW;\3D2gPkC)CV$fQ;2'RW$DQbt)A?m5@l87mO1"
%MlNKih]Sl%C::HuB]*pgN4apY#@k0^DN5.D>gP@n(,,r-POD!,qC!kQc*W^f0R,NZmfO(NBju4Kf=?\hmJ,]t%4b"-!V4-ub01ld
%^;'_T+U,;_CM>'fE\@_"*W`XKZlTRIEM2>>TFW1d$c6-jiDr\2WEag#d89;qoW,O/C8:VppuD!5=L23./aW\a`([YVQ[h.':IE)5
%D<1+ls5)2u`*/Jqn@HkRJ&K?j^l:2;^sUmmZ>-'>(Bu%[UVN<[6\f6\&B5^cW+e"945T&c`OYbo&E2c(/m&)jpf\>In(U.cTi##u
%V(`Y6euJ)dc3pQWL9%/:BW(FIhppDB&QtjA3nPblKn@<JU:lk*(5WenO_CJ#M9;UoB4-k#H$1MI[E_0CTUg@ZP.9/ccV4OWVL?!B
%]k^cDXn`B@JJMbQ"H%6UcrU9CKNb%&Acci9KU47:ef5O75[3%u'S0;3,niTsVl`tHR6Zn$!7u(!9bJ-)S*J*')h-+tQu#OW=kYLM
%S-4CQ2jojE+dnO^Pfu^J1M2/J:'R$#e%X&g,i4SGZ=Ha_^epL.7]IK1MTVTFHGC(BpRm.j.$kg:pj9sM<>h&f@mNI;.WmGS6S^,O
%Q6Q@S7O;`tW+8kZ!(Tkk.If>/'Vc<4%-PsZJda4AXrF5p9Csf*,tPE'P#]V\%6LM!<H;PaBF/=P19_U>o\$6D:jk5O3HJT.YDc(o
%-rrfKi.44cb6B3e%_#;H<'iQd)O-^09d<A5-+&3OIUuL`S2oseWtGPMI^1FZTs?.(/Qn>a?pl<A19g<9`2Eg\7E/-0;&S"UO?p?l
%<N_:@Z4.7&SX9GWC>^4aM>\TtJ^a;S`H#-4BJ^dmXIVjl38ik#WWF_7r#P%RnsX_,`1=ARI]nmpclr?gpTjEpJKXQ[X'Jp1bu3L#
%/2m_?pipX1)fW#ZoL05V.<S9C<HUVLEi=L7bP\p%r8cN.JWRNac@"J6*?-l/lmAo?1fijM`#s\h"jPWiQ;9N!-tj]"AJ[.QF[$:d
%ephe1g:=%BV(3.hLQH?93cj@@g4Bt@gOFHol*jWLZ$3VA+i&U<@m?g7KK[M9#RF21kW<O\#0MIX(8dO_)NSgQl$(qR<htlGa@$C!
%c)<]eoqht)_*A3\m0Co$%rc5mIR`3UY-804^aXoc7L0=`_m3X@W<'^2n<g!;*Q$j9M:_rXHIi8t`?Y?Xn.YA\^h%!9`._EI`naha
%2I?`5._%X;1i'N,!i#kA!so'Z.Jc:]jkcM'%@6@!LI)!EK0>]_7D'c7$YULi6fN^(X[NV9%=#q\6P9HfbG?Nt[MC-r]hD(E"bB/_
%LWT5rI<&JT?\5/kV$pM%!AW[?HNlqMhPnQf6T8?#VAK!hlXO33REe)=FLN)(Z,.8ra;q\k%MQ0OL-la[/ah6PY5I*m(7e#Rm9YQ$
%k/JWdJG(887au*]T>\hUQ?d2!U_oqbbQeXe_P<nEjj0\tEoHA=E&P`Wg?KkP-1.cVQQ3naH5^s7D=ti62J7FqpVI#,#@04]qU@a'
%RX73'3T55%3=6eQ=q9n_fh_=j!M'Jmq6N+P?\Gq=X,3>@?0:0@M(-@V3(7X:i3U*V:B0>1Y(Fn"],@'R%VR@iomjWdV?GGe0WIj:
%k&iN1A!1+Tq:!%*ei39u,:TK2K!Y*2&lT=WRs&"44n'F=N'.QK(IAV3f-CRN8RNm&DVB_c#-:/Vq!m\_8b6cV_-(2A$bDqmTK6bt
%+k3GO^5KFJ$EMd3'NZqE%BT/ZW<j>B#GGWgA-o=BT"JT2*6uoE*nXJ4FKf(QWtJMFE&9X`BTO$)j:k^O5bmMqUFEJYP(oMYZ4>^;
%__<nMN5,$Fa;e<;Y,LC'!p^u-e(k)k+E1RbJTW@b96"])%ljO'4PZ>_;qUoO(S+8*%V$=?*5,Om7LH*J&fVQ$2h`)Xf]:Y2pke>`
%@RpOPJQ$*8d3=$=C-4@#\$T6Hg9D2GbZ@X^:%7(LS`8TF?uR<sk+/bIX>a".#GVir=JrbLr\>^+[]qZ6%.h>fUZ3VoHWX6?8"]>f
%mPb3>l>7W0DsC::>B>W)\9W@7]H/01LDmKlO^s"H+cL#V=TV#=@,=ZEB;,R*&An'*@n8S?d!(QU;f$Ss:E8M8[:X_Q*X`"aljB=Q
%2\GK/MR_tP'$&2j.MP3LM!?XpVf]ul^Z!^\gK*a*j-]2k7K>6p_.3Rnr%%s+<E('aj;9=)+g[kpeY^?Wn,Q(If0?W2e/3mWrSS[Y
%K35p"-I7@$WDLe:16#qF@/#;VKfUEKMQj@;hO\>TYuRn;YEK:fl<TgGW@[ZO<Dtb96k1hM2[-7o6V\X[B/*Rh(B^`p$0%L82:5'J
%!AR^G$+X#sML)=MNAkaCUgc.MFGI--M6Wr&,[.=aUE,OqX^W]d$\%@q(bM;3]lS!-)su-tcATJs1X0atjo9q*(8P#]#VhBT4LUQ_
%&lCAnCH0unqP3@G`RC1b`QC,^2NGJ>A?kB?J<G>rq39@W(76a'6TVMc-i^'I*e.\OSQ?7aPk0I)KD:oB$-W[q1IDZ-F0E`!6=,VU
%.>Y&F)e&tp1oF:F:=uaNfaCY=D5fBEj!hDcDXGp[aCi)+rjgU\7ArR<Pe<bXkVU8=:F02F-h^#qDJ7B#WfFi*_p.R(pKdJk9LYu4
%&4!*?HpVWE)VA:bSOk#b$'"MkEInM$d:EdAT^)!1^lh9[3j&4SFOp3Ybd/=?\\*oEhLn9%48>ks3n`@("PkVq%4n<L/_oql_'\O`
%8o<"2VH<3iT/(mHGif3+Ks7>9eAhQ@[O#jMT\(l_C"O=kJZ:F/d+XME\d.g[0of'&.hQo;HB0&9$*@9]!:n"1(eoDl[\k@$):C@]
%X$>k3Z_&JA;hl.fDJ`B`;AO^cl_aQL`"j6?(c=s_ja_$H(>'Pb@RP#,aU!9odIb1Aj#d>-N^a_a!Hp4tpHj&%U;iPs/G)'F4i,&F
%O0e<W"RW*oQ<d0kRVo/TZC&6\f7SLan`QQF<P"CIdco"tb%W^4#6ZXpf^PTN"pl.>aX#Qf\W]6a>?N@np>_AoSRRN5(#,,I>uKen
%BYcgLUd_^4%"1n<LadRJV14$8ecV3^K"hQJ\=>oa'2kPr9hQ"2rrUAEahLfOZt)-Fmj/(E]U8Up-$:Q_>9E]^9?<1HG6B^el5qd2
%5sZ0cD/"T+r[tBRB_L:/7$ShQ027fM1<YZp0sfYG0GDseK(.9C+p,qH9.MK0<GSk<!:FX<m)`5leYPC%c+^B_h6@?Rfq4I;,<U=s
%n1%#7TQL?;>YU*8?"Ms22A:8Lf'M\'fSBT"0"C_ShG/F,Zrdm,F&o-V7_%^@-:h9g+R!R4QD[D)BsBOTSj3jO?^;H8JhDBr/QR@n
%-PL2t/-ss&fCEDH?8PJN?7]F>,M84N@_nU!PdFQj9p;hSMZok5,?+PcpmY3&b)4Gs.P!F+;H>>[U[CBNXcuK!m8Zo>,s7d]PJ>eu
%4e?M#b+[+Ej\mU9P](=//Q5h(LUJRtS/0;;Qmc:h@e!/fK.*0($dKF!-,&=$4`aq.liRMRjRO<R7)kSFKXXmNSgc7WYDFi=8rEj=
%'BC\t[NaeNfM"r+Yok`(R8RN\TG1%6/4aOA=nIANJQPW=NR_+qa#Z)DY>&)rV8e*AH5r&n]>uB=q'@g41c=SN1DUrOK;PTrXJuRU
%1Ub[$Qt^W'JZ2cP_sLlt)Ts9jc]7/-ng0%5^n_h$cqQ&dY_PpRo1_EHb&A]$:0P"Y--(VW:f9oGc'k2dA*4Mf-4N?_iP^Jj?$<\H
%*7*.#2VG[58"S$@e`MHh&Q,jMOqO[m-X5;@`fgC!]qt_jH^oi?BG!SuH=mFa?`*2(2^8If'6Fs(&^9G(9O]Eo*AmeF84Hac"tj_'
%7%s-0Y`G6MOoA>,I<n4O%5UrP[r1$4S2q9Li6_)C2FbL1@Q!lOT/_F4W#8%pi#1J%c:#\e$t_\W/Ik_Hkp4(%ZpD+:$>@,!g_,/K
%REqY`'Qh37k#-^<3!lt6$:]<FrcYIt$Zmk/Pp[1I":PR+`<Sfie?&gm8+elh\eMW=B!)FZIls_@m;S3AiunPBbE'qDC"c%G:Ro(P
%@pf(`J2sUi)6`e'fiCn,4bB;#I8`X_Qf[ns6l5%in`_aLfJb7b3mbng]9.X]bW75u6pQ+@Y-U^HBJdGW/,1$"mF^YuO<W<IVJ'sg
%i8YW\H6tLl(uD)O4JDPaS*ksG#ofR]e!RV(o^?cb5m=J+*c-[%'m$/'B`i!?q!i']oqob#d@(:0^bb6pogj*/7lAp4NA:qYj68GI
%@9`21dO3n3qZKk6fC@&**g'lu]Uhn*?MPr60q/$q+Jek(][igWP@gFsR;__@/nM(Ll\a&(oT9Y!>,0u6o.&F!b!PZ8&(s:tUR`kH
%fcAL:ZHZin%QU5n1b2\$*u$fCOO6;,M!!I"ROFh^G*kreRFZ(V";'e67f=k0$KV9$D3=Z<1Qanar7o\D3B"\"%Tr0O>;=*C+J7T8
%/L[&EX,ulV6$EEZ9!*Z'28j'4D@j1ZceR<<]cal)A7G7u.LY(RoQO\1NIYSQ>@T3[<'%N1U5_H&jV:P8A7scB$#QE@1FIB7k<qt=
%Aru4?U\,B(TpH%UrTMbs1lNK2W(Rf4SS<^@"S7H&3WfHH[Cdci(LB=/[0BC1Tt7.'e$RY+e<+B:"\()2DoIK8F`FgT:^b-.RH)Yi
%;^D";[MI_AH^U24^(EXYer-pmL<,`O%?O!42B$3"^raUf\*:o:[N1LNRPF>B8El^j/*=aU>obJP_(s$#q6\6\#2&Te53+SO>jd/[
%12u2c@6B\4k\%(Zq'HfVl8%rKSN<GLY]&I8"bGq!3\05.2!)YP:s6IFN7-F`_!]BF!%^jCAEI?V+6$.j'TI+&R[;%UTWZ)Cp7Uq#
%M`@^?MT>'@?$0(]bFI2\ae@,<X4,lU7k&KA4j<.f/%g7'<jBYG18/$H&e4Oc(GS/.'[`p.#mC+MH1JM;#)f*d\l,`VOU0:U.=3OR
%.^efG]0^$=cKK<V$720nRoo(*En$r0QEa(lj.'%cMDiM%S[YQ.>Y^j0i_4<RagAbC#bh9.bI/+j,9<f!S(t#MBhX6-!$q4YH`,7b
%Z2$Z;.f8V\cI<m,49c3+Fsr;HZQ2*_6cGGa)gFnZN$7?fdt8Wm<@l,6CgY.hDL7;-7HBg\k_]JW0HDC$iq*Efpe[t@b;VGh\(GR>
%H5^XpBeA>[Vpo6nXWTHpM^(BK61'@md)7k,P=T:tnOpMqL:<[0U[A*H'a85k@>BcoNMWKPCaI.RBuO:k"2Z\"O,r!"12'2sUO]?:
%Okrje$Qq,LD(HnR)=rK8%+uja,!*\g3>noT&5):GdtT\Bi+k$a@il%.Ld0F/3m5'NPUCo$XnA-U!`cjQjE<BNE%t#iR]0\hi^(O;
%>HuaLceoJbCMC7J481]HN9Nn1WG^uX\#d'[BoM1$2^==n27e[]VH$2j9ba?0fS#!AQKV.#"7\P$q1(Z&NG5YCFcfp^>mL_i^Vlk]
%5f:6&bqWlFA6Q'*"B4"HWUr]o"4?AM<]L`<*jfXnEf8Pn0V69LaUK/2okXb<`XD@PfINRY'N1<?cs2r+5k/h4rJ;;,P")'Dj@DT%
%FHX[1,Pd`,ZT\j;hb)1;!jkLm:;JYB6"i2U.O.FlPIiDd!sEIm?u$kZ2sT`J><TSE`aYjnLD!a!Uu_lRS&.k'@UjaWBgECk-lE6K
%1cnH^Rt8(H(ZI7\Zs'ENE#[\d@G"&?mW`a>]+`#J_*(E$.B%H@m5oY81$V1K2(dY()&q-sSX:;+f>"ljQqaZjob]8-<&mjs?7h>o
%OZJqUWk=u:eJXZ=PO9AeQnlsZm5:22k5[q?:uqkX7*?jY15"]he^b^=OKEb=a5f+X]Wrb+<n&#[b2R?a68s\cfN9V.jcphuB5B+N
%;f>:b@IqX%NO^\mYO%X:;GS>\&2_7>?J.Xn?J1c:Y:Ks<\X?A3Ip9PFm$-%mn$5_)pp:[^I'RuI4_:D`AF\s?VBhf#fU?_%3FtKQ
%4.nQEa.0bT?J.&E<@=td-<+=)9M8\pap*T^\L[\u?e;Sna`1S["S`M@+[?)]ZJM!`Y=Mb'!X*%4!i2A@\/LP6H=lC"aG0]NpH0WT
%lZU`\#jdq[\lnhkE?as!.RPh2?tC9WVf\G"De>U3hO+Op-eF(Rh)4JLDaPCh@mS8GfiW5:APn8!r]nUahRUoOHBGLHAL7e2`T/G?
%!dZK!0GQlk(TGPWb0R0;Orme/p;<Vq_S'SP-s50=OK<9PJsGG5YY>?QMr17Yf3)8U4PaM0Z5i5l<D<hbPP/Q5AN:rWC4Vmkj(1_a
%QoVif=KKPP::B]@,`:jn@).l/"`UcB+a02ib8IWjW5G,VI`cbB:pQU'cLf-Ec`t4pljZIEEu'ArJ5%.E$T0<(RZcc!EKlTJD*;rj
%KPV.`+ClSGTUT#[;cMt"J?g=$LG:ZV1i,f>V(f!B3:F1[Ot%Dk3O^oh'f9YfQAaiK<6uC..:-hGRp^K`BnBEM%Kh\J3-Bf$eTCW,
%#6LQ8G6kT,V(N#RfT[[r!hb[VX#11`(hRP."TcucnBH.41%j:9MDUk#[T8UJSH3D>)?0SjPTR'3CX@RepP3TD/#U:l3.VX'0RQBC
%qI`YT5kt=354\Ml>PS1,>+#6Wmel+YCrjHgLQ,[oS:B%Ck8*F^j)6-l_>2,!YS"eKa(LUf%`c:,0NQM:o_odr$9HuVKrTO^nG_+r
%N>t8E!U(/B3T9tT:l]Ysd>]E=](_7tiIDo\IhX+O$hp:LO+.T4+7F?(>.Xa4%s-U?W2%47?ul3QSI.LI&Vs0oKOpiOn\1Xrd,mGD
%dj]gU/kdZ!#,!^=[%>A>Ug[X2dM<6V@g&j`A,u*lMkmA)!8o!h&HFQdW*ZDOn/)X1I-d#>0EZi$U>lgo!4n><._L,8biXFR:]P1B
%l;TYVJeF?t<S9YX^oJI!TE$Zb=/-d6!&,,I%4j[@mnNo17T<e'J-LBh:]N026g"GQ6qRY_g8I>]c)bbdc+NL9QpWlR\PAN-LnQ5.
%9cMf(82K>M2+jjJob^_Dqg.'e)RN8kLM^V[@af:a4l8pcnNNd;0D'(k#5(Z2OnsAD/FdurY'r(glqU?CCH,AQa9&7B$rZt!^0KEn
%B%)hpGOJu3TH_M3iIcqhhd]6sSG]6/@^9-M':7a4\OL"%D'Y7!"WQW%,g>(+Kj./9htXg]bGE=M./oMBZa/]^[k]%O[N'aOUN8u^
%5_[Obc5`kngQ4#=aPcMEdcKu-ZIGEu2]<;oV9Km!Hui:;,:\bh`PhMX3E/O>g71'VB(c_QKK/nCm/,ns(]&l4bY`!@g$_7@];_,?
%Bs(<@o$!Ua%#RukA]bu_9t=fY_;q(&`/:tY^3F24EVRdq9UN^O-?^6\)!?gClWF@T;rkP<beYX"Bh]'9c(Ukb\af.0R-QZ.be]r,
%kENMHO\E`]e!8XX`#C.HR%?gXG";Xec;nI&`kI;I@Qo\-6;+0Y1E_>3K#]g*N&fP#?TM[,CQ:sj-HtFe-8T8J**4e9%A=53/k/R#
%/r)Z^X;T]30JRPmZK5J%6@37ddD2C?flG?kM.<_3LlWF%YrsYB!c\0&@^o>C?mC>W8XCfOm/geD'db%C'SQ6a",+Q0$niHLE!S0p
%QQdR+H2&NA!9$\2W:WEWI;T-ILeB>bK*65A@rb+s3"F0HRT2'0BRXQDE=^t&r2M23>d8,KEJJje`,IF#'MDgnW&)[roHT)X0W?f2
%W+3?d4C_h[Li*7&,WnGhJ8lG]ghHSP?Kf+"G6!E<#'_$d*)9/Cbt7t[>1=]=*3RpDXDL;6;rlA_i(fn.:'?@/a-D\di:',)6TT`Z
%I9%KkghF=0`+Ja^[(K/n2fpp2>-c@'^,YZ;iU"J`^E$=b6OD\2U5>B?/drtT$X3Zl88VM":B9g]\rCSqE(A*%U(A:oaP-cTi'R4?
%"#r]F8gtdrTl87J,m#tdO$(1=!:I3*8hX-Wp'JP)N]LhN#(S49%26OB3OJ#Si:?=;^kF?@>`neaijZt-d.,l5I!QiP@OYl<CEJSO
%-Y0,`E'LE$j52KhoB2bEjn$gTJ,\,NhOf5mnuJ\'rWQ6jO8&[dYF#\?&@1D!SDV$[a)N1CgCql(TGuf`2r"GZgm@'XS[^nr5Y(^T
%DkuJfi&t'IB'^ZNbaahQ5/ZU6LM?;G@lAAI:$C1*!WW=V:aW]rBTe:-r8(/ofiSrTJV@N_$!](#kBK/1]$ZUS:ob7e-4nBt_HMkL
%[kKM<jM"hJlSL1PMnQtp*f;iK3t,Y@+YJZTIe^J=5n0)_63S3oG6/.JIn[M4Ra67jKdB_hiRn739T,PH,]O]_5soW9_nu>DM($&?
%B@mcb/RK8$-L^"1+,l\pq9U-<el*O@?hb@6A$Bof5Xfq5Q9Tqk#5'QKI`7Q^LYA=;@&f`d#Oi`U`2&P&r(O'!6HOM>N?>\hTrr*8
%KF-$De6tql9kq?#]mI"O`8)+_6a1P*SZ#S""^OY?@-Y(ZYR-gZjPSJ\"@:jo;f"LZhJH;BKn2L)ijgHc(*a2)>:_gf_Hd(#L*\\9
%2im`>nSGWq<gi.&As'k3"e`,L?"Ol_11NFRAf"]1li@dN+.u"=pGkk^iYRE=dZ'\F_dAR)ja*PbRfm7>Zl4gm3d<GpFtC"6Lc2F$
%<ba5/e42A%or-`*5%a?u`7iYD18"@h<RWYle-'+,%Q,6T4t-j*/suD2.?B'`]D&XsDm;f>NMeIQ4T-6dZrPpIm7R/8Pr!efh#CjB
%`QgD*BB,_;NL+ES3QQC3![R%<90U-^qKdb/%W]7^Q4,N_C.q$Wa>3#([+qHI9/2?uQo!ai(+\#\Bb"nbIPJdEOlZkpH=?m7PiD2V
%F_4K!L')/IodqW"/W>:"juB4j3Lj4F"i_t`c]RP0d=:FR'FL[H&\9gsG"UuZC4%#M&'X2W%uF6Hg&]XiSJ5]s'%.$d:X]#CJLQt5
%3-UnAgQrILK2ap+Q'Vi3crn>FP%CSk$DbPhf('PP@o[RjEm.tMbeb>9&FGd#pq\ei@`YA(3]E$91_Qj^c"bgYjI1,6STkH+d0J'#
%T6T2rRj#!Nf9rkue6nsGLJfHl3"*8:*dc2LOGQ-OO;1l?Xq;Ej0V*;ekrr8jqY#P"SlWEb<[e&DMpJAn5o!(G$3huB4"J36W$jCW
%d&W4uIsZ$#%.48PRoHNpfs-5</ET<eSuqWHH]P2`miY`u%7j[_J>rm0F)+'4'u*HY+YE\V#*:PRds501M%7TE,S5_YI*S3LN:m%d
%.[g%M;Yc)]9HKrM/;N.=+&(^,[F)nT\2gM;a/^$$R?WHla[jaR+<"F2>gsqaN&^NBm0>Vk/iOJ['%`^i8:t*aGH/qs\>anU$8scA
%KM"7-R&*sRK+c8ZQ"R'ign[rn1MtV'?laU63PeeW@orC\7Xb(\L/Ckh4/Z&[PtX.<5ZU!Gq,NQ3X"eeL0N-9*'%niF/O:gcCY^ar
%'$.H^pJ6p#&(OZ;a:`!Wp9hPQ'>6uePq+IGE(GB8(>PY/[n,+-/S3:**K1t08A\fSV8]\1kD3+c>](9KcZ^TI?`(^I!iS,#9;]cU
%7iQ-,3I5#tV-Re_I]]l)c^<1hKH#GldGi]IR6Huh@=2+6EZCoQ/W/N";pu7__&$Yi$lX[?lNuaNWJ=g)r_8/HnmUK$1-p;0(Bjd`
%;l.ie$lmm:cS=+3rR*8L=8OgTX4-Q4`1ftR-4ILFi]XYbWs-bF\GV0:^7.V10A9h.&^+[8N[m&g;E;*K+&WaF8dibp=e`k<V.oJo
%1"Ym"'iWH:GhBArM<3QS5AU68[>r6O=3pm<eo?-t55+efo<t'E_\0H!2)D?a/V=n!#M5CMP%jG,_([F@R[;A7?].:UfX!<[psT%S
%TgZUdV!u'ig9-(6C#O]62s+Gj>,cb3eq<*%.t;QInh`+SnDC>!bfS_+C<l671>GGaOh(0=]Y4$lcbEu6):Y+\$`=7P]TWo1[n%I1
%D*/<e)P64a'q"8?;$`8YZYA=UQ8JJ:N])6K2=Z_%B"t<jLIY".i=V\'AM)`2/;B"kCX6Yi.XM4?P_fWemC0N&KJT0A`-l$mX'KA8
%pRKL+\VN"!;,h3XTkJ]'9d_t]7^2"&bNEc"6*`%.&G0/qIV(0?TS@,-lGe&N4]8ip\5f"83Hods38sT;#V[T][^-ebRaH4F"S<UJ
%(#dGA"U]n+$cX&u$Yl!b/c8[l)TrYW6TI)Sd)JdhVQ_'6U'/u>hU.5S.G!SrMTt"CUt/X"=9a7A.&bD=9qEKZ<MOJ$F<ucoL>[eT
%TKjKQ.9/u!\4P@-]hhRu9U/2"R%$&aZu`Z27!-m#7i)OU@lh#pCJOAE84Xa0gXe`Nb.(GH"/'iVelhTr%e@g-F*kG7;(6O`MkrP=
%GF!!^(Sn<$Q2sS-"?:r.PU/ND\=4"D;(oL;K-#DQM*.boP*O)kS#%$uFY73jOCGU)o23"%@`l*7A6;f^0H?LRh/0(&<kN#Z1+?7$
%j?8#fP9q\*a]\p0K&4PgeBMqQ9N,Bj;sB%+>)MWn0=<@&`mC`Z:*7.m?Z0nI6E2K1;[H=**2FAdB8R4c/aq[<N2r5A(`kiJlr(8(
%s.U!q'plI6)RO1[Dc4GZI#6M&R1ESPHY"%Ql9gAid1%/,)/:dfQQ2N"$G[F.I_n>(Eqth)T2-tG"X*m-a3lKW*GRhBD?3JCFjojf
%I^"!#?b](h@(KjK%]f*0q.mP(LKr!=Mso6!PK"Ha9O(-s>Mt`Y1_`$q"S%TAC&)o>IB/B#`\:p]pI)l6400kp]BWL'WD/C9!FNp$
%5!R,fK8(Lip["jZO&;O_'im\hJh.k*07*S6\S9K4E>XR9)\K9:SfiP$Z/=9q?kbji=>Rs#W-,c>Z?YT8dTahNnhGnV?mH1XJd1.&
%;g6Imn'tEQGCImh=-Yl>X@dGkSg[*R9#B.RApf<Yk!,[g]<.T50t=<kWknXu$\^QPK*"6HHHuE9/bU*t)r(^6h[LV4I`t9o'G@.H
%"4'p$PXmD)_[-"\hqKD]`U*qe6&P\tFoqehh@dU9Nn>fS/q9Pp3t>"_j']<oCc\^5dcJb4pp]I($A/"]E9$Xdmd5!tRi@7srS+/m
%&CDQs>>fa2'/tMB4tq,:]sl#KO>#4B=28`W/Q"EX?`<&.Tf;\!+anfk?\mjq@/^6+_T:O]d4\I>(\sUg[1Kr]m`PlbWHcUGU).m(
%/\s(sBf2Len-ebiL=6h6_P5^*i3uNcHsSJapZ6$Ps,O?7UX"%[3qgOnG;35@qpHnfD<qXgH8Vo[C8ig+YV3`;KV?48>+nH>3(D:n
%=6Nj:A)Q&$6AH1N')JmQ`%?)p99%sli`$V/?%"e#6=3h5B21t2L%c:-_$K,F&Q7eg,@<RuD;E8L5?Pf<9Y(""a*nZr;@\$-4.t[o
%';?#IQc"AbB.p,5S:nRhFp.sQfNT+5G>-Z4gD31S)YOZ,%XSH@eo,,=B[4+((9N]$mR9!(cirbf;8Iq!p_Y%T).>1r^c^U_2?\;^
%J@&uP9)4L_QVu@U!.(oELiXbIc>_23*VgIWUgD=VI:5,o1Wk6^K:tZi_'nM?"7^+kh\VKS,@;kX&u,ZeAh@_:"p5*cK$7O<3Oj\%
%<.;m,q!^nXHdLa%n/H?\'W@@EKh[A0a^=<6@i4kFiZ8Fa"?(Nu>W"."L_gRka,Bb:,Rm/S(f_[_)<8[i(/J[uMkMUo4d_016[3h]
%$hG5A<\@kok=]Hh(^e8F<&+Z9+`hJWgqdGL2=&l,bYuTOi+NB3;b&nTH/?c^$oP20%Mlsf?:2\n?CpI?;I#UW\CVNdp%T(I`m]h?
%3`$4e:\nUpR+fhP!#[1S4\-Z+UmO$o]dE:_$*&ZfG)6p._))N?.RoouJ5O=:;jht@'iP:ImUN5!.GPdiVQfc+Z6Nf5AdO$I'LT$-
%giJ.+#>:*m%n6e^BbBOs?nj4,P_NR#IZZ=0$l0YW]T'2UQh/8hlL7eBQ[*`?%[)eb$ZVQ_+j5ZV6Vs5LCbo*sNZnP;"!u_@m:k;E
%e2]aHPTb4pABKiG_\/JQ`eqrR%BbX)6P3PJ9a$@Z91Fgm2MR,unWN-]EFGZ9SPMVg(q-t]j2ItpnJJ]&D8f$;GVO$H,LY?g))?<T
%)VAFS7'O2U'RJbs26%WH`p]Bul`oGi>$`C_`T;ooL^4'W/!uqf`er/R"Q)SO@V79%`D@r>>_V)RGh)^ES*j'^ic%gd0NQDKK[J17
%`@u.e2dQu(=D$q[NYPL=4IS$7`A!2K(`OLcXM1lknSq5e`/5_0*PaRY)JE\,<NEb*&Bf6)h)nE"^G]h%Rca7AQql+,9VL[F"W/DK
%Xo+Q;VE'RVd\(="@Xg.YRVj"!RViP2#0DA"`e^T['ne%AVWK_,lqC-9r^#^TmU&Wmj?hB2Mq&?WG/a!7XoVJ)aRMOIPV^<Lco&>^
%:Kqne2;L%72;K*5F#gpN"C4q9c/B%9K>7O51eH<W%S:P3]h]_rrq=KJ(`eB@l*&;$Lep[R\n3?=YA7N]mP`5VG.%TPP+rJ&9jDaa
%@;F51K%7]g'^'@W[YFNYSen[:[i[AQO_bJ+ooF0)C[O?umR,9l#=]I(&>d\1S<L%j25AAj)9EfZ7$9nCZ3E=d`%4L2S=*P:O>Wq3
%6=7g&;t:NkX$P_q8a[j4ZM"B#;c^qPH`9`UYtig`s3l\%.=4$26.Xs8:lubYn.)Orl]nP#QE'.Z9o5[^,\mrO<oeZOC[OYu$$IJ-
%0PZkm'4ahj*jUpth*Q3.=i5.3NhP)C;2li:YZMn""'K\+nKZ-ooGYJ+aI6u`aI6uTZKBC#99;$p=97Q8X?e/T3g)@^X^T^7aVlSU
%0W$gm2'po+,\tPsdFV5_=Yn6oK+$J#i*\hbgNfZtP;VQ>k::Y[#5q(n3m!h2.]pFK2>7uh/Kh$](McF:C*7l+H..-Y(tIc,fs4$O
%URl&WQ:Y0\'OOR"?s-q=R.h>_coN?r%)I2m?$`cshEZUGX%2j9;SG6\F/bWFnQ?1R0K<]dp'k<`ZA9:cF(qH.!8jUNHVo5"/=JK?
%0^2_u;ko%7"`!<Nga]Q/I%hen>KT0,DdL=okIi'Q.XNJlo(25%`Ne-d>#WYc.IdX8dM%n/-f@ds`B*HHFdJ(ff/_CFgN:<*bTW'X
%!AW2GM[Yg/%q.diB/lQ7EoB.UghIt`Mtnb&QP(iFeEpUK-TWDuE)ComID"$(G4fEt;r0N:K,(<XEV&B"&h8:?]%aj]V(;j+I.e`Z
%C2S!9Zb[MFJ%K^)S4]D+3Zr[PE)H:\2Hh&ZY>T,Ql+I^RamRFtT(Df<6R)cJ%I]CB@adpq%m<-rf.l%tZWco^'6q?I348-h?R`7K
%[_Q9UHk.CK?GrhFe<4ABfL8mV[(]X#CYK9;S6g!6/LU'pp"bg1lT19#9;h`(?YlEUPUdV@<Y[@E(VCZC(;8AB'5:D<eQQ3c]QERe
%3@j5%2gQ[Y1/<a4!adKeidW?[N],^`DoB7&%f;&j`3='iA&fg#6<O67+/QEV,A/<_,iE[Eq%r('g1@(?RLTg7D4A?5p$#VKo$nQ`
%9pZc8>*'eAQOeT80'_6+NX0]fo!EDK$!&)_/ksI16bd!UQ[tF"LB$9*:9sF%m)Slm]"Nhn`5p(gIU@GC0,C7h@-(>PIUqO`GJ?1>
%5Zu%Y8UEbF;sI]G9W-rYI.Qsq[Zog)Uk8[F^rSGTk.;2qLr;4WP.2V)64IP?#9hD42$j*b668UC74.*c\XD>@*5Y16aZai>5-Hj]
%MOEQ97NPjn6ReRg7o*jV%7\&e`b(9)d][`??(I-K4.T\\K9>?\cq\7DSteYq+<QZ2/'i(jj&%O`iOC=cN[$3^_phfrS)Z\cV@e%!
%9?gAal\mrP@W<-GO`/)',U8?q,TOJ_N-r)CN-mPg,Mt&Ng)50JEuYMu,pV;NcsWa3Goq\7$W6K-:?@%ha7/7pbp4akq[?(#eW.X1
%Q=D&ph6/",HEh3L+W,J7ohDJ\0_2mV,Z'j"]U*"<c,^EMcH$Mc1%I.@iWVlo^RREq5rAV+Mk&_rSOLE?-l#B?Y']Z)ZhPApgRCFu
%MK/*23JQS2!l"7G;rW$h6IGYI!E+2%]&-4SN6e&W]/V=G"VqaZM`+XA&>0+W"&Vr4Mk6+]iOjbDZ8`YU^=-K[-%C@tNRGmX5.X"P
%HfX\U<n+L*N5l@U5H:E+aI1;nP+h*r*PYc&\qug5]a.:rTKGC0\+(Q_6top<&=i;TQ@a2^SKY_(o'C.RAp)Hkhg-kF>ZC!P*"E"$
%!(&V_R:F!LIdlPeN8<++U1@9p@+-?C*RaM#>a&VJ5+.O"VN>_'Rf$!^ND]7pfuGrtY2ZrB3hXD_e+I1aY?6GaDt;#?Vq*N4=WDeM
%e6=j"11t_"QEd#`D7XT5V*C6CqjS*t:tToI=MZb:/P3lR(`fYrN*2i8K^gHS\&Rtp!&?BgP$<7;N@1I*r%L!i1Q[G@Q059UCDNfU
%C_@Qo]b*;D]&;RfMJN&UP?W&++W<l(FW?J`j(T23=+jtI^rWiSl:`G:&9nWchE&T=+0eCpips)'l!k^H<:MXN-6K8EVhqp4)\<LO
%d<fP5VI=JuSHCNt`ULbUVNE\r/9X"$Q5:=]lpK0uS$^/r.h;UlPpP7.2<%lhEqIChFQe)cOJ#^dq%(bC):%?TJ9Blb@d->E^pt5$
%S)0=,nTA8X=c1u\UCYQ5Us!&tN12J58dc`r4VE(G9q_YE0(@n/&][[>hp8FuS]p;-T\03#UX.Zr^t=aspKdMI`^r:If.[ne3d($O
%BGd7;*B_&rS'iH1Y?Hp&^XgFm3%meqZdmfSVlU<n/<mN&qVYN+4l!ss]7Q8j'NFG!`ehPPaa4[m5E>KUZ4t"%&RJq,pUc,Fllg<O
%eaaq[D_Z27Mt*JC=+_e$<u2gbI9=.s3_iR%Qa6>;';&K]1[^s!H:44E`OL4?lB*UL[af)f*2,?[1lnoBM^<sVK2L#H^75K=.49ul
%BB,Lb7'Bu4%@Uf*ka<1n9;+:b=@_ujI7=h*Ti_o$bik<;g!<=dMS6d3ENnneF2N%&@joG6aS8csO\?j=@/LA,Y`;3o@IV"g_cPBO
%7@/bL:!A`*f8YiD]).hY[3fgt&Qhoj%`Y8JW-$kVK4Dr,.C22+Z:KH6-LkloNDEcgK9/i9:B)@Rhq`7AHg$c>@t.6l3kVus+$>p"
%jW8;7pH!\KVCR]*NP`C)EFHC\ft6KK;69&^GY-FOW67t:7hi:!4L;KJU"4jmJ)"H(o`O`]Co-p?Yq8tPD""IsfI,:"]=ld`Efa-)
%&l=opmI6\!QW9$c>L3!sRnoqO>`=a4ll:._RU:$O);oeY%HeKUW,'0CiG8kHN>3rZ1V4Lob1"C0i[RBqOdBi+]i+?1Hh]'1pZ%?%
%1.pia-[e%A>R^!@*l!0!^An3.?i9;\Da/^IpKqg1IeiL4c,Y;tr@;\7o_@jll^K!R^3P2(o%WWfe+`<[rUB@+druo5nc&!l4oOmD
%^HR)=oIhW)5^`qo(r';McQ@UYfnL$OK?N.(qVs4nr>[J&q!J*0nTQ'=IJWHY`P9@*K)^8loZa!lIJi4*:JY>HpYE<fgHXQnpu0[@
%I%O(2)uac;p%[LX]A_N5O2(YPrSN*Lo?XlfVs/*oi]l;to_-TQhu*'Cp>b>.rUej6s*=M6k5BY>lKteLIsUtUj4iHTIJEU2l*m9L
%r%BUG-m/6DMa..0hSfF!-=KQl~>
%AI9_PrivateDataEnd
